//-----------------------------------------------------
// name: "Foo YC-20 simulation"
// author: "Sampo Savolainen"
// license: "GPLv3"
// copyright: "(c)Sampo Savolainen 2009"
//
// Code generated with Faust 0.9.20 (http://faust.grame.fr)
//-----------------------------------------------------
/* link with : "" */
#include "polyblep.cpp"
#include <math.h>
#include <cmath>
template <int N> inline float faustpower(float x) 		{ return powf(x,N); } 
template <int N> inline double faustpower(double x) 	{ return pow(x,N); }
template <int N> inline int faustpower(int x) 			{ return faustpower<N/2>(x) * faustpower<N-N/2>(x); } 
template <> 	 inline int faustpower<0>(int x) 		{ return 1; }
template <> 	 inline int faustpower<1>(int x) 		{ return x; }
#include <cmath>
// abs is now predefined
//template<typename T> T abs (T a)			{ return (a<T(0)) ? -a : a; }


inline int		lsr (int x, int n)			{ return int(((unsigned int)x) >> n); }

/******************************************************************************
*******************************************************************************

							       VECTOR INTRINSICS

*******************************************************************************
*******************************************************************************/

//inline void *aligned_calloc(size_t nmemb, size_t size) { return (void*)((unsigned)(calloc((nmemb*size)+15,sizeof(char)))+15 & 0xfffffff0); }
//inline void *aligned_calloc(size_t nmemb, size_t size) { return (void*)((size_t)(calloc((nmemb*size)+15,sizeof(char)))+15 & ~15); }


/******************************************************************************
*******************************************************************************

			ABSTRACT USER INTERFACE

*******************************************************************************
*******************************************************************************/

struct Meta 
{
    void declare (const char*, const char*) {  }
};

//----------------------------------------------------------------
//  abstract definition of a user interface
//----------------------------------------------------------------
            

class UI
{
	bool	fStopped;
public:
		
	UI() : fStopped(false) {}
	virtual ~UI() {}
	
	virtual void addButton(const char* label, float* zone) = 0;
	virtual void addToggleButton(const char* label, float* zone) = 0;
	virtual void addCheckButton(const char* label, float* zone) = 0;
	virtual void addVerticalSlider(const char* label, float* zone, float init, float min, float max, float step) = 0;
	virtual void addHorizontalSlider(const char* label, float* zone, float init, float min, float max, float step) = 0;
	virtual void addNumEntry(const char* label, float* zone, float init, float min, float max, float step) = 0;
	
	virtual void openFrameBox(const char* label) = 0;
	virtual void openTabBox(const char* label) = 0;
	virtual void openHorizontalBox(const char* label) = 0;
	virtual void openVerticalBox(const char* label) = 0;
	virtual void closeBox() = 0;

    virtual void declare(float* zone, const char* key, const char* value) = 0;
};




/******************************************************************************
*******************************************************************************

			    FAUST DSP

*******************************************************************************
*******************************************************************************/



//----------------------------------------------------------------
//  abstract definition of a signal processor
//----------------------------------------------------------------
			
class dsp {
 protected:
	int fSamplingFreq;
 public:
	dsp() {}
	virtual ~dsp() {}

	virtual int getNumInputs() 						= 0;
	virtual int getNumOutputs() 					= 0;
	virtual void buildUserInterface(UI* interface) 	= 0;
	virtual void init(int samplingRate) 			= 0;
 	virtual void compute(int len, float** inputs, float** outputs) 	= 0;
};
		

//----------------------------------------------------------------------------
//  FAUST generated signal processor
//----------------------------------------------------------------------------
		

#ifndef FAUSTFLOAT
#define FAUSTFLOAT float
#endif  

typedef long double quad;

class mydsp : public dsp{
  private:
	FAUSTFLOAT 	fslider0;
	FAUSTFLOAT 	fbutton0;
	float 	fVec0[2];
	FAUSTFLOAT 	fslider1;
	FAUSTFLOAT 	fslider2;
	float 	fConst0;
	float 	fConst1;
	float 	fRec7[2];
	FAUSTFLOAT 	fslider3;
	float 	fRec6[2];
	int 	iRec5[2];
	float 	fVec1[2];
	int 	iRec8[2];
	float 	fVec2[2];
	int 	iRec9[2];
	float 	fVec3[2];
	int 	iRec10[2];
	float 	fVec4[2];
	int 	iRec11[2];
	float 	fVec5[2];
	float 	fRec3[2];
	float 	fConst2;
	float 	fRec2[2];
	float 	fConst3;
	float 	fConst4;
	float 	fRec1[2];
	FAUSTFLOAT 	fbutton1;
	float 	fVec6[2];
	float 	fRec17[2];
	int 	iRec16[2];
	float 	fVec7[2];
	int 	iRec18[2];
	float 	fVec8[2];
	int 	iRec19[2];
	float 	fVec9[2];
	int 	iRec20[2];
	float 	fVec10[2];
	int 	iRec21[2];
	float 	fVec11[2];
	float 	fRec14[2];
	float 	fConst5;
	float 	fRec13[2];
	float 	fRec12[2];
	FAUSTFLOAT 	fbutton2;
	float 	fVec12[2];
	float 	fRec27[2];
	int 	iRec26[2];
	float 	fVec13[2];
	int 	iRec28[2];
	float 	fVec14[2];
	int 	iRec29[2];
	float 	fVec15[2];
	int 	iRec30[2];
	float 	fVec16[2];
	int 	iRec31[2];
	float 	fVec17[2];
	float 	fRec24[2];
	float 	fRec23[2];
	float 	fRec22[2];
	FAUSTFLOAT 	fbutton3;
	float 	fVec18[2];
	float 	fRec37[2];
	int 	iRec36[2];
	float 	fVec19[2];
	int 	iRec38[2];
	float 	fVec20[2];
	int 	iRec39[2];
	float 	fVec21[2];
	int 	iRec40[2];
	float 	fVec22[2];
	int 	iRec41[2];
	float 	fVec23[2];
	float 	fRec34[2];
	float 	fRec33[2];
	float 	fRec32[2];
	FAUSTFLOAT 	fbutton4;
	float 	fVec24[2];
	float 	fRec47[2];
	int 	iRec46[2];
	float 	fVec25[2];
	int 	iRec48[2];
	float 	fVec26[2];
	int 	iRec49[2];
	float 	fVec27[2];
	int 	iRec50[2];
	float 	fVec28[2];
	int 	iRec51[2];
	float 	fVec29[2];
	float 	fRec44[2];
	float 	fRec43[2];
	float 	fRec42[2];
	FAUSTFLOAT 	fbutton5;
	float 	fVec30[2];
	float 	fRec57[2];
	int 	iRec56[2];
	float 	fVec31[2];
	int 	iRec58[2];
	float 	fVec32[2];
	int 	iRec59[2];
	float 	fVec33[2];
	int 	iRec60[2];
	float 	fVec34[2];
	float 	fRec54[2];
	float 	fConst6;
	float 	fRec53[2];
	float 	fConst7;
	float 	fRec52[2];
	FAUSTFLOAT 	fbutton6;
	float 	fVec35[2];
	float 	fRec66[2];
	int 	iRec65[2];
	float 	fVec36[2];
	int 	iRec67[2];
	float 	fVec37[2];
	int 	iRec68[2];
	float 	fVec38[2];
	int 	iRec69[2];
	float 	fVec39[2];
	float 	fRec63[2];
	float 	fRec62[2];
	float 	fRec61[2];
	FAUSTFLOAT 	fbutton7;
	float 	fVec40[2];
	float 	fRec75[2];
	int 	iRec74[2];
	float 	fVec41[2];
	int 	iRec76[2];
	float 	fVec42[2];
	int 	iRec77[2];
	float 	fVec43[2];
	int 	iRec78[2];
	float 	fVec44[2];
	float 	fRec72[2];
	float 	fRec71[2];
	float 	fRec70[2];
	FAUSTFLOAT 	fbutton8;
	float 	fVec45[2];
	float 	fRec84[2];
	int 	iRec83[2];
	float 	fVec46[2];
	int 	iRec85[2];
	float 	fVec47[2];
	int 	iRec86[2];
	float 	fVec48[2];
	int 	iRec87[2];
	float 	fVec49[2];
	float 	fRec81[2];
	float 	fRec80[2];
	float 	fRec79[2];
	FAUSTFLOAT 	fbutton9;
	float 	fVec50[2];
	float 	fRec93[2];
	int 	iRec92[2];
	float 	fVec51[2];
	int 	iRec94[2];
	float 	fVec52[2];
	int 	iRec95[2];
	float 	fVec53[2];
	int 	iRec96[2];
	float 	fVec54[2];
	float 	fRec90[2];
	float 	fConst8;
	float 	fRec89[2];
	float 	fRec88[2];
	FAUSTFLOAT 	fbutton10;
	float 	fVec55[2];
	float 	fRec102[2];
	int 	iRec101[2];
	float 	fVec56[2];
	int 	iRec103[2];
	float 	fVec57[2];
	int 	iRec104[2];
	float 	fVec58[2];
	int 	iRec105[2];
	float 	fVec59[2];
	float 	fRec99[2];
	float 	fRec98[2];
	float 	fRec97[2];
	FAUSTFLOAT 	fbutton11;
	float 	fVec60[2];
	float 	fRec111[2];
	int 	iRec110[2];
	float 	fVec61[2];
	int 	iRec112[2];
	float 	fVec62[2];
	int 	iRec113[2];
	float 	fVec63[2];
	int 	iRec114[2];
	float 	fVec64[2];
	float 	fRec108[2];
	float 	fRec107[2];
	float 	fRec106[2];
	FAUSTFLOAT 	fbutton12;
	float 	fVec65[2];
	float 	fRec117[2];
	float 	fRec116[2];
	float 	fRec115[2];
	FAUSTFLOAT 	fbutton13;
	float 	fVec66[2];
	float 	fRec121[2];
	float 	fConst9;
	float 	fRec120[2];
	float 	fRec119[2];
	FAUSTFLOAT 	fbutton14;
	float 	fVec67[2];
	float 	fRec125[2];
	float 	fRec124[2];
	float 	fRec123[2];
	FAUSTFLOAT 	fbutton15;
	float 	fVec68[2];
	float 	fRec129[2];
	float 	fRec128[2];
	float 	fRec127[2];
	FAUSTFLOAT 	fbutton16;
	float 	fVec69[2];
	float 	fRec133[2];
	float 	fRec132[2];
	float 	fRec131[2];
	FAUSTFLOAT 	fslider4;
	FAUSTFLOAT 	fbutton17;
	float 	fVec70[2];
	float 	fRec137[2];
	float 	fConst10;
	float 	fRec136[2];
	float 	fRec135[2];
	FAUSTFLOAT 	fbutton18;
	float 	fVec71[2];
	float 	fRec141[2];
	float 	fRec140[2];
	float 	fRec139[2];
	FAUSTFLOAT 	fbutton19;
	float 	fVec72[2];
	float 	fRec145[2];
	float 	fRec144[2];
	float 	fRec143[2];
	FAUSTFLOAT 	fbutton20;
	float 	fVec73[2];
	float 	fRec149[2];
	float 	fRec148[2];
	float 	fRec147[2];
	FAUSTFLOAT 	fbutton21;
	float 	fVec74[2];
	float 	fRec153[2];
	float 	fConst11;
	float 	fRec152[2];
	float 	fRec151[2];
	FAUSTFLOAT 	fbutton22;
	float 	fVec75[2];
	float 	fRec157[2];
	float 	fRec156[2];
	float 	fRec155[2];
	FAUSTFLOAT 	fbutton23;
	float 	fVec76[2];
	float 	fRec161[2];
	float 	fRec160[2];
	float 	fRec159[2];
	FAUSTFLOAT 	fbutton24;
	float 	fVec77[2];
	float 	fRec165[2];
	float 	fRec164[2];
	float 	fRec163[2];
	FAUSTFLOAT 	fbutton25;
	float 	fVec78[2];
	float 	fRec169[2];
	float 	fConst12;
	float 	fRec168[2];
	float 	fRec167[2];
	FAUSTFLOAT 	fbutton26;
	float 	fVec79[2];
	float 	fRec173[2];
	float 	fRec172[2];
	float 	fRec171[2];
	FAUSTFLOAT 	fbutton27;
	float 	fVec80[2];
	float 	fRec177[2];
	float 	fRec176[2];
	float 	fRec175[2];
	FAUSTFLOAT 	fbutton28;
	float 	fVec81[2];
	float 	fRec181[2];
	float 	fRec180[2];
	float 	fRec179[2];
	FAUSTFLOAT 	fbutton29;
	float 	fVec82[2];
	float 	fRec185[2];
	float 	fConst13;
	float 	fRec184[2];
	float 	fRec183[2];
	FAUSTFLOAT 	fbutton30;
	float 	fVec83[2];
	float 	fRec189[2];
	float 	fRec188[2];
	float 	fRec187[2];
	FAUSTFLOAT 	fbutton31;
	float 	fVec84[2];
	float 	fRec193[2];
	float 	fRec192[2];
	float 	fRec191[2];
	FAUSTFLOAT 	fbutton32;
	float 	fVec85[2];
	float 	fRec197[2];
	float 	fRec196[2];
	float 	fRec195[2];
	FAUSTFLOAT 	fbutton33;
	float 	fVec86[2];
	float 	fRec201[2];
	float 	fConst14;
	float 	fRec200[2];
	float 	fRec199[2];
	FAUSTFLOAT 	fbutton34;
	float 	fVec87[2];
	float 	fRec205[2];
	float 	fRec204[2];
	float 	fRec203[2];
	FAUSTFLOAT 	fbutton35;
	float 	fVec88[2];
	float 	fRec209[2];
	float 	fRec208[2];
	float 	fRec207[2];
	FAUSTFLOAT 	fbutton36;
	float 	fVec89[2];
	float 	fRec213[2];
	float 	fRec212[2];
	float 	fRec211[2];
	FAUSTFLOAT 	fbutton37;
	float 	fVec90[2];
	float 	fRec217[2];
	float 	fConst15;
	float 	fRec216[2];
	float 	fRec215[2];
	FAUSTFLOAT 	fbutton38;
	float 	fVec91[2];
	float 	fRec221[2];
	float 	fRec220[2];
	float 	fRec219[2];
	FAUSTFLOAT 	fbutton39;
	float 	fVec92[2];
	float 	fRec225[2];
	float 	fRec224[2];
	float 	fRec223[2];
	FAUSTFLOAT 	fbutton40;
	float 	fVec93[2];
	float 	fRec229[2];
	float 	fRec228[2];
	float 	fRec227[2];
	FAUSTFLOAT 	fbutton41;
	float 	fVec94[2];
	float 	fRec233[2];
	float 	fConst16;
	float 	fRec232[2];
	float 	fRec231[2];
	FAUSTFLOAT 	fbutton42;
	float 	fVec95[2];
	float 	fRec237[2];
	float 	fRec236[2];
	float 	fRec235[2];
	FAUSTFLOAT 	fbutton43;
	float 	fVec96[2];
	float 	fRec241[2];
	float 	fRec240[2];
	float 	fRec239[2];
	FAUSTFLOAT 	fbutton44;
	float 	fVec97[2];
	float 	fRec245[2];
	float 	fRec244[2];
	float 	fRec243[2];
	FAUSTFLOAT 	fbutton45;
	float 	fVec98[2];
	float 	fRec249[2];
	float 	fConst17;
	float 	fRec248[2];
	float 	fRec247[2];
	FAUSTFLOAT 	fbutton46;
	float 	fVec99[2];
	float 	fRec253[2];
	float 	fRec252[2];
	float 	fRec251[2];
	FAUSTFLOAT 	fbutton47;
	float 	fVec100[2];
	float 	fRec257[2];
	float 	fRec256[2];
	float 	fRec255[2];
	FAUSTFLOAT 	fbutton48;
	float 	fVec101[2];
	float 	fRec261[2];
	float 	fRec260[2];
	float 	fRec259[2];
	FAUSTFLOAT 	fbutton49;
	float 	fVec102[2];
	float 	fRec265[2];
	float 	fConst18;
	float 	fRec264[2];
	float 	fRec263[2];
	FAUSTFLOAT 	fbutton50;
	float 	fVec103[2];
	float 	fRec269[2];
	float 	fRec268[2];
	float 	fRec267[2];
	FAUSTFLOAT 	fbutton51;
	float 	fVec104[2];
	float 	fRec273[2];
	float 	fRec272[2];
	float 	fRec271[2];
	FAUSTFLOAT 	fbutton52;
	float 	fVec105[2];
	float 	fRec277[2];
	float 	fRec276[2];
	float 	fRec275[2];
	FAUSTFLOAT 	fbutton53;
	float 	fVec106[2];
	float 	fRec280[2];
	float 	fRec281[2];
	float 	fRec279[2];
	FAUSTFLOAT 	fbutton54;
	float 	fVec107[2];
	float 	fRec283[2];
	float 	fRec284[2];
	float 	fRec282[2];
	FAUSTFLOAT 	fbutton55;
	float 	fVec108[2];
	float 	fRec286[2];
	float 	fRec287[2];
	float 	fRec285[2];
	FAUSTFLOAT 	fbutton56;
	float 	fVec109[2];
	float 	fRec289[2];
	float 	fRec290[2];
	float 	fRec288[2];
	FAUSTFLOAT 	fbutton57;
	float 	fVec110[2];
	float 	fRec292[2];
	float 	fRec293[2];
	float 	fRec291[2];
	FAUSTFLOAT 	fbutton58;
	float 	fVec111[2];
	float 	fRec295[2];
	float 	fRec296[2];
	float 	fRec294[2];
	FAUSTFLOAT 	fbutton59;
	float 	fVec112[2];
	float 	fRec298[2];
	float 	fRec299[2];
	float 	fRec297[2];
	FAUSTFLOAT 	fbutton60;
	float 	fVec113[2];
	float 	fRec301[2];
	float 	fRec302[2];
	float 	fRec300[2];
	float 	fVec114[2];
	float 	fConst19;
	float 	fRec0[2];
	float 	fRec305[2];
	float 	fRec306[2];
	float 	fRec304[2];
	float 	fRec308[2];
	float 	fRec309[2];
	float 	fRec307[2];
	float 	fRec311[2];
	float 	fRec312[2];
	float 	fRec310[2];
	float 	fRec314[2];
	float 	fRec315[2];
	float 	fRec313[2];
	float 	fVec115[2];
	float 	fRec303[2];
	int 	iRec321[2];
	float 	fVec116[2];
	int 	iRec322[2];
	float 	fVec117[2];
	int 	iRec323[2];
	float 	fVec118[2];
	float 	fRec319[2];
	float 	fConst20;
	float 	fRec318[2];
	float 	fConst21;
	float 	fRec317[2];
	int 	iRec328[2];
	float 	fVec119[2];
	int 	iRec329[2];
	float 	fVec120[2];
	int 	iRec330[2];
	float 	fVec121[2];
	float 	fRec326[2];
	float 	fRec325[2];
	float 	fRec324[2];
	int 	iRec335[2];
	float 	fVec122[2];
	int 	iRec336[2];
	float 	fVec123[2];
	int 	iRec337[2];
	float 	fVec124[2];
	float 	fRec333[2];
	float 	fRec332[2];
	float 	fRec331[2];
	int 	iRec342[2];
	float 	fVec125[2];
	int 	iRec343[2];
	float 	fVec126[2];
	int 	iRec344[2];
	float 	fVec127[2];
	float 	fRec340[2];
	float 	fRec339[2];
	float 	fRec338[2];
	int 	iRec349[2];
	float 	fVec128[2];
	int 	iRec350[2];
	float 	fVec129[2];
	int 	iRec351[2];
	float 	fVec130[2];
	float 	fRec347[2];
	float 	fRec346[2];
	float 	fRec345[2];
	int 	iRec356[2];
	float 	fVec131[2];
	int 	iRec357[2];
	float 	fVec132[2];
	int 	iRec358[2];
	float 	fVec133[2];
	float 	fRec354[2];
	float 	fRec353[2];
	float 	fRec352[2];
	int 	iRec363[2];
	float 	fVec134[2];
	int 	iRec364[2];
	float 	fVec135[2];
	int 	iRec365[2];
	float 	fVec136[2];
	float 	fRec361[2];
	float 	fRec360[2];
	float 	fRec359[2];
	int 	iRec370[2];
	float 	fVec137[2];
	int 	iRec371[2];
	float 	fVec138[2];
	float 	fRec368[2];
	float 	fRec367[2];
	float 	fRec366[2];
	int 	iRec376[2];
	float 	fVec139[2];
	int 	iRec377[2];
	float 	fVec140[2];
	float 	fRec374[2];
	float 	fConst22;
	float 	fRec373[2];
	float 	fRec372[2];
	int 	iRec382[2];
	float 	fVec141[2];
	int 	iRec383[2];
	float 	fVec142[2];
	float 	fRec380[2];
	float 	fRec379[2];
	float 	fRec378[2];
	int 	iRec388[2];
	float 	fVec143[2];
	int 	iRec389[2];
	float 	fVec144[2];
	float 	fRec386[2];
	float 	fRec385[2];
	float 	fRec384[2];
	int 	iRec394[2];
	float 	fVec145[2];
	int 	iRec395[2];
	float 	fVec146[2];
	float 	fRec392[2];
	float 	fRec391[2];
	float 	fRec390[2];
	float 	fRec398[2];
	float 	fRec397[2];
	float 	fConst23;
	float 	fRec396[2];
	float 	fRec402[2];
	float 	fRec401[2];
	float 	fRec400[2];
	float 	fRec406[2];
	float 	fRec405[2];
	float 	fRec404[2];
	float 	fRec410[2];
	float 	fRec409[2];
	float 	fRec408[2];
	float 	fRec414[2];
	float 	fConst24;
	float 	fRec413[2];
	float 	fRec412[2];
	float 	fRec418[2];
	float 	fRec417[2];
	float 	fRec416[2];
	float 	fRec422[2];
	float 	fRec421[2];
	float 	fRec420[2];
	float 	fRec426[2];
	float 	fRec425[2];
	float 	fRec424[2];
	float 	fRec430[2];
	float 	fConst25;
	float 	fRec429[2];
	float 	fRec428[2];
	float 	fRec434[2];
	float 	fRec433[2];
	float 	fRec432[2];
	float 	fRec438[2];
	float 	fRec437[2];
	float 	fRec436[2];
	float 	fRec442[2];
	float 	fRec441[2];
	float 	fRec440[2];
	float 	fRec446[2];
	float 	fRec445[2];
	float 	fRec444[2];
	float 	fRec450[2];
	float 	fRec449[2];
	float 	fRec448[2];
	float 	fRec454[2];
	float 	fRec453[2];
	float 	fRec452[2];
	float 	fRec458[2];
	float 	fRec457[2];
	float 	fRec456[2];
	float 	fRec462[2];
	float 	fRec461[2];
	float 	fRec460[2];
	float 	fRec466[2];
	float 	fRec465[2];
	float 	fRec464[2];
	float 	fRec470[2];
	float 	fRec469[2];
	float 	fRec468[2];
	float 	fVec147[2];
	float 	fRec316[2];
	float 	fConst26;
	float 	fConst27;
	int 	IOTA;
	int 	iVec148[4096];
	int 	iConst28;
	int 	iRec473[2];
	float 	fConst29;
	float 	fVec149[2];
	float 	fRec472[2];
	float 	fConst30;
	float 	fVec150[5];
	FAUSTFLOAT 	fslider5;
	FAUSTFLOAT 	fslider6;
	float 	fRec474[2];
	FAUSTFLOAT 	fslider7;
	FAUSTFLOAT 	fslider8;
	float 	fConst31;
	float 	fRec475[2];
	FAUSTFLOAT 	fslider9;
	float 	fVec151[2];
	float 	fConst32;
	float 	fRec477[2];
	float 	fVec152[2];
	float 	fConst33;
	float 	fRec476[2];
	float 	fVec153[2];
	float 	fRec480[2];
	FAUSTFLOAT 	fslider10;
	float 	fVec154[2];
	float 	fConst34;
	float 	fRec479[2];
	float 	fVec155[2];
	float 	fConst35;
	float 	fRec478[2];
	float 	fRec483[2];
	FAUSTFLOAT 	fslider11;
	float 	fVec156[2];
	float 	fConst36;
	float 	fRec482[2];
	float 	fVec157[2];
	float 	fConst37;
	float 	fRec481[2];
	float 	fVec158[2];
	float 	fRec486[2];
	FAUSTFLOAT 	fslider12;
	float 	fVec159[2];
	float 	fConst38;
	float 	fRec485[2];
	float 	fVec160[2];
	float 	fConst39;
	float 	fRec484[2];
	FAUSTFLOAT 	fslider13;
	float 	fRec488[2];
	float 	fRec487[2];
	float 	fRec490[2];
	float 	fRec489[2];
	float 	fRec492[2];
	float 	fRec491[2];
	float 	fRec494[2];
	float 	fRec493[2];
	FAUSTFLOAT 	fslider14;
	FAUSTFLOAT 	fslider15;
	FAUSTFLOAT 	fslider16;
	FAUSTFLOAT 	fslider17;
	FAUSTFLOAT 	fslider18;
	FAUSTFLOAT 	fslider19;
	float 	fVec161[2];
	float 	fRec495[2];
	FAUSTFLOAT 	fslider20;
	FAUSTFLOAT 	fslider21;
	FAUSTFLOAT 	fslider22;
	float 	fRec496[2];
  public:
	static void metadata(Meta* m) 	{ 
		m->declare("name", "Foo YC-20 simulation");
		m->declare("author", "Sampo Savolainen");
		m->declare("license", "GPLv3");
		m->declare("copyright", "(c)Sampo Savolainen 2009");
	}

	virtual int getNumInputs() 	{ return 0; }
	virtual int getNumOutputs() 	{ return 1; }
	static void classInit(int samplingFreq) {
	}
	virtual void instanceInit(int samplingFreq) {
		fSamplingFreq = samplingFreq;
		fslider0 = 0.0f;
		fbutton0 = 0.0;
		for (int i=0; i<2; i++) fVec0[i] = 0;
		fslider1 = 0.0f;
		fslider2 = 0.0f;
		fConst0 = float(fSamplingFreq);
		fConst1 = (1.0f / fConst0);
		for (int i=0; i<2; i++) fRec7[i] = 0;
		fslider3 = 0.0f;
		for (int i=0; i<2; i++) fRec6[i] = 0;
		for (int i=0; i<2; i++) iRec5[i] = 0;
		for (int i=0; i<2; i++) fVec1[i] = 0;
		for (int i=0; i<2; i++) iRec8[i] = 0;
		for (int i=0; i<2; i++) fVec2[i] = 0;
		for (int i=0; i<2; i++) iRec9[i] = 0;
		for (int i=0; i<2; i++) fVec3[i] = 0;
		for (int i=0; i<2; i++) iRec10[i] = 0;
		for (int i=0; i<2; i++) fVec4[i] = 0;
		for (int i=0; i<2; i++) iRec11[i] = 0;
		for (int i=0; i<2; i++) fVec5[i] = 0;
		for (int i=0; i<2; i++) fRec3[i] = 0;
		fConst2 = (1470.5882352941176f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec2[i] = 0;
		fConst3 = (1.0f / fSamplingFreq);
		fConst4 = (0.003596453201970443f / (fConst3 + 0.003596453201970443f));
		for (int i=0; i<2; i++) fRec1[i] = 0;
		fbutton1 = 0.0;
		for (int i=0; i<2; i++) fVec6[i] = 0;
		for (int i=0; i<2; i++) fRec17[i] = 0;
		for (int i=0; i<2; i++) iRec16[i] = 0;
		for (int i=0; i<2; i++) fVec7[i] = 0;
		for (int i=0; i<2; i++) iRec18[i] = 0;
		for (int i=0; i<2; i++) fVec8[i] = 0;
		for (int i=0; i<2; i++) iRec19[i] = 0;
		for (int i=0; i<2; i++) fVec9[i] = 0;
		for (int i=0; i<2; i++) iRec20[i] = 0;
		for (int i=0; i<2; i++) fVec10[i] = 0;
		for (int i=0; i<2; i++) iRec21[i] = 0;
		for (int i=0; i<2; i++) fVec11[i] = 0;
		for (int i=0; i<2; i++) fRec14[i] = 0;
		fConst5 = (1785.7142857142858f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec13[i] = 0;
		for (int i=0; i<2; i++) fRec12[i] = 0;
		fbutton2 = 0.0;
		for (int i=0; i<2; i++) fVec12[i] = 0;
		for (int i=0; i<2; i++) fRec27[i] = 0;
		for (int i=0; i<2; i++) iRec26[i] = 0;
		for (int i=0; i<2; i++) fVec13[i] = 0;
		for (int i=0; i<2; i++) iRec28[i] = 0;
		for (int i=0; i<2; i++) fVec14[i] = 0;
		for (int i=0; i<2; i++) iRec29[i] = 0;
		for (int i=0; i<2; i++) fVec15[i] = 0;
		for (int i=0; i<2; i++) iRec30[i] = 0;
		for (int i=0; i<2; i++) fVec16[i] = 0;
		for (int i=0; i<2; i++) iRec31[i] = 0;
		for (int i=0; i<2; i++) fVec17[i] = 0;
		for (int i=0; i<2; i++) fRec24[i] = 0;
		for (int i=0; i<2; i++) fRec23[i] = 0;
		for (int i=0; i<2; i++) fRec22[i] = 0;
		fbutton3 = 0.0;
		for (int i=0; i<2; i++) fVec18[i] = 0;
		for (int i=0; i<2; i++) fRec37[i] = 0;
		for (int i=0; i<2; i++) iRec36[i] = 0;
		for (int i=0; i<2; i++) fVec19[i] = 0;
		for (int i=0; i<2; i++) iRec38[i] = 0;
		for (int i=0; i<2; i++) fVec20[i] = 0;
		for (int i=0; i<2; i++) iRec39[i] = 0;
		for (int i=0; i<2; i++) fVec21[i] = 0;
		for (int i=0; i<2; i++) iRec40[i] = 0;
		for (int i=0; i<2; i++) fVec22[i] = 0;
		for (int i=0; i<2; i++) iRec41[i] = 0;
		for (int i=0; i<2; i++) fVec23[i] = 0;
		for (int i=0; i<2; i++) fRec34[i] = 0;
		for (int i=0; i<2; i++) fRec33[i] = 0;
		for (int i=0; i<2; i++) fRec32[i] = 0;
		fbutton4 = 0.0;
		for (int i=0; i<2; i++) fVec24[i] = 0;
		for (int i=0; i<2; i++) fRec47[i] = 0;
		for (int i=0; i<2; i++) iRec46[i] = 0;
		for (int i=0; i<2; i++) fVec25[i] = 0;
		for (int i=0; i<2; i++) iRec48[i] = 0;
		for (int i=0; i<2; i++) fVec26[i] = 0;
		for (int i=0; i<2; i++) iRec49[i] = 0;
		for (int i=0; i<2; i++) fVec27[i] = 0;
		for (int i=0; i<2; i++) iRec50[i] = 0;
		for (int i=0; i<2; i++) fVec28[i] = 0;
		for (int i=0; i<2; i++) iRec51[i] = 0;
		for (int i=0; i<2; i++) fVec29[i] = 0;
		for (int i=0; i<2; i++) fRec44[i] = 0;
		for (int i=0; i<2; i++) fRec43[i] = 0;
		for (int i=0; i<2; i++) fRec42[i] = 0;
		fbutton5 = 0.0;
		for (int i=0; i<2; i++) fVec30[i] = 0;
		for (int i=0; i<2; i++) fRec57[i] = 0;
		for (int i=0; i<2; i++) iRec56[i] = 0;
		for (int i=0; i<2; i++) fVec31[i] = 0;
		for (int i=0; i<2; i++) iRec58[i] = 0;
		for (int i=0; i<2; i++) fVec32[i] = 0;
		for (int i=0; i<2; i++) iRec59[i] = 0;
		for (int i=0; i<2; i++) fVec33[i] = 0;
		for (int i=0; i<2; i++) iRec60[i] = 0;
		for (int i=0; i<2; i++) fVec34[i] = 0;
		for (int i=0; i<2; i++) fRec54[i] = 0;
		fConst6 = (2127.659574468085f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec53[i] = 0;
		fConst7 = (0.007374545454545454f / (fConst3 + 0.007374545454545454f));
		for (int i=0; i<2; i++) fRec52[i] = 0;
		fbutton6 = 0.0;
		for (int i=0; i<2; i++) fVec35[i] = 0;
		for (int i=0; i<2; i++) fRec66[i] = 0;
		for (int i=0; i<2; i++) iRec65[i] = 0;
		for (int i=0; i<2; i++) fVec36[i] = 0;
		for (int i=0; i<2; i++) iRec67[i] = 0;
		for (int i=0; i<2; i++) fVec37[i] = 0;
		for (int i=0; i<2; i++) iRec68[i] = 0;
		for (int i=0; i<2; i++) fVec38[i] = 0;
		for (int i=0; i<2; i++) iRec69[i] = 0;
		for (int i=0; i<2; i++) fVec39[i] = 0;
		for (int i=0; i<2; i++) fRec63[i] = 0;
		for (int i=0; i<2; i++) fRec62[i] = 0;
		for (int i=0; i<2; i++) fRec61[i] = 0;
		fbutton7 = 0.0;
		for (int i=0; i<2; i++) fVec40[i] = 0;
		for (int i=0; i<2; i++) fRec75[i] = 0;
		for (int i=0; i<2; i++) iRec74[i] = 0;
		for (int i=0; i<2; i++) fVec41[i] = 0;
		for (int i=0; i<2; i++) iRec76[i] = 0;
		for (int i=0; i<2; i++) fVec42[i] = 0;
		for (int i=0; i<2; i++) iRec77[i] = 0;
		for (int i=0; i<2; i++) fVec43[i] = 0;
		for (int i=0; i<2; i++) iRec78[i] = 0;
		for (int i=0; i<2; i++) fVec44[i] = 0;
		for (int i=0; i<2; i++) fRec72[i] = 0;
		for (int i=0; i<2; i++) fRec71[i] = 0;
		for (int i=0; i<2; i++) fRec70[i] = 0;
		fbutton8 = 0.0;
		for (int i=0; i<2; i++) fVec45[i] = 0;
		for (int i=0; i<2; i++) fRec84[i] = 0;
		for (int i=0; i<2; i++) iRec83[i] = 0;
		for (int i=0; i<2; i++) fVec46[i] = 0;
		for (int i=0; i<2; i++) iRec85[i] = 0;
		for (int i=0; i<2; i++) fVec47[i] = 0;
		for (int i=0; i<2; i++) iRec86[i] = 0;
		for (int i=0; i<2; i++) fVec48[i] = 0;
		for (int i=0; i<2; i++) iRec87[i] = 0;
		for (int i=0; i<2; i++) fVec49[i] = 0;
		for (int i=0; i<2; i++) fRec81[i] = 0;
		for (int i=0; i<2; i++) fRec80[i] = 0;
		for (int i=0; i<2; i++) fRec79[i] = 0;
		fbutton9 = 0.0;
		for (int i=0; i<2; i++) fVec50[i] = 0;
		for (int i=0; i<2; i++) fRec93[i] = 0;
		for (int i=0; i<2; i++) iRec92[i] = 0;
		for (int i=0; i<2; i++) fVec51[i] = 0;
		for (int i=0; i<2; i++) iRec94[i] = 0;
		for (int i=0; i<2; i++) fVec52[i] = 0;
		for (int i=0; i<2; i++) iRec95[i] = 0;
		for (int i=0; i<2; i++) fVec53[i] = 0;
		for (int i=0; i<2; i++) iRec96[i] = 0;
		for (int i=0; i<2; i++) fVec54[i] = 0;
		for (int i=0; i<2; i++) fRec90[i] = 0;
		fConst8 = (2564.102564102564f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec89[i] = 0;
		for (int i=0; i<2; i++) fRec88[i] = 0;
		fbutton10 = 0.0;
		for (int i=0; i<2; i++) fVec55[i] = 0;
		for (int i=0; i<2; i++) fRec102[i] = 0;
		for (int i=0; i<2; i++) iRec101[i] = 0;
		for (int i=0; i<2; i++) fVec56[i] = 0;
		for (int i=0; i<2; i++) iRec103[i] = 0;
		for (int i=0; i<2; i++) fVec57[i] = 0;
		for (int i=0; i<2; i++) iRec104[i] = 0;
		for (int i=0; i<2; i++) fVec58[i] = 0;
		for (int i=0; i<2; i++) iRec105[i] = 0;
		for (int i=0; i<2; i++) fVec59[i] = 0;
		for (int i=0; i<2; i++) fRec99[i] = 0;
		for (int i=0; i<2; i++) fRec98[i] = 0;
		for (int i=0; i<2; i++) fRec97[i] = 0;
		fbutton11 = 0.0;
		for (int i=0; i<2; i++) fVec60[i] = 0;
		for (int i=0; i<2; i++) fRec111[i] = 0;
		for (int i=0; i<2; i++) iRec110[i] = 0;
		for (int i=0; i<2; i++) fVec61[i] = 0;
		for (int i=0; i<2; i++) iRec112[i] = 0;
		for (int i=0; i<2; i++) fVec62[i] = 0;
		for (int i=0; i<2; i++) iRec113[i] = 0;
		for (int i=0; i<2; i++) fVec63[i] = 0;
		for (int i=0; i<2; i++) iRec114[i] = 0;
		for (int i=0; i<2; i++) fVec64[i] = 0;
		for (int i=0; i<2; i++) fRec108[i] = 0;
		for (int i=0; i<2; i++) fRec107[i] = 0;
		for (int i=0; i<2; i++) fRec106[i] = 0;
		fbutton12 = 0.0;
		for (int i=0; i<2; i++) fVec65[i] = 0;
		for (int i=0; i<2; i++) fRec117[i] = 0;
		for (int i=0; i<2; i++) fRec116[i] = 0;
		for (int i=0; i<2; i++) fRec115[i] = 0;
		fbutton13 = 0.0;
		for (int i=0; i<2; i++) fVec66[i] = 0;
		for (int i=0; i<2; i++) fRec121[i] = 0;
		fConst9 = (3703.703703703704f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec120[i] = 0;
		for (int i=0; i<2; i++) fRec119[i] = 0;
		fbutton14 = 0.0;
		for (int i=0; i<2; i++) fVec67[i] = 0;
		for (int i=0; i<2; i++) fRec125[i] = 0;
		for (int i=0; i<2; i++) fRec124[i] = 0;
		for (int i=0; i<2; i++) fRec123[i] = 0;
		fbutton15 = 0.0;
		for (int i=0; i<2; i++) fVec68[i] = 0;
		for (int i=0; i<2; i++) fRec129[i] = 0;
		for (int i=0; i<2; i++) fRec128[i] = 0;
		for (int i=0; i<2; i++) fRec127[i] = 0;
		fbutton16 = 0.0;
		for (int i=0; i<2; i++) fVec69[i] = 0;
		for (int i=0; i<2; i++) fRec133[i] = 0;
		for (int i=0; i<2; i++) fRec132[i] = 0;
		for (int i=0; i<2; i++) fRec131[i] = 0;
		fslider4 = 0.0f;
		fbutton17 = 0.0;
		for (int i=0; i<2; i++) fVec70[i] = 0;
		for (int i=0; i<2; i++) fRec137[i] = 0;
		fConst10 = (4545.454545454545f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec136[i] = 0;
		for (int i=0; i<2; i++) fRec135[i] = 0;
		fbutton18 = 0.0;
		for (int i=0; i<2; i++) fVec71[i] = 0;
		for (int i=0; i<2; i++) fRec141[i] = 0;
		for (int i=0; i<2; i++) fRec140[i] = 0;
		for (int i=0; i<2; i++) fRec139[i] = 0;
		fbutton19 = 0.0;
		for (int i=0; i<2; i++) fVec72[i] = 0;
		for (int i=0; i<2; i++) fRec145[i] = 0;
		for (int i=0; i<2; i++) fRec144[i] = 0;
		for (int i=0; i<2; i++) fRec143[i] = 0;
		fbutton20 = 0.0;
		for (int i=0; i<2; i++) fVec73[i] = 0;
		for (int i=0; i<2; i++) fRec149[i] = 0;
		for (int i=0; i<2; i++) fRec148[i] = 0;
		for (int i=0; i<2; i++) fRec147[i] = 0;
		fbutton21 = 0.0;
		for (int i=0; i<2; i++) fVec74[i] = 0;
		for (int i=0; i<2; i++) fRec153[i] = 0;
		fConst11 = (5555.555555555556f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec152[i] = 0;
		for (int i=0; i<2; i++) fRec151[i] = 0;
		fbutton22 = 0.0;
		for (int i=0; i<2; i++) fVec75[i] = 0;
		for (int i=0; i<2; i++) fRec157[i] = 0;
		for (int i=0; i<2; i++) fRec156[i] = 0;
		for (int i=0; i<2; i++) fRec155[i] = 0;
		fbutton23 = 0.0;
		for (int i=0; i<2; i++) fVec76[i] = 0;
		for (int i=0; i<2; i++) fRec161[i] = 0;
		for (int i=0; i<2; i++) fRec160[i] = 0;
		for (int i=0; i<2; i++) fRec159[i] = 0;
		fbutton24 = 0.0;
		for (int i=0; i<2; i++) fVec77[i] = 0;
		for (int i=0; i<2; i++) fRec165[i] = 0;
		for (int i=0; i<2; i++) fRec164[i] = 0;
		for (int i=0; i<2; i++) fRec163[i] = 0;
		fbutton25 = 0.0;
		for (int i=0; i<2; i++) fVec78[i] = 0;
		for (int i=0; i<2; i++) fRec169[i] = 0;
		fConst12 = (8333.333333333334f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec168[i] = 0;
		for (int i=0; i<2; i++) fRec167[i] = 0;
		fbutton26 = 0.0;
		for (int i=0; i<2; i++) fVec79[i] = 0;
		for (int i=0; i<2; i++) fRec173[i] = 0;
		for (int i=0; i<2; i++) fRec172[i] = 0;
		for (int i=0; i<2; i++) fRec171[i] = 0;
		fbutton27 = 0.0;
		for (int i=0; i<2; i++) fVec80[i] = 0;
		for (int i=0; i<2; i++) fRec177[i] = 0;
		for (int i=0; i<2; i++) fRec176[i] = 0;
		for (int i=0; i<2; i++) fRec175[i] = 0;
		fbutton28 = 0.0;
		for (int i=0; i<2; i++) fVec81[i] = 0;
		for (int i=0; i<2; i++) fRec181[i] = 0;
		for (int i=0; i<2; i++) fRec180[i] = 0;
		for (int i=0; i<2; i++) fRec179[i] = 0;
		fbutton29 = 0.0;
		for (int i=0; i<2; i++) fVec82[i] = 0;
		for (int i=0; i<2; i++) fRec185[i] = 0;
		fConst13 = (1e+04f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec184[i] = 0;
		for (int i=0; i<2; i++) fRec183[i] = 0;
		fbutton30 = 0.0;
		for (int i=0; i<2; i++) fVec83[i] = 0;
		for (int i=0; i<2; i++) fRec189[i] = 0;
		for (int i=0; i<2; i++) fRec188[i] = 0;
		for (int i=0; i<2; i++) fRec187[i] = 0;
		fbutton31 = 0.0;
		for (int i=0; i<2; i++) fVec84[i] = 0;
		for (int i=0; i<2; i++) fRec193[i] = 0;
		for (int i=0; i<2; i++) fRec192[i] = 0;
		for (int i=0; i<2; i++) fRec191[i] = 0;
		fbutton32 = 0.0;
		for (int i=0; i<2; i++) fVec85[i] = 0;
		for (int i=0; i<2; i++) fRec197[i] = 0;
		for (int i=0; i<2; i++) fRec196[i] = 0;
		for (int i=0; i<2; i++) fRec195[i] = 0;
		fbutton33 = 0.0;
		for (int i=0; i<2; i++) fVec86[i] = 0;
		for (int i=0; i<2; i++) fRec201[i] = 0;
		fConst14 = (12195.121951219513f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec200[i] = 0;
		for (int i=0; i<2; i++) fRec199[i] = 0;
		fbutton34 = 0.0;
		for (int i=0; i<2; i++) fVec87[i] = 0;
		for (int i=0; i<2; i++) fRec205[i] = 0;
		for (int i=0; i<2; i++) fRec204[i] = 0;
		for (int i=0; i<2; i++) fRec203[i] = 0;
		fbutton35 = 0.0;
		for (int i=0; i<2; i++) fVec88[i] = 0;
		for (int i=0; i<2; i++) fRec209[i] = 0;
		for (int i=0; i<2; i++) fRec208[i] = 0;
		for (int i=0; i<2; i++) fRec207[i] = 0;
		fbutton36 = 0.0;
		for (int i=0; i<2; i++) fVec89[i] = 0;
		for (int i=0; i<2; i++) fRec213[i] = 0;
		for (int i=0; i<2; i++) fRec212[i] = 0;
		for (int i=0; i<2; i++) fRec211[i] = 0;
		fbutton37 = 0.0;
		for (int i=0; i<2; i++) fVec90[i] = 0;
		for (int i=0; i<2; i++) fRec217[i] = 0;
		fConst15 = (17857.14285714286f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec216[i] = 0;
		for (int i=0; i<2; i++) fRec215[i] = 0;
		fbutton38 = 0.0;
		for (int i=0; i<2; i++) fVec91[i] = 0;
		for (int i=0; i<2; i++) fRec221[i] = 0;
		for (int i=0; i<2; i++) fRec220[i] = 0;
		for (int i=0; i<2; i++) fRec219[i] = 0;
		fbutton39 = 0.0;
		for (int i=0; i<2; i++) fVec92[i] = 0;
		for (int i=0; i<2; i++) fRec225[i] = 0;
		for (int i=0; i<2; i++) fRec224[i] = 0;
		for (int i=0; i<2; i++) fRec223[i] = 0;
		fbutton40 = 0.0;
		for (int i=0; i<2; i++) fVec93[i] = 0;
		for (int i=0; i<2; i++) fRec229[i] = 0;
		for (int i=0; i<2; i++) fRec228[i] = 0;
		for (int i=0; i<2; i++) fRec227[i] = 0;
		fbutton41 = 0.0;
		for (int i=0; i<2; i++) fVec94[i] = 0;
		for (int i=0; i<2; i++) fRec233[i] = 0;
		fConst16 = (21276.59574468085f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec232[i] = 0;
		for (int i=0; i<2; i++) fRec231[i] = 0;
		fbutton42 = 0.0;
		for (int i=0; i<2; i++) fVec95[i] = 0;
		for (int i=0; i<2; i++) fRec237[i] = 0;
		for (int i=0; i<2; i++) fRec236[i] = 0;
		for (int i=0; i<2; i++) fRec235[i] = 0;
		fbutton43 = 0.0;
		for (int i=0; i<2; i++) fVec96[i] = 0;
		for (int i=0; i<2; i++) fRec241[i] = 0;
		for (int i=0; i<2; i++) fRec240[i] = 0;
		for (int i=0; i<2; i++) fRec239[i] = 0;
		fbutton44 = 0.0;
		for (int i=0; i<2; i++) fVec97[i] = 0;
		for (int i=0; i<2; i++) fRec245[i] = 0;
		for (int i=0; i<2; i++) fRec244[i] = 0;
		for (int i=0; i<2; i++) fRec243[i] = 0;
		fbutton45 = 0.0;
		for (int i=0; i<2; i++) fVec98[i] = 0;
		for (int i=0; i<2; i++) fRec249[i] = 0;
		fConst17 = (25641.02564102564f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec248[i] = 0;
		for (int i=0; i<2; i++) fRec247[i] = 0;
		fbutton46 = 0.0;
		for (int i=0; i<2; i++) fVec99[i] = 0;
		for (int i=0; i<2; i++) fRec253[i] = 0;
		for (int i=0; i<2; i++) fRec252[i] = 0;
		for (int i=0; i<2; i++) fRec251[i] = 0;
		fbutton47 = 0.0;
		for (int i=0; i<2; i++) fVec100[i] = 0;
		for (int i=0; i<2; i++) fRec257[i] = 0;
		for (int i=0; i<2; i++) fRec256[i] = 0;
		for (int i=0; i<2; i++) fRec255[i] = 0;
		fbutton48 = 0.0;
		for (int i=0; i<2; i++) fVec101[i] = 0;
		for (int i=0; i<2; i++) fRec261[i] = 0;
		for (int i=0; i<2; i++) fRec260[i] = 0;
		for (int i=0; i<2; i++) fRec259[i] = 0;
		fbutton49 = 0.0;
		for (int i=0; i<2; i++) fVec102[i] = 0;
		for (int i=0; i<2; i++) fRec265[i] = 0;
		fConst18 = (37037.03703703704f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec264[i] = 0;
		for (int i=0; i<2; i++) fRec263[i] = 0;
		fbutton50 = 0.0;
		for (int i=0; i<2; i++) fVec103[i] = 0;
		for (int i=0; i<2; i++) fRec269[i] = 0;
		for (int i=0; i<2; i++) fRec268[i] = 0;
		for (int i=0; i<2; i++) fRec267[i] = 0;
		fbutton51 = 0.0;
		for (int i=0; i<2; i++) fVec104[i] = 0;
		for (int i=0; i<2; i++) fRec273[i] = 0;
		for (int i=0; i<2; i++) fRec272[i] = 0;
		for (int i=0; i<2; i++) fRec271[i] = 0;
		fbutton52 = 0.0;
		for (int i=0; i<2; i++) fVec105[i] = 0;
		for (int i=0; i<2; i++) fRec277[i] = 0;
		for (int i=0; i<2; i++) fRec276[i] = 0;
		for (int i=0; i<2; i++) fRec275[i] = 0;
		fbutton53 = 0.0;
		for (int i=0; i<2; i++) fVec106[i] = 0;
		for (int i=0; i<2; i++) fRec280[i] = 0;
		for (int i=0; i<2; i++) fRec281[i] = 0;
		for (int i=0; i<2; i++) fRec279[i] = 0;
		fbutton54 = 0.0;
		for (int i=0; i<2; i++) fVec107[i] = 0;
		for (int i=0; i<2; i++) fRec283[i] = 0;
		for (int i=0; i<2; i++) fRec284[i] = 0;
		for (int i=0; i<2; i++) fRec282[i] = 0;
		fbutton55 = 0.0;
		for (int i=0; i<2; i++) fVec108[i] = 0;
		for (int i=0; i<2; i++) fRec286[i] = 0;
		for (int i=0; i<2; i++) fRec287[i] = 0;
		for (int i=0; i<2; i++) fRec285[i] = 0;
		fbutton56 = 0.0;
		for (int i=0; i<2; i++) fVec109[i] = 0;
		for (int i=0; i<2; i++) fRec289[i] = 0;
		for (int i=0; i<2; i++) fRec290[i] = 0;
		for (int i=0; i<2; i++) fRec288[i] = 0;
		fbutton57 = 0.0;
		for (int i=0; i<2; i++) fVec110[i] = 0;
		for (int i=0; i<2; i++) fRec292[i] = 0;
		for (int i=0; i<2; i++) fRec293[i] = 0;
		for (int i=0; i<2; i++) fRec291[i] = 0;
		fbutton58 = 0.0;
		for (int i=0; i<2; i++) fVec111[i] = 0;
		for (int i=0; i<2; i++) fRec295[i] = 0;
		for (int i=0; i<2; i++) fRec296[i] = 0;
		for (int i=0; i<2; i++) fRec294[i] = 0;
		fbutton59 = 0.0;
		for (int i=0; i<2; i++) fVec112[i] = 0;
		for (int i=0; i<2; i++) fRec298[i] = 0;
		for (int i=0; i<2; i++) fRec299[i] = 0;
		for (int i=0; i<2; i++) fRec297[i] = 0;
		fbutton60 = 0.0;
		for (int i=0; i<2; i++) fVec113[i] = 0;
		for (int i=0; i<2; i++) fRec301[i] = 0;
		for (int i=0; i<2; i++) fRec302[i] = 0;
		for (int i=0; i<2; i++) fRec300[i] = 0;
		for (int i=0; i<2; i++) fVec114[i] = 0;
		fConst19 = (0.0001f / (0.0001f + fConst3));
		for (int i=0; i<2; i++) fRec0[i] = 0;
		for (int i=0; i<2; i++) fRec305[i] = 0;
		for (int i=0; i<2; i++) fRec306[i] = 0;
		for (int i=0; i<2; i++) fRec304[i] = 0;
		for (int i=0; i<2; i++) fRec308[i] = 0;
		for (int i=0; i<2; i++) fRec309[i] = 0;
		for (int i=0; i<2; i++) fRec307[i] = 0;
		for (int i=0; i<2; i++) fRec311[i] = 0;
		for (int i=0; i<2; i++) fRec312[i] = 0;
		for (int i=0; i<2; i++) fRec310[i] = 0;
		for (int i=0; i<2; i++) fRec314[i] = 0;
		for (int i=0; i<2; i++) fRec315[i] = 0;
		for (int i=0; i<2; i++) fRec313[i] = 0;
		for (int i=0; i<2; i++) fVec115[i] = 0;
		for (int i=0; i<2; i++) fRec303[i] = 0;
		for (int i=0; i<2; i++) iRec321[i] = 0;
		for (int i=0; i<2; i++) fVec116[i] = 0;
		for (int i=0; i<2; i++) iRec322[i] = 0;
		for (int i=0; i<2; i++) fVec117[i] = 0;
		for (int i=0; i<2; i++) iRec323[i] = 0;
		for (int i=0; i<2; i++) fVec118[i] = 0;
		for (int i=0; i<2; i++) fRec319[i] = 0;
		fConst20 = (666.6666666666666f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec318[i] = 0;
		fConst21 = (0.0016849851632047478f / (fConst3 + 0.0016849851632047478f));
		for (int i=0; i<2; i++) fRec317[i] = 0;
		for (int i=0; i<2; i++) iRec328[i] = 0;
		for (int i=0; i<2; i++) fVec119[i] = 0;
		for (int i=0; i<2; i++) iRec329[i] = 0;
		for (int i=0; i<2; i++) fVec120[i] = 0;
		for (int i=0; i<2; i++) iRec330[i] = 0;
		for (int i=0; i<2; i++) fVec121[i] = 0;
		for (int i=0; i<2; i++) fRec326[i] = 0;
		for (int i=0; i<2; i++) fRec325[i] = 0;
		for (int i=0; i<2; i++) fRec324[i] = 0;
		for (int i=0; i<2; i++) iRec335[i] = 0;
		for (int i=0; i<2; i++) fVec122[i] = 0;
		for (int i=0; i<2; i++) iRec336[i] = 0;
		for (int i=0; i<2; i++) fVec123[i] = 0;
		for (int i=0; i<2; i++) iRec337[i] = 0;
		for (int i=0; i<2; i++) fVec124[i] = 0;
		for (int i=0; i<2; i++) fRec333[i] = 0;
		for (int i=0; i<2; i++) fRec332[i] = 0;
		for (int i=0; i<2; i++) fRec331[i] = 0;
		for (int i=0; i<2; i++) iRec342[i] = 0;
		for (int i=0; i<2; i++) fVec125[i] = 0;
		for (int i=0; i<2; i++) iRec343[i] = 0;
		for (int i=0; i<2; i++) fVec126[i] = 0;
		for (int i=0; i<2; i++) iRec344[i] = 0;
		for (int i=0; i<2; i++) fVec127[i] = 0;
		for (int i=0; i<2; i++) fRec340[i] = 0;
		for (int i=0; i<2; i++) fRec339[i] = 0;
		for (int i=0; i<2; i++) fRec338[i] = 0;
		for (int i=0; i<2; i++) iRec349[i] = 0;
		for (int i=0; i<2; i++) fVec128[i] = 0;
		for (int i=0; i<2; i++) iRec350[i] = 0;
		for (int i=0; i<2; i++) fVec129[i] = 0;
		for (int i=0; i<2; i++) iRec351[i] = 0;
		for (int i=0; i<2; i++) fVec130[i] = 0;
		for (int i=0; i<2; i++) fRec347[i] = 0;
		for (int i=0; i<2; i++) fRec346[i] = 0;
		for (int i=0; i<2; i++) fRec345[i] = 0;
		for (int i=0; i<2; i++) iRec356[i] = 0;
		for (int i=0; i<2; i++) fVec131[i] = 0;
		for (int i=0; i<2; i++) iRec357[i] = 0;
		for (int i=0; i<2; i++) fVec132[i] = 0;
		for (int i=0; i<2; i++) iRec358[i] = 0;
		for (int i=0; i<2; i++) fVec133[i] = 0;
		for (int i=0; i<2; i++) fRec354[i] = 0;
		for (int i=0; i<2; i++) fRec353[i] = 0;
		for (int i=0; i<2; i++) fRec352[i] = 0;
		for (int i=0; i<2; i++) iRec363[i] = 0;
		for (int i=0; i<2; i++) fVec134[i] = 0;
		for (int i=0; i<2; i++) iRec364[i] = 0;
		for (int i=0; i<2; i++) fVec135[i] = 0;
		for (int i=0; i<2; i++) iRec365[i] = 0;
		for (int i=0; i<2; i++) fVec136[i] = 0;
		for (int i=0; i<2; i++) fRec361[i] = 0;
		for (int i=0; i<2; i++) fRec360[i] = 0;
		for (int i=0; i<2; i++) fRec359[i] = 0;
		for (int i=0; i<2; i++) iRec370[i] = 0;
		for (int i=0; i<2; i++) fVec137[i] = 0;
		for (int i=0; i<2; i++) iRec371[i] = 0;
		for (int i=0; i<2; i++) fVec138[i] = 0;
		for (int i=0; i<2; i++) fRec368[i] = 0;
		for (int i=0; i<2; i++) fRec367[i] = 0;
		for (int i=0; i<2; i++) fRec366[i] = 0;
		for (int i=0; i<2; i++) iRec376[i] = 0;
		for (int i=0; i<2; i++) fVec139[i] = 0;
		for (int i=0; i<2; i++) iRec377[i] = 0;
		for (int i=0; i<2; i++) fVec140[i] = 0;
		for (int i=0; i<2; i++) fRec374[i] = 0;
		fConst22 = (833.3333333333334f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec373[i] = 0;
		for (int i=0; i<2; i++) fRec372[i] = 0;
		for (int i=0; i<2; i++) iRec382[i] = 0;
		for (int i=0; i<2; i++) fVec141[i] = 0;
		for (int i=0; i<2; i++) iRec383[i] = 0;
		for (int i=0; i<2; i++) fVec142[i] = 0;
		for (int i=0; i<2; i++) fRec380[i] = 0;
		for (int i=0; i<2; i++) fRec379[i] = 0;
		for (int i=0; i<2; i++) fRec378[i] = 0;
		for (int i=0; i<2; i++) iRec388[i] = 0;
		for (int i=0; i<2; i++) fVec143[i] = 0;
		for (int i=0; i<2; i++) iRec389[i] = 0;
		for (int i=0; i<2; i++) fVec144[i] = 0;
		for (int i=0; i<2; i++) fRec386[i] = 0;
		for (int i=0; i<2; i++) fRec385[i] = 0;
		for (int i=0; i<2; i++) fRec384[i] = 0;
		for (int i=0; i<2; i++) iRec394[i] = 0;
		for (int i=0; i<2; i++) fVec145[i] = 0;
		for (int i=0; i<2; i++) iRec395[i] = 0;
		for (int i=0; i<2; i++) fVec146[i] = 0;
		for (int i=0; i<2; i++) fRec392[i] = 0;
		for (int i=0; i<2; i++) fRec391[i] = 0;
		for (int i=0; i<2; i++) fRec390[i] = 0;
		for (int i=0; i<2; i++) fRec398[i] = 0;
		for (int i=0; i<2; i++) fRec397[i] = 0;
		fConst23 = (0.00223066398390342f / (fConst3 + 0.00223066398390342f));
		for (int i=0; i<2; i++) fRec396[i] = 0;
		for (int i=0; i<2; i++) fRec402[i] = 0;
		for (int i=0; i<2; i++) fRec401[i] = 0;
		for (int i=0; i<2; i++) fRec400[i] = 0;
		for (int i=0; i<2; i++) fRec406[i] = 0;
		for (int i=0; i<2; i++) fRec405[i] = 0;
		for (int i=0; i<2; i++) fRec404[i] = 0;
		for (int i=0; i<2; i++) fRec410[i] = 0;
		for (int i=0; i<2; i++) fRec409[i] = 0;
		for (int i=0; i<2; i++) fRec408[i] = 0;
		for (int i=0; i<2; i++) fRec414[i] = 0;
		fConst24 = (1e+03f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec413[i] = 0;
		for (int i=0; i<2; i++) fRec412[i] = 0;
		for (int i=0; i<2; i++) fRec418[i] = 0;
		for (int i=0; i<2; i++) fRec417[i] = 0;
		for (int i=0; i<2; i++) fRec416[i] = 0;
		for (int i=0; i<2; i++) fRec422[i] = 0;
		for (int i=0; i<2; i++) fRec421[i] = 0;
		for (int i=0; i<2; i++) fRec420[i] = 0;
		for (int i=0; i<2; i++) fRec426[i] = 0;
		for (int i=0; i<2; i++) fRec425[i] = 0;
		for (int i=0; i<2; i++) fRec424[i] = 0;
		for (int i=0; i<2; i++) fRec430[i] = 0;
		fConst25 = (1219.5121951219512f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec429[i] = 0;
		for (int i=0; i<2; i++) fRec428[i] = 0;
		for (int i=0; i<2; i++) fRec434[i] = 0;
		for (int i=0; i<2; i++) fRec433[i] = 0;
		for (int i=0; i<2; i++) fRec432[i] = 0;
		for (int i=0; i<2; i++) fRec438[i] = 0;
		for (int i=0; i<2; i++) fRec437[i] = 0;
		for (int i=0; i<2; i++) fRec436[i] = 0;
		for (int i=0; i<2; i++) fRec442[i] = 0;
		for (int i=0; i<2; i++) fRec441[i] = 0;
		for (int i=0; i<2; i++) fRec440[i] = 0;
		for (int i=0; i<2; i++) fRec446[i] = 0;
		for (int i=0; i<2; i++) fRec445[i] = 0;
		for (int i=0; i<2; i++) fRec444[i] = 0;
		for (int i=0; i<2; i++) fRec450[i] = 0;
		for (int i=0; i<2; i++) fRec449[i] = 0;
		for (int i=0; i<2; i++) fRec448[i] = 0;
		for (int i=0; i<2; i++) fRec454[i] = 0;
		for (int i=0; i<2; i++) fRec453[i] = 0;
		for (int i=0; i<2; i++) fRec452[i] = 0;
		for (int i=0; i<2; i++) fRec458[i] = 0;
		for (int i=0; i<2; i++) fRec457[i] = 0;
		for (int i=0; i<2; i++) fRec456[i] = 0;
		for (int i=0; i<2; i++) fRec462[i] = 0;
		for (int i=0; i<2; i++) fRec461[i] = 0;
		for (int i=0; i<2; i++) fRec460[i] = 0;
		for (int i=0; i<2; i++) fRec466[i] = 0;
		for (int i=0; i<2; i++) fRec465[i] = 0;
		for (int i=0; i<2; i++) fRec464[i] = 0;
		for (int i=0; i<2; i++) fRec470[i] = 0;
		for (int i=0; i<2; i++) fRec469[i] = 0;
		for (int i=0; i<2; i++) fRec468[i] = 0;
		for (int i=0; i<2; i++) fVec147[i] = 0;
		for (int i=0; i<2; i++) fRec316[i] = 0;
		fConst26 = (36.243757712787264f / fConst0);
		fConst27 = (1.0f - fConst26);
		IOTA = 0;
		for (int i=0; i<4096; i++) iVec148[i] = 0;
		iConst28 = int((0.02f * max(2.205e+04f, min(1.92e+05f, fSamplingFreq))));
		for (int i=0; i<2; i++) iRec473[i] = 0;
		fConst29 = (9.5367431640625e-07f / iConst28);
		for (int i=0; i<2; i++) fVec149[i] = 0;
		for (int i=0; i<2; i++) fRec472[i] = 0;
		fConst30 = (0.027590958087858178f * fConst0);
		for (int i=0; i<5; i++) fVec150[i] = 0;
		fslider5 = 1.0f;
		fslider6 = 1.0f;
		for (int i=0; i<2; i++) fRec474[i] = 0;
		fslider7 = 1.0f;
		fslider8 = 1.0f;
		fConst31 = (3968.253968253968f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec475[i] = 0;
		fslider9 = 1.0f;
		for (int i=0; i<2; i++) fVec151[i] = 0;
		fConst32 = (0.000858f / (fConst3 + 0.000858f));
		for (int i=0; i<2; i++) fRec477[i] = 0;
		for (int i=0; i<2; i++) fVec152[i] = 0;
		fConst33 = (0.000429f / (fConst3 + 0.000429f));
		for (int i=0; i<2; i++) fRec476[i] = 0;
		for (int i=0; i<2; i++) fVec153[i] = 0;
		for (int i=0; i<2; i++) fRec480[i] = 0;
		fslider10 = 1.0f;
		for (int i=0; i<2; i++) fVec154[i] = 0;
		fConst34 = (0.00039f / (fConst3 + 0.00039f));
		for (int i=0; i<2; i++) fRec479[i] = 0;
		for (int i=0; i<2; i++) fVec155[i] = 0;
		fConst35 = (0.000195f / (fConst3 + 0.000195f));
		for (int i=0; i<2; i++) fRec478[i] = 0;
		for (int i=0; i<2; i++) fRec483[i] = 0;
		fslider11 = 1.0f;
		for (int i=0; i<2; i++) fVec156[i] = 0;
		fConst36 = (0.0001833f / (fConst3 + 0.0001833f));
		for (int i=0; i<2; i++) fRec482[i] = 0;
		for (int i=0; i<2; i++) fVec157[i] = 0;
		fConst37 = (9.165e-05f / (fConst3 + 9.165e-05f));
		for (int i=0; i<2; i++) fRec481[i] = 0;
		for (int i=0; i<2; i++) fVec158[i] = 0;
		for (int i=0; i<2; i++) fRec486[i] = 0;
		fslider12 = 1.0f;
		for (int i=0; i<2; i++) fVec159[i] = 0;
		fConst38 = (0.00010530000000000001f / (fConst3 + 0.00010530000000000001f));
		for (int i=0; i<2; i++) fRec485[i] = 0;
		for (int i=0; i<2; i++) fVec160[i] = 0;
		fConst39 = (5.2650000000000006e-05f / (fConst3 + 5.2650000000000006e-05f));
		for (int i=0; i<2; i++) fRec484[i] = 0;
		fslider13 = 0.0f;
		for (int i=0; i<2; i++) fRec488[i] = 0;
		for (int i=0; i<2; i++) fRec487[i] = 0;
		for (int i=0; i<2; i++) fRec490[i] = 0;
		for (int i=0; i<2; i++) fRec489[i] = 0;
		for (int i=0; i<2; i++) fRec492[i] = 0;
		for (int i=0; i<2; i++) fRec491[i] = 0;
		for (int i=0; i<2; i++) fRec494[i] = 0;
		for (int i=0; i<2; i++) fRec493[i] = 0;
		fslider14 = 1.0f;
		fslider15 = 1.0f;
		fslider16 = 0.5f;
		fslider17 = 1.0f;
		fslider18 = 0.5f;
		fslider19 = 1.0f;
		for (int i=0; i<2; i++) fVec161[i] = 0;
		for (int i=0; i<2; i++) fRec495[i] = 0;
		fslider20 = 0.0f;
		fslider21 = 0.5f;
		fslider22 = 0.1f;
		for (int i=0; i<2; i++) fRec496[i] = 0;
	}
	virtual void init(int samplingFreq) {
		classInit(samplingFreq);
		instanceInit(samplingFreq);
	}
	virtual void buildUserInterface(UI* interface) {
		interface->openVerticalBox("yc20");
		interface->addButton("A0", &fbutton10);
		interface->addButton("A1", &fbutton22);
		interface->addButton("A2", &fbutton34);
		interface->addButton("A3", &fbutton46);
		interface->addButton("A4", &fbutton58);
		interface->addButton("C0", &fbutton1);
		interface->addButton("C1", &fbutton13);
		interface->addButton("C2", &fbutton25);
		interface->addButton("C3", &fbutton37);
		interface->addButton("C4", &fbutton49);
		interface->addButton("D0", &fbutton3);
		interface->addButton("D1", &fbutton15);
		interface->addButton("D2", &fbutton27);
		interface->addButton("D3", &fbutton39);
		interface->addButton("D4", &fbutton51);
		interface->addButton("F0", &fbutton6);
		interface->addButton("F1", &fbutton18);
		interface->addButton("F2", &fbutton30);
		interface->addButton("F3", &fbutton42);
		interface->addButton("F4", &fbutton54);
		interface->addButton("G0", &fbutton8);
		interface->addButton("G1", &fbutton20);
		interface->addButton("G2", &fbutton32);
		interface->addButton("G3", &fbutton44);
		interface->addButton("G4", &fbutton56);
		interface->openVerticalBox("[2]vibrato");
		interface->declare(&fslider3, "1", "");
		interface->addHorizontalSlider("depth", &fslider3, 0.0f, 0.0f, 1.0f, 0.2f);
		interface->declare(&fslider2, "2", "");
		interface->addHorizontalSlider("speed", &fslider2, 0.0f, 0.0f, 1.0f, 0.2f);
		interface->closeBox();
		interface->addButton("a0", &fbutton9);
		interface->addButton("a1", &fbutton21);
		interface->addButton("a2", &fbutton33);
		interface->addButton("a3", &fbutton45);
		interface->addButton("a4", &fbutton57);
		interface->addButton("b0", &fbutton11);
		interface->addButton("b1", &fbutton23);
		interface->addButton("b2", &fbutton35);
		interface->addButton("b3", &fbutton47);
		interface->addButton("b4", &fbutton59);
		interface->addHorizontalSlider("balance", &fslider14, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->openHorizontalBox("bass");
		interface->declare(&fslider8, "1", "");
		interface->addVerticalSlider("16' b", &fslider8, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider7, "2", "");
		interface->addVerticalSlider("8' b", &fslider7, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider4, "3", "");
		interface->addHorizontalSlider("bass manual", &fslider4, 0.0f, 0.0f, 1.0f, 1.0f);
		interface->declare(&fslider6, "3", "");
		interface->addVerticalSlider("bass volume", &fslider6, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->closeBox();
		interface->addButton("c0", &fbutton0);
		interface->addButton("c1", &fbutton12);
		interface->addButton("c2", &fbutton24);
		interface->addButton("c3", &fbutton36);
		interface->addButton("c4", &fbutton48);
		interface->addButton("c5", &fbutton60);
		interface->addButton("d0", &fbutton2);
		interface->addButton("d1", &fbutton14);
		interface->addButton("d2", &fbutton26);
		interface->addButton("d3", &fbutton38);
		interface->addButton("d4", &fbutton50);
		interface->addButton("e0", &fbutton4);
		interface->addButton("e1", &fbutton16);
		interface->addButton("e2", &fbutton28);
		interface->addButton("e3", &fbutton40);
		interface->addButton("e4", &fbutton52);
		interface->addButton("f0", &fbutton5);
		interface->addButton("f1", &fbutton17);
		interface->addButton("f2", &fbutton29);
		interface->addButton("f3", &fbutton41);
		interface->addButton("f4", &fbutton53);
		interface->addButton("g0", &fbutton7);
		interface->addButton("g1", &fbutton19);
		interface->addButton("g2", &fbutton31);
		interface->addButton("g3", &fbutton43);
		interface->addButton("g4", &fbutton55);
		interface->openHorizontalBox("i");
		interface->declare(&fslider16, "1", "");
		interface->addVerticalSlider("16' i", &fslider16, 0.5f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider15, "2", "");
		interface->addVerticalSlider("8' i", &fslider15, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider17, "3", "");
		interface->addVerticalSlider("4' i", &fslider17, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider18, "4", "");
		interface->addVerticalSlider("2 2/3' i", &fslider18, 0.5f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider19, "5", "");
		interface->addVerticalSlider("2' i", &fslider19, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider20, "6", "");
		interface->addVerticalSlider("1 3/5' i", &fslider20, 0.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider21, "7", "");
		interface->addVerticalSlider("1' i", &fslider21, 0.5f, 0.0f, 1.0f, 0.25f);
		interface->closeBox();
		interface->openHorizontalBox("ii");
		interface->declare(&fslider13, "1", "");
		interface->addVerticalSlider("bright", &fslider13, 0.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider9, "2", "");
		interface->addVerticalSlider("16' ii", &fslider9, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider10, "3", "");
		interface->addVerticalSlider("8' ii", &fslider10, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider11, "4", "");
		interface->addVerticalSlider("4' ii", &fslider11, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider12, "5", "");
		interface->addVerticalSlider("2' ii", &fslider12, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->closeBox();
		interface->addHorizontalSlider("percussive", &fslider5, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->addHorizontalSlider("pitch", &fslider1, 0.0f, -1.0f, 1.0f, 0.05f);
		interface->addHorizontalSlider("realism", &fslider0, 0.0f, 0.0f, 1.0f, 0.25f);
		interface->addHorizontalSlider("volume", &fslider22, 0.1f, 0.0f, 1.0f, 0.01f);
		interface->closeBox();
	}
	virtual void compute (int count, FAUSTFLOAT** input, FAUSTFLOAT** output) {
		float 	fSlow0 = fslider0;
		float 	fSlow1 = ((int((fSlow0 >= 0.8333333333333334f)))?1.0f:0.0f);
		float 	fSlow2 = fbutton0;
		float 	fSlow3 = (1 + (0.03f * fslider1));
		float 	fSlow4 = (fConst1 * float((5.0f + (3 * fslider2))));
		float 	fSlow5 = (0.0001f + (0.0149f * fslider3));
		int 	iSlow6 = int((fSlow0 >= 0.5f));
		float 	fSlow7 = ((iSlow6)?0.997294f:1.0f);
		float 	fSlow8 = fbutton1;
		float 	fSlow9 = ((iSlow6)?1.000562f:1.0f);
		float 	fSlow10 = fbutton2;
		float 	fSlow11 = ((iSlow6)?1.002464f:1.0f);
		float 	fSlow12 = fbutton3;
		float 	fSlow13 = ((iSlow6)?0.996945f:1.0f);
		float 	fSlow14 = fbutton4;
		float 	fSlow15 = ((iSlow6)?1.003118f:1.0f);
		float 	fSlow16 = fbutton5;
		float 	fSlow17 = ((iSlow6)?1.001383f:1.0f);
		float 	fSlow18 = fbutton6;
		float 	fSlow19 = ((iSlow6)?1.003796f:1.0f);
		float 	fSlow20 = fbutton7;
		float 	fSlow21 = ((iSlow6)?0.999484f:1.0f);
		float 	fSlow22 = fbutton8;
		float 	fSlow23 = ((iSlow6)?1.001135f:1.0f);
		float 	fSlow24 = fbutton9;
		float 	fSlow25 = ((iSlow6)?1.000064f:1.0f);
		float 	fSlow26 = fbutton10;
		float 	fSlow27 = ((iSlow6)?0.998889f:1.0f);
		float 	fSlow28 = fbutton11;
		float 	fSlow29 = ((iSlow6)?0.997199f:1.0f);
		float 	fSlow30 = fbutton12;
		float 	fSlow31 = fbutton13;
		float 	fSlow32 = fbutton14;
		float 	fSlow33 = fbutton15;
		float 	fSlow34 = fbutton16;
		float 	fSlow35 = fslider4;
		float 	fSlow36 = (1.0f - fSlow35);
		float 	fSlow37 = fbutton17;
		float 	fSlow38 = fbutton18;
		float 	fSlow39 = fbutton19;
		float 	fSlow40 = fbutton20;
		float 	fSlow41 = fbutton21;
		float 	fSlow42 = fbutton22;
		float 	fSlow43 = fbutton23;
		float 	fSlow44 = fbutton24;
		float 	fSlow45 = fbutton25;
		float 	fSlow46 = fbutton26;
		float 	fSlow47 = fbutton27;
		float 	fSlow48 = fbutton28;
		float 	fSlow49 = fbutton29;
		float 	fSlow50 = fbutton30;
		float 	fSlow51 = fbutton31;
		float 	fSlow52 = fbutton32;
		float 	fSlow53 = fbutton33;
		float 	fSlow54 = fbutton34;
		float 	fSlow55 = fbutton35;
		float 	fSlow56 = fbutton36;
		float 	fSlow57 = fbutton37;
		float 	fSlow58 = fbutton38;
		float 	fSlow59 = fbutton39;
		float 	fSlow60 = fbutton40;
		float 	fSlow61 = fbutton41;
		float 	fSlow62 = fbutton42;
		float 	fSlow63 = fbutton43;
		float 	fSlow64 = fbutton44;
		float 	fSlow65 = fbutton45;
		float 	fSlow66 = fbutton46;
		float 	fSlow67 = fbutton47;
		float 	fSlow68 = fbutton48;
		float 	fSlow69 = fbutton49;
		float 	fSlow70 = fbutton50;
		float 	fSlow71 = fbutton51;
		float 	fSlow72 = fbutton52;
		float 	fSlow73 = fbutton53;
		float 	fSlow74 = fbutton54;
		float 	fSlow75 = fbutton55;
		float 	fSlow76 = fbutton56;
		float 	fSlow77 = fbutton57;
		float 	fSlow78 = fbutton58;
		float 	fSlow79 = fbutton59;
		float 	fSlow80 = fbutton60;
		float 	fSlow81 = (0.5f * fSlow36);
		float 	fSlow82 = ((int((fSlow0 > 0.16666666666666666f)))?0.01357f:0.0f);
		float 	fSlow83 = (2.25f * fslider5);
		float 	fSlow84 = (0.02f * fslider6);
		float 	fSlow85 = fslider7;
		float 	fSlow86 = (fSlow85 * (1 + (fSlow85 * ((2.81f * fSlow85) - 2.81f))));
		float 	fSlow87 = fslider8;
		float 	fSlow88 = (fSlow87 * (1 + (fSlow87 * ((2.81f * fSlow87) - 2.81f))));
		float 	fSlow89 = fslider9;
		float 	fSlow90 = (fSlow89 * (1 + (fSlow89 * ((2.81f * fSlow89) - 2.81f))));
		float 	fSlow91 = (0.4583333333333333f * fSlow90);
		float 	fSlow92 = fslider10;
		float 	fSlow93 = (fSlow92 * (1 + (fSlow92 * ((2.81f * fSlow92) - 2.81f))));
		float 	fSlow94 = (0.4583333333333333f * fSlow93);
		float 	fSlow95 = fslider11;
		float 	fSlow96 = (fSlow95 * (1 + (fSlow95 * ((2.81f * fSlow95) - 2.81f))));
		float 	fSlow97 = (0.4583333333333333f * fSlow96);
		float 	fSlow98 = fslider12;
		float 	fSlow99 = (fSlow98 * (1 + (fSlow98 * ((2.81f * fSlow98) - 2.81f))));
		float 	fSlow100 = (0.4583333333333333f * fSlow99);
		float 	fSlow101 = (0.9615384615384616f * fslider13);
		float 	fSlow102 = (0.019230769230769232f + fSlow101);
		float 	fSlow103 = (0.6f * (0.9807692307692307f - fSlow101));
		float 	fSlow104 = fslider14;
		float 	fSlow105 = (2.5f * fSlow104);
		float 	fSlow106 = fslider15;
		float 	fSlow107 = (fSlow106 * (1 + (fSlow106 * ((2.81f * fSlow106) - 2.81f))));
		float 	fSlow108 = fslider16;
		float 	fSlow109 = (fSlow108 * (1 + (fSlow108 * ((2.81f * fSlow108) - 2.81f))));
		float 	fSlow110 = fslider17;
		float 	fSlow111 = (fSlow110 * (1 + (fSlow110 * ((2.81f * fSlow110) - 2.81f))));
		float 	fSlow112 = fslider18;
		float 	fSlow113 = (fSlow112 * (1 + (fSlow112 * ((2.81f * fSlow112) - 2.81f))));
		float 	fSlow114 = fslider19;
		float 	fSlow115 = (fSlow114 * (1 + (fSlow114 * ((2.81f * fSlow114) - 2.81f))));
		float 	fSlow116 = fslider20;
		float 	fSlow117 = (fSlow116 * (1 + (fSlow116 * ((2.81f * fSlow116) - 2.81f))));
		float 	fSlow118 = fslider21;
		float 	fSlow119 = (fSlow118 * (1 + (fSlow118 * ((2.81f * fSlow118) - 2.81f))));
		float 	fSlow120 = (1 - fSlow104);
		float 	fSlow121 = (0.02f * fslider22);
		FAUSTFLOAT* output0 = output[0];
		for (int i=0; i<count; i++) {
			fVec0[0] = fSlow2;
			float fTemp0 = (fSlow2 + fVec0[1]);
			fRec7[0] = ((fRec7[1] + fSlow4) - floorf(fRec7[1]));
			float fTemp1 = ((fSlow5 * sinf((6.283185307179586f * fRec7[0]))) + fSlow3);
			float fTemp2 = ((fConst1 * float((6271.926975707989f * (fSlow7 * fTemp1)))) + fRec6[1]);
			fRec6[0] = (fTemp2 - floorf(fTemp2));
			iRec5[0] = ((int(((fRec6[0] - fRec6[1]) < 0)))?(1 - iRec5[1]):iRec5[1]);
			float fTemp3 = (fRec6[0] + iRec5[0]);
			fVec1[0] = fTemp3;
			float fTemp4 = (0.5f * fVec1[0]);
			float fTemp5 = (0.5f * fVec1[1]);
			iRec8[0] = ((int(((fTemp4 - fTemp5) < 0)))?(1 - iRec8[1]):iRec8[1]);
			float fTemp6 = (iRec8[0] + fTemp4);
			fVec2[0] = fTemp6;
			float fTemp7 = (0.5f * fVec2[0]);
			float fTemp8 = (0.5f * fVec2[1]);
			iRec9[0] = ((int(((fTemp7 - fTemp8) < 0)))?(1 - iRec9[1]):iRec9[1]);
			float fTemp9 = (iRec9[0] + fTemp7);
			fVec3[0] = fTemp9;
			float fTemp10 = (0.5f * fVec3[0]);
			float fTemp11 = (0.5f * fVec3[1]);
			iRec10[0] = ((int(((fTemp10 - fTemp11) < 0)))?(1 - iRec10[1]):iRec10[1]);
			float fTemp12 = (iRec10[0] + fTemp10);
			fVec4[0] = fTemp12;
			float fTemp13 = (0.5f * fVec4[0]);
			float fTemp14 = (0.5f * fVec4[1]);
			iRec11[0] = ((int(((fTemp13 - fTemp14) < 0)))?(1 - iRec11[1]):iRec11[1]);
			float fTemp15 = (iRec11[0] + fTemp13);
			fVec5[0] = fTemp15;
			float fTemp16 = (0.5f * fVec5[1]);
			float fTemp17 = (0.5f * fVec5[0]);
			float fTemp18 = (1 + fTemp17);
			float fTemp19 = (fTemp18 - (fTemp16 + floorf((fTemp18 - fTemp16))));
			float fTemp20 = (0.5f * (1.0f + fVec5[0]));
			int iTemp21 = ((int((fTemp16 > fTemp17)))?1:((int(((fTemp20 - floorf(fTemp20)) < fTemp19)))?2:0));
			fRec3[0] = square_blep_x(iTemp21, ((int((fTemp17 < 0.5f)))?1.0f:-1.0f), fTemp17, fTemp19);
			float 	fRec4 = square_blep_prev(iTemp21, fRec3[1], fTemp16, fTemp19);
			fRec2[0] = (fRec2[1] + (fConst2 * (fRec4 - fRec2[1])));
			fRec1[0] = (fConst4 * ((fRec2[0] - fRec2[1]) + fRec1[1]));
			fVec6[0] = fSlow8;
			float fTemp22 = (fSlow8 + fVec6[1]);
			float fTemp23 = ((fConst1 * float((6644.875161279122f * (fSlow9 * fTemp1)))) + fRec17[1]);
			fRec17[0] = (fTemp23 - floorf(fTemp23));
			iRec16[0] = ((int(((fRec17[0] - fRec17[1]) < 0)))?(1 - iRec16[1]):iRec16[1]);
			float fTemp24 = (fRec17[0] + iRec16[0]);
			fVec7[0] = fTemp24;
			float fTemp25 = (0.5f * fVec7[0]);
			float fTemp26 = (0.5f * fVec7[1]);
			iRec18[0] = ((int(((fTemp25 - fTemp26) < 0)))?(1 - iRec18[1]):iRec18[1]);
			float fTemp27 = (iRec18[0] + fTemp25);
			fVec8[0] = fTemp27;
			float fTemp28 = (0.5f * fVec8[0]);
			float fTemp29 = (0.5f * fVec8[1]);
			iRec19[0] = ((int(((fTemp28 - fTemp29) < 0)))?(1 - iRec19[1]):iRec19[1]);
			float fTemp30 = (iRec19[0] + fTemp28);
			fVec9[0] = fTemp30;
			float fTemp31 = (0.5f * fVec9[0]);
			float fTemp32 = (0.5f * fVec9[1]);
			iRec20[0] = ((int(((fTemp31 - fTemp32) < 0)))?(1 - iRec20[1]):iRec20[1]);
			float fTemp33 = (iRec20[0] + fTemp31);
			fVec10[0] = fTemp33;
			float fTemp34 = (0.5f * fVec10[0]);
			float fTemp35 = (0.5f * fVec10[1]);
			iRec21[0] = ((int(((fTemp34 - fTemp35) < 0)))?(1 - iRec21[1]):iRec21[1]);
			float fTemp36 = (iRec21[0] + fTemp34);
			fVec11[0] = fTemp36;
			float fTemp37 = (0.5f * fVec11[1]);
			float fTemp38 = (0.5f * fVec11[0]);
			float fTemp39 = (1 + fTemp38);
			float fTemp40 = (fTemp39 - (fTemp37 + floorf((fTemp39 - fTemp37))));
			float fTemp41 = (0.5f * (1.0f + fVec11[0]));
			int iTemp42 = ((int((fTemp37 > fTemp38)))?1:((int(((fTemp41 - floorf(fTemp41)) < fTemp40)))?2:0));
			fRec14[0] = square_blep_x(iTemp42, ((int((fTemp38 < 0.5f)))?1.0f:-1.0f), fTemp38, fTemp40);
			float 	fRec15 = square_blep_prev(iTemp42, fRec14[1], fTemp37, fTemp40);
			fRec13[0] = (fRec13[1] + (fConst5 * (fRec15 - fRec13[1])));
			fRec12[0] = (fConst4 * ((fRec13[0] - fRec13[1]) + fRec12[1]));
			fVec12[0] = fSlow10;
			float fTemp43 = (fSlow10 + fVec12[1]);
			float fTemp44 = ((fConst1 * float((7.04e+03f * (fSlow11 * fTemp1)))) + fRec27[1]);
			fRec27[0] = (fTemp44 - floorf(fTemp44));
			iRec26[0] = ((int(((fRec27[0] - fRec27[1]) < 0)))?(1 - iRec26[1]):iRec26[1]);
			float fTemp45 = (fRec27[0] + iRec26[0]);
			fVec13[0] = fTemp45;
			float fTemp46 = (0.5f * fVec13[0]);
			float fTemp47 = (0.5f * fVec13[1]);
			iRec28[0] = ((int(((fTemp46 - fTemp47) < 0)))?(1 - iRec28[1]):iRec28[1]);
			float fTemp48 = (iRec28[0] + fTemp46);
			fVec14[0] = fTemp48;
			float fTemp49 = (0.5f * fVec14[0]);
			float fTemp50 = (0.5f * fVec14[1]);
			iRec29[0] = ((int(((fTemp49 - fTemp50) < 0)))?(1 - iRec29[1]):iRec29[1]);
			float fTemp51 = (iRec29[0] + fTemp49);
			fVec15[0] = fTemp51;
			float fTemp52 = (0.5f * fVec15[0]);
			float fTemp53 = (0.5f * fVec15[1]);
			iRec30[0] = ((int(((fTemp52 - fTemp53) < 0)))?(1 - iRec30[1]):iRec30[1]);
			float fTemp54 = (iRec30[0] + fTemp52);
			fVec16[0] = fTemp54;
			float fTemp55 = (0.5f * fVec16[0]);
			float fTemp56 = (0.5f * fVec16[1]);
			iRec31[0] = ((int(((fTemp55 - fTemp56) < 0)))?(1 - iRec31[1]):iRec31[1]);
			float fTemp57 = (iRec31[0] + fTemp55);
			fVec17[0] = fTemp57;
			float fTemp58 = (0.5f * fVec17[1]);
			float fTemp59 = (0.5f * fVec17[0]);
			float fTemp60 = (1 + fTemp59);
			float fTemp61 = (fTemp60 - (fTemp58 + floorf((fTemp60 - fTemp58))));
			float fTemp62 = (0.5f * (1.0f + fVec17[0]));
			int iTemp63 = ((int((fTemp58 > fTemp59)))?1:((int(((fTemp62 - floorf(fTemp62)) < fTemp61)))?2:0));
			fRec24[0] = square_blep_x(iTemp63, ((int((fTemp59 < 0.5f)))?1.0f:-1.0f), fTemp59, fTemp61);
			float 	fRec25 = square_blep_prev(iTemp63, fRec24[1], fTemp58, fTemp61);
			fRec23[0] = (fRec23[1] + (fConst5 * (fRec25 - fRec23[1])));
			fRec22[0] = (fConst4 * ((fRec23[0] - fRec23[1]) + fRec22[1]));
			fVec18[0] = fSlow12;
			float fTemp64 = (fSlow12 + fVec18[1]);
			float fTemp65 = ((fConst1 * float((7458.620184289437f * (fSlow13 * fTemp1)))) + fRec37[1]);
			fRec37[0] = (fTemp65 - floorf(fTemp65));
			iRec36[0] = ((int(((fRec37[0] - fRec37[1]) < 0)))?(1 - iRec36[1]):iRec36[1]);
			float fTemp66 = (fRec37[0] + iRec36[0]);
			fVec19[0] = fTemp66;
			float fTemp67 = (0.5f * fVec19[0]);
			float fTemp68 = (0.5f * fVec19[1]);
			iRec38[0] = ((int(((fTemp67 - fTemp68) < 0)))?(1 - iRec38[1]):iRec38[1]);
			float fTemp69 = (iRec38[0] + fTemp67);
			fVec20[0] = fTemp69;
			float fTemp70 = (0.5f * fVec20[0]);
			float fTemp71 = (0.5f * fVec20[1]);
			iRec39[0] = ((int(((fTemp70 - fTemp71) < 0)))?(1 - iRec39[1]):iRec39[1]);
			float fTemp72 = (iRec39[0] + fTemp70);
			fVec21[0] = fTemp72;
			float fTemp73 = (0.5f * fVec21[0]);
			float fTemp74 = (0.5f * fVec21[1]);
			iRec40[0] = ((int(((fTemp73 - fTemp74) < 0)))?(1 - iRec40[1]):iRec40[1]);
			float fTemp75 = (iRec40[0] + fTemp73);
			fVec22[0] = fTemp75;
			float fTemp76 = (0.5f * fVec22[0]);
			float fTemp77 = (0.5f * fVec22[1]);
			iRec41[0] = ((int(((fTemp76 - fTemp77) < 0)))?(1 - iRec41[1]):iRec41[1]);
			float fTemp78 = (iRec41[0] + fTemp76);
			fVec23[0] = fTemp78;
			float fTemp79 = (0.5f * fVec23[1]);
			float fTemp80 = (0.5f * fVec23[0]);
			float fTemp81 = (1 + fTemp80);
			float fTemp82 = (fTemp81 - (fTemp79 + floorf((fTemp81 - fTemp79))));
			float fTemp83 = (0.5f * (1.0f + fVec23[0]));
			int iTemp84 = ((int((fTemp79 > fTemp80)))?1:((int(((fTemp83 - floorf(fTemp83)) < fTemp82)))?2:0));
			fRec34[0] = square_blep_x(iTemp84, ((int((fTemp80 < 0.5f)))?1.0f:-1.0f), fTemp80, fTemp82);
			float 	fRec35 = square_blep_prev(iTemp84, fRec34[1], fTemp79, fTemp82);
			fRec33[0] = (fRec33[1] + (fConst5 * (fRec35 - fRec33[1])));
			fRec32[0] = (fConst4 * ((fRec33[0] - fRec33[1]) + fRec32[1]));
			fVec24[0] = fSlow14;
			float fTemp85 = (fSlow14 + fVec24[1]);
			float fTemp86 = ((fConst1 * float((7902.132820097988f * (fSlow15 * fTemp1)))) + fRec47[1]);
			fRec47[0] = (fTemp86 - floorf(fTemp86));
			iRec46[0] = ((int(((fRec47[0] - fRec47[1]) < 0)))?(1 - iRec46[1]):iRec46[1]);
			float fTemp87 = (fRec47[0] + iRec46[0]);
			fVec25[0] = fTemp87;
			float fTemp88 = (0.5f * fVec25[0]);
			float fTemp89 = (0.5f * fVec25[1]);
			iRec48[0] = ((int(((fTemp88 - fTemp89) < 0)))?(1 - iRec48[1]):iRec48[1]);
			float fTemp90 = (iRec48[0] + fTemp88);
			fVec26[0] = fTemp90;
			float fTemp91 = (0.5f * fVec26[0]);
			float fTemp92 = (0.5f * fVec26[1]);
			iRec49[0] = ((int(((fTemp91 - fTemp92) < 0)))?(1 - iRec49[1]):iRec49[1]);
			float fTemp93 = (iRec49[0] + fTemp91);
			fVec27[0] = fTemp93;
			float fTemp94 = (0.5f * fVec27[0]);
			float fTemp95 = (0.5f * fVec27[1]);
			iRec50[0] = ((int(((fTemp94 - fTemp95) < 0)))?(1 - iRec50[1]):iRec50[1]);
			float fTemp96 = (iRec50[0] + fTemp94);
			fVec28[0] = fTemp96;
			float fTemp97 = (0.5f * fVec28[0]);
			float fTemp98 = (0.5f * fVec28[1]);
			iRec51[0] = ((int(((fTemp97 - fTemp98) < 0)))?(1 - iRec51[1]):iRec51[1]);
			float fTemp99 = (iRec51[0] + fTemp97);
			fVec29[0] = fTemp99;
			float fTemp100 = (0.5f * fVec29[1]);
			float fTemp101 = (0.5f * fVec29[0]);
			float fTemp102 = (1 + fTemp101);
			float fTemp103 = (fTemp102 - (fTemp100 + floorf((fTemp102 - fTemp100))));
			float fTemp104 = (0.5f * (1.0f + fVec29[0]));
			int iTemp105 = ((int((fTemp100 > fTemp101)))?1:((int(((fTemp104 - floorf(fTemp104)) < fTemp103)))?2:0));
			fRec44[0] = square_blep_x(iTemp105, ((int((fTemp101 < 0.5f)))?1.0f:-1.0f), fTemp101, fTemp103);
			float 	fRec45 = square_blep_prev(iTemp105, fRec44[1], fTemp100, fTemp103);
			fRec43[0] = (fRec43[1] + (fConst5 * (fRec45 - fRec43[1])));
			fRec42[0] = (fConst4 * ((fRec43[0] - fRec43[1]) + fRec42[1]));
			fVec30[0] = fSlow16;
			float fTemp106 = (fSlow16 + fVec30[1]);
			float fTemp107 = ((fConst1 * float((4186.009044809578f * (fSlow17 * fTemp1)))) + fRec57[1]);
			fRec57[0] = (fTemp107 - floorf(fTemp107));
			iRec56[0] = ((int(((fRec57[0] - fRec57[1]) < 0)))?(1 - iRec56[1]):iRec56[1]);
			float fTemp108 = (fRec57[0] + iRec56[0]);
			fVec31[0] = fTemp108;
			float fTemp109 = (0.5f * fVec31[0]);
			float fTemp110 = (0.5f * fVec31[1]);
			iRec58[0] = ((int(((fTemp109 - fTemp110) < 0)))?(1 - iRec58[1]):iRec58[1]);
			float fTemp111 = (iRec58[0] + fTemp109);
			fVec32[0] = fTemp111;
			float fTemp112 = (0.5f * fVec32[0]);
			float fTemp113 = (0.5f * fVec32[1]);
			iRec59[0] = ((int(((fTemp112 - fTemp113) < 0)))?(1 - iRec59[1]):iRec59[1]);
			float fTemp114 = (iRec59[0] + fTemp112);
			fVec33[0] = fTemp114;
			float fTemp115 = (0.5f * fVec33[0]);
			float fTemp116 = (0.5f * fVec33[1]);
			iRec60[0] = ((int(((fTemp115 - fTemp116) < 0)))?(1 - iRec60[1]):iRec60[1]);
			float fTemp117 = (iRec60[0] + fTemp115);
			fVec34[0] = fTemp117;
			float fTemp118 = (0.5f * fVec34[1]);
			float fTemp119 = (0.5f * fVec34[0]);
			float fTemp120 = (1 + fTemp119);
			float fTemp121 = (fTemp120 - (fTemp118 + floorf((fTemp120 - fTemp118))));
			float fTemp122 = (0.5f * (1.0f + fVec34[0]));
			int iTemp123 = ((int((fTemp118 > fTemp119)))?1:((int(((fTemp122 - floorf(fTemp122)) < fTemp121)))?2:0));
			fRec54[0] = square_blep_x(iTemp123, ((int((fTemp119 < 0.5f)))?1.0f:-1.0f), fTemp119, fTemp121);
			float 	fRec55 = square_blep_prev(iTemp123, fRec54[1], fTemp118, fTemp121);
			fRec53[0] = (fRec53[1] + (fConst6 * (fRec55 - fRec53[1])));
			fRec52[0] = (fConst7 * ((fRec53[0] - fRec53[1]) + fRec52[1]));
			fVec35[0] = fSlow18;
			float fTemp124 = (fSlow18 + fVec35[1]);
			float fTemp125 = ((fConst1 * float((4434.922095629953f * (fSlow19 * fTemp1)))) + fRec66[1]);
			fRec66[0] = (fTemp125 - floorf(fTemp125));
			iRec65[0] = ((int(((fRec66[0] - fRec66[1]) < 0)))?(1 - iRec65[1]):iRec65[1]);
			float fTemp126 = (fRec66[0] + iRec65[0]);
			fVec36[0] = fTemp126;
			float fTemp127 = (0.5f * fVec36[0]);
			float fTemp128 = (0.5f * fVec36[1]);
			iRec67[0] = ((int(((fTemp127 - fTemp128) < 0)))?(1 - iRec67[1]):iRec67[1]);
			float fTemp129 = (iRec67[0] + fTemp127);
			fVec37[0] = fTemp129;
			float fTemp130 = (0.5f * fVec37[0]);
			float fTemp131 = (0.5f * fVec37[1]);
			iRec68[0] = ((int(((fTemp130 - fTemp131) < 0)))?(1 - iRec68[1]):iRec68[1]);
			float fTemp132 = (iRec68[0] + fTemp130);
			fVec38[0] = fTemp132;
			float fTemp133 = (0.5f * fVec38[0]);
			float fTemp134 = (0.5f * fVec38[1]);
			iRec69[0] = ((int(((fTemp133 - fTemp134) < 0)))?(1 - iRec69[1]):iRec69[1]);
			float fTemp135 = (iRec69[0] + fTemp133);
			fVec39[0] = fTemp135;
			float fTemp136 = (0.5f * fVec39[1]);
			float fTemp137 = (0.5f * fVec39[0]);
			float fTemp138 = (1 + fTemp137);
			float fTemp139 = (fTemp138 - (fTemp136 + floorf((fTemp138 - fTemp136))));
			float fTemp140 = (0.5f * (1.0f + fVec39[0]));
			int iTemp141 = ((int((fTemp136 > fTemp137)))?1:((int(((fTemp140 - floorf(fTemp140)) < fTemp139)))?2:0));
			fRec63[0] = square_blep_x(iTemp141, ((int((fTemp137 < 0.5f)))?1.0f:-1.0f), fTemp137, fTemp139);
			float 	fRec64 = square_blep_prev(iTemp141, fRec63[1], fTemp136, fTemp139);
			fRec62[0] = (fRec62[1] + (fConst6 * (fRec64 - fRec62[1])));
			fRec61[0] = (fConst7 * ((fRec62[0] - fRec62[1]) + fRec61[1]));
			fVec40[0] = fSlow20;
			float fTemp142 = (fSlow20 + fVec40[1]);
			float fTemp143 = ((fConst1 * float((4698.63628667852f * (fSlow21 * fTemp1)))) + fRec75[1]);
			fRec75[0] = (fTemp143 - floorf(fTemp143));
			iRec74[0] = ((int(((fRec75[0] - fRec75[1]) < 0)))?(1 - iRec74[1]):iRec74[1]);
			float fTemp144 = (fRec75[0] + iRec74[0]);
			fVec41[0] = fTemp144;
			float fTemp145 = (0.5f * fVec41[0]);
			float fTemp146 = (0.5f * fVec41[1]);
			iRec76[0] = ((int(((fTemp145 - fTemp146) < 0)))?(1 - iRec76[1]):iRec76[1]);
			float fTemp147 = (iRec76[0] + fTemp145);
			fVec42[0] = fTemp147;
			float fTemp148 = (0.5f * fVec42[0]);
			float fTemp149 = (0.5f * fVec42[1]);
			iRec77[0] = ((int(((fTemp148 - fTemp149) < 0)))?(1 - iRec77[1]):iRec77[1]);
			float fTemp150 = (iRec77[0] + fTemp148);
			fVec43[0] = fTemp150;
			float fTemp151 = (0.5f * fVec43[0]);
			float fTemp152 = (0.5f * fVec43[1]);
			iRec78[0] = ((int(((fTemp151 - fTemp152) < 0)))?(1 - iRec78[1]):iRec78[1]);
			float fTemp153 = (iRec78[0] + fTemp151);
			fVec44[0] = fTemp153;
			float fTemp154 = (0.5f * fVec44[1]);
			float fTemp155 = (0.5f * fVec44[0]);
			float fTemp156 = (1 + fTemp155);
			float fTemp157 = (fTemp156 - (fTemp154 + floorf((fTemp156 - fTemp154))));
			float fTemp158 = (0.5f * (1.0f + fVec44[0]));
			int iTemp159 = ((int((fTemp154 > fTemp155)))?1:((int(((fTemp158 - floorf(fTemp158)) < fTemp157)))?2:0));
			fRec72[0] = square_blep_x(iTemp159, ((int((fTemp155 < 0.5f)))?1.0f:-1.0f), fTemp155, fTemp157);
			float 	fRec73 = square_blep_prev(iTemp159, fRec72[1], fTemp154, fTemp157);
			fRec71[0] = (fRec71[1] + (fConst6 * (fRec73 - fRec71[1])));
			fRec70[0] = (fConst7 * ((fRec71[0] - fRec71[1]) + fRec70[1]));
			fVec45[0] = fSlow22;
			float fTemp160 = (fSlow22 + fVec45[1]);
			float fTemp161 = ((fConst1 * float((4978.031739553295f * (fSlow23 * fTemp1)))) + fRec84[1]);
			fRec84[0] = (fTemp161 - floorf(fTemp161));
			iRec83[0] = ((int(((fRec84[0] - fRec84[1]) < 0)))?(1 - iRec83[1]):iRec83[1]);
			float fTemp162 = (fRec84[0] + iRec83[0]);
			fVec46[0] = fTemp162;
			float fTemp163 = (0.5f * fVec46[0]);
			float fTemp164 = (0.5f * fVec46[1]);
			iRec85[0] = ((int(((fTemp163 - fTemp164) < 0)))?(1 - iRec85[1]):iRec85[1]);
			float fTemp165 = (iRec85[0] + fTemp163);
			fVec47[0] = fTemp165;
			float fTemp166 = (0.5f * fVec47[0]);
			float fTemp167 = (0.5f * fVec47[1]);
			iRec86[0] = ((int(((fTemp166 - fTemp167) < 0)))?(1 - iRec86[1]):iRec86[1]);
			float fTemp168 = (iRec86[0] + fTemp166);
			fVec48[0] = fTemp168;
			float fTemp169 = (0.5f * fVec48[0]);
			float fTemp170 = (0.5f * fVec48[1]);
			iRec87[0] = ((int(((fTemp169 - fTemp170) < 0)))?(1 - iRec87[1]):iRec87[1]);
			float fTemp171 = (iRec87[0] + fTemp169);
			fVec49[0] = fTemp171;
			float fTemp172 = (0.5f * fVec49[1]);
			float fTemp173 = (0.5f * fVec49[0]);
			float fTemp174 = (1 + fTemp173);
			float fTemp175 = (fTemp174 - (fTemp172 + floorf((fTemp174 - fTemp172))));
			float fTemp176 = (0.5f * (1.0f + fVec49[0]));
			int iTemp177 = ((int((fTemp172 > fTemp173)))?1:((int(((fTemp176 - floorf(fTemp176)) < fTemp175)))?2:0));
			fRec81[0] = square_blep_x(iTemp177, ((int((fTemp173 < 0.5f)))?1.0f:-1.0f), fTemp173, fTemp175);
			float 	fRec82 = square_blep_prev(iTemp177, fRec81[1], fTemp172, fTemp175);
			fRec80[0] = (fRec80[1] + (fConst6 * (fRec82 - fRec80[1])));
			fRec79[0] = (fConst7 * ((fRec80[0] - fRec80[1]) + fRec79[1]));
			fVec50[0] = fSlow24;
			float fTemp178 = (fSlow24 + fVec50[1]);
			float fTemp179 = ((fConst1 * float((5274.04091060592f * (fSlow25 * fTemp1)))) + fRec93[1]);
			fRec93[0] = (fTemp179 - floorf(fTemp179));
			iRec92[0] = ((int(((fRec93[0] - fRec93[1]) < 0)))?(1 - iRec92[1]):iRec92[1]);
			float fTemp180 = (fRec93[0] + iRec92[0]);
			fVec51[0] = fTemp180;
			float fTemp181 = (0.5f * fVec51[0]);
			float fTemp182 = (0.5f * fVec51[1]);
			iRec94[0] = ((int(((fTemp181 - fTemp182) < 0)))?(1 - iRec94[1]):iRec94[1]);
			float fTemp183 = (iRec94[0] + fTemp181);
			fVec52[0] = fTemp183;
			float fTemp184 = (0.5f * fVec52[0]);
			float fTemp185 = (0.5f * fVec52[1]);
			iRec95[0] = ((int(((fTemp184 - fTemp185) < 0)))?(1 - iRec95[1]):iRec95[1]);
			float fTemp186 = (iRec95[0] + fTemp184);
			fVec53[0] = fTemp186;
			float fTemp187 = (0.5f * fVec53[0]);
			float fTemp188 = (0.5f * fVec53[1]);
			iRec96[0] = ((int(((fTemp187 - fTemp188) < 0)))?(1 - iRec96[1]):iRec96[1]);
			float fTemp189 = (iRec96[0] + fTemp187);
			fVec54[0] = fTemp189;
			float fTemp190 = (0.5f * fVec54[1]);
			float fTemp191 = (0.5f * fVec54[0]);
			float fTemp192 = (1 + fTemp191);
			float fTemp193 = (fTemp192 - (fTemp190 + floorf((fTemp192 - fTemp190))));
			float fTemp194 = (0.5f * (1.0f + fVec54[0]));
			int iTemp195 = ((int((fTemp190 > fTemp191)))?1:((int(((fTemp194 - floorf(fTemp194)) < fTemp193)))?2:0));
			fRec90[0] = square_blep_x(iTemp195, ((int((fTemp191 < 0.5f)))?1.0f:-1.0f), fTemp191, fTemp193);
			float 	fRec91 = square_blep_prev(iTemp195, fRec90[1], fTemp190, fTemp193);
			fRec89[0] = (fRec89[1] + (fConst8 * (fRec91 - fRec89[1])));
			fRec88[0] = (fConst7 * ((fRec89[0] - fRec89[1]) + fRec88[1]));
			fVec55[0] = fSlow26;
			float fTemp196 = (fSlow26 + fVec55[1]);
			float fTemp197 = ((fConst1 * float((5587.651702928062f * (fSlow27 * fTemp1)))) + fRec102[1]);
			fRec102[0] = (fTemp197 - floorf(fTemp197));
			iRec101[0] = ((int(((fRec102[0] - fRec102[1]) < 0)))?(1 - iRec101[1]):iRec101[1]);
			float fTemp198 = (fRec102[0] + iRec101[0]);
			fVec56[0] = fTemp198;
			float fTemp199 = (0.5f * fVec56[0]);
			float fTemp200 = (0.5f * fVec56[1]);
			iRec103[0] = ((int(((fTemp199 - fTemp200) < 0)))?(1 - iRec103[1]):iRec103[1]);
			float fTemp201 = (iRec103[0] + fTemp199);
			fVec57[0] = fTemp201;
			float fTemp202 = (0.5f * fVec57[0]);
			float fTemp203 = (0.5f * fVec57[1]);
			iRec104[0] = ((int(((fTemp202 - fTemp203) < 0)))?(1 - iRec104[1]):iRec104[1]);
			float fTemp204 = (iRec104[0] + fTemp202);
			fVec58[0] = fTemp204;
			float fTemp205 = (0.5f * fVec58[0]);
			float fTemp206 = (0.5f * fVec58[1]);
			iRec105[0] = ((int(((fTemp205 - fTemp206) < 0)))?(1 - iRec105[1]):iRec105[1]);
			float fTemp207 = (iRec105[0] + fTemp205);
			fVec59[0] = fTemp207;
			float fTemp208 = (0.5f * fVec59[1]);
			float fTemp209 = (0.5f * fVec59[0]);
			float fTemp210 = (1 + fTemp209);
			float fTemp211 = (fTemp210 - (fTemp208 + floorf((fTemp210 - fTemp208))));
			float fTemp212 = (0.5f * (1.0f + fVec59[0]));
			int iTemp213 = ((int((fTemp208 > fTemp209)))?1:((int(((fTemp212 - floorf(fTemp212)) < fTemp211)))?2:0));
			fRec99[0] = square_blep_x(iTemp213, ((int((fTemp209 < 0.5f)))?1.0f:-1.0f), fTemp209, fTemp211);
			float 	fRec100 = square_blep_prev(iTemp213, fRec99[1], fTemp208, fTemp211);
			fRec98[0] = (fRec98[1] + (fConst8 * (fRec100 - fRec98[1])));
			fRec97[0] = (fConst7 * ((fRec98[0] - fRec98[1]) + fRec97[1]));
			fVec60[0] = fSlow28;
			float fTemp214 = (fSlow28 + fVec60[1]);
			float fTemp215 = ((fConst1 * float((5919.91076338615f * (fSlow29 * fTemp1)))) + fRec111[1]);
			fRec111[0] = (fTemp215 - floorf(fTemp215));
			iRec110[0] = ((int(((fRec111[0] - fRec111[1]) < 0)))?(1 - iRec110[1]):iRec110[1]);
			float fTemp216 = (fRec111[0] + iRec110[0]);
			fVec61[0] = fTemp216;
			float fTemp217 = (0.5f * fVec61[0]);
			float fTemp218 = (0.5f * fVec61[1]);
			iRec112[0] = ((int(((fTemp217 - fTemp218) < 0)))?(1 - iRec112[1]):iRec112[1]);
			float fTemp219 = (iRec112[0] + fTemp217);
			fVec62[0] = fTemp219;
			float fTemp220 = (0.5f * fVec62[0]);
			float fTemp221 = (0.5f * fVec62[1]);
			iRec113[0] = ((int(((fTemp220 - fTemp221) < 0)))?(1 - iRec113[1]):iRec113[1]);
			float fTemp222 = (iRec113[0] + fTemp220);
			fVec63[0] = fTemp222;
			float fTemp223 = (0.5f * fVec63[0]);
			float fTemp224 = (0.5f * fVec63[1]);
			iRec114[0] = ((int(((fTemp223 - fTemp224) < 0)))?(1 - iRec114[1]):iRec114[1]);
			float fTemp225 = (iRec114[0] + fTemp223);
			fVec64[0] = fTemp225;
			float fTemp226 = (0.5f * fVec64[1]);
			float fTemp227 = (0.5f * fVec64[0]);
			float fTemp228 = (1 + fTemp227);
			float fTemp229 = (fTemp228 - (fTemp226 + floorf((fTemp228 - fTemp226))));
			float fTemp230 = (0.5f * (1.0f + fVec64[0]));
			int iTemp231 = ((int((fTemp226 > fTemp227)))?1:((int(((fTemp230 - floorf(fTemp230)) < fTemp229)))?2:0));
			fRec108[0] = square_blep_x(iTemp231, ((int((fTemp227 < 0.5f)))?1.0f:-1.0f), fTemp227, fTemp229);
			float 	fRec109 = square_blep_prev(iTemp231, fRec108[1], fTemp226, fTemp229);
			fRec107[0] = (fRec107[1] + (fConst8 * (fRec109 - fRec107[1])));
			fRec106[0] = (fConst7 * ((fRec107[0] - fRec107[1]) + fRec106[1]));
			fVec65[0] = fSlow30;
			float fTemp232 = (fSlow30 + fVec65[1]);
			float fTemp233 = (1 + fTemp13);
			float fTemp234 = (fTemp233 - (fTemp14 + floorf((fTemp233 - fTemp14))));
			float fTemp235 = (0.5f * (1.0f + fVec4[0]));
			int iTemp236 = ((int((fTemp14 > fTemp13)))?1:((int(((fTemp235 - floorf(fTemp235)) < fTemp234)))?2:0));
			fRec117[0] = square_blep_x(iTemp236, ((int((fTemp13 < 0.5f)))?1.0f:-1.0f), fTemp13, fTemp234);
			float 	fRec118 = square_blep_prev(iTemp236, fRec117[1], fTemp14, fTemp234);
			fRec116[0] = (fRec116[1] + (fConst8 * (fRec118 - fRec116[1])));
			fRec115[0] = (fConst7 * ((fRec116[0] - fRec116[1]) + fRec115[1]));
			fVec66[0] = fSlow31;
			float fTemp237 = (fSlow31 + fVec66[1]);
			float fTemp238 = (1 + fTemp34);
			float fTemp239 = (fTemp238 - (fTemp35 + floorf((fTemp238 - fTemp35))));
			float fTemp240 = (0.5f * (1.0f + fVec10[0]));
			int iTemp241 = ((int((fTemp35 > fTemp34)))?1:((int(((fTemp240 - floorf(fTemp240)) < fTemp239)))?2:0));
			fRec121[0] = square_blep_x(iTemp241, ((int((fTemp34 < 0.5f)))?1.0f:-1.0f), fTemp34, fTemp239);
			float 	fRec122 = square_blep_prev(iTemp241, fRec121[1], fTemp35, fTemp239);
			fRec120[0] = (fRec120[1] + (fConst9 * (fRec122 - fRec120[1])));
			fRec119[0] = (fConst7 * ((fRec120[0] - fRec120[1]) + fRec119[1]));
			fVec67[0] = fSlow32;
			float fTemp242 = (fSlow32 + fVec67[1]);
			float fTemp243 = (1 + fTemp55);
			float fTemp244 = (fTemp243 - (fTemp56 + floorf((fTemp243 - fTemp56))));
			float fTemp245 = (0.5f * (1.0f + fVec16[0]));
			int iTemp246 = ((int((fTemp56 > fTemp55)))?1:((int(((fTemp245 - floorf(fTemp245)) < fTemp244)))?2:0));
			fRec125[0] = square_blep_x(iTemp246, ((int((fTemp55 < 0.5f)))?1.0f:-1.0f), fTemp55, fTemp244);
			float 	fRec126 = square_blep_prev(iTemp246, fRec125[1], fTemp56, fTemp244);
			fRec124[0] = (fRec124[1] + (fConst9 * (fRec126 - fRec124[1])));
			fRec123[0] = (fConst7 * ((fRec124[0] - fRec124[1]) + fRec123[1]));
			fVec68[0] = fSlow33;
			float fTemp247 = (fSlow33 + fVec68[1]);
			float fTemp248 = (1 + fTemp76);
			float fTemp249 = (fTemp248 - (fTemp77 + floorf((fTemp248 - fTemp77))));
			float fTemp250 = (0.5f * (1.0f + fVec22[0]));
			int iTemp251 = ((int((fTemp77 > fTemp76)))?1:((int(((fTemp250 - floorf(fTemp250)) < fTemp249)))?2:0));
			fRec129[0] = square_blep_x(iTemp251, ((int((fTemp76 < 0.5f)))?1.0f:-1.0f), fTemp76, fTemp249);
			float 	fRec130 = square_blep_prev(iTemp251, fRec129[1], fTemp77, fTemp249);
			fRec128[0] = (fRec128[1] + (fConst9 * (fRec130 - fRec128[1])));
			fRec127[0] = (fConst7 * ((fRec128[0] - fRec128[1]) + fRec127[1]));
			fVec69[0] = fSlow34;
			float fTemp252 = (fSlow34 + fVec69[1]);
			float fTemp253 = (1 + fTemp97);
			float fTemp254 = (fTemp253 - (fTemp98 + floorf((fTemp253 - fTemp98))));
			float fTemp255 = (0.5f * (1.0f + fVec28[0]));
			int iTemp256 = ((int((fTemp98 > fTemp97)))?1:((int(((fTemp255 - floorf(fTemp255)) < fTemp254)))?2:0));
			fRec133[0] = square_blep_x(iTemp256, ((int((fTemp97 < 0.5f)))?1.0f:-1.0f), fTemp97, fTemp254);
			float 	fRec134 = square_blep_prev(iTemp256, fRec133[1], fTemp98, fTemp254);
			fRec132[0] = (fRec132[1] + (fConst9 * (fRec134 - fRec132[1])));
			fRec131[0] = (fConst7 * ((fRec132[0] - fRec132[1]) + fRec131[1]));
			fVec70[0] = fSlow37;
			float fTemp257 = (fSlow37 + fVec70[1]);
			float fTemp258 = (1 + fTemp115);
			float fTemp259 = (fTemp258 - (fTemp116 + floorf((fTemp258 - fTemp116))));
			float fTemp260 = (0.5f * (1.0f + fVec33[0]));
			int iTemp261 = ((int((fTemp116 > fTemp115)))?1:((int(((fTemp260 - floorf(fTemp260)) < fTemp259)))?2:0));
			fRec137[0] = square_blep_x(iTemp261, ((int((fTemp115 < 0.5f)))?1.0f:-1.0f), fTemp115, fTemp259);
			float 	fRec138 = square_blep_prev(iTemp261, fRec137[1], fTemp116, fTemp259);
			fRec136[0] = (fRec136[1] + (fConst10 * (fRec138 - fRec136[1])));
			fRec135[0] = (fConst7 * ((fRec136[0] - fRec136[1]) + fRec135[1]));
			fVec71[0] = fSlow38;
			float fTemp262 = (fSlow38 + fVec71[1]);
			float fTemp263 = (1 + fTemp133);
			float fTemp264 = (fTemp263 - (fTemp134 + floorf((fTemp263 - fTemp134))));
			float fTemp265 = (0.5f * (1.0f + fVec38[0]));
			int iTemp266 = ((int((fTemp134 > fTemp133)))?1:((int(((fTemp265 - floorf(fTemp265)) < fTemp264)))?2:0));
			fRec141[0] = square_blep_x(iTemp266, ((int((fTemp133 < 0.5f)))?1.0f:-1.0f), fTemp133, fTemp264);
			float 	fRec142 = square_blep_prev(iTemp266, fRec141[1], fTemp134, fTemp264);
			fRec140[0] = (fRec140[1] + (fConst10 * (fRec142 - fRec140[1])));
			fRec139[0] = (fConst7 * ((fRec140[0] - fRec140[1]) + fRec139[1]));
			fVec72[0] = fSlow39;
			float fTemp267 = (fSlow39 + fVec72[1]);
			float fTemp268 = (1 + fTemp151);
			float fTemp269 = (fTemp268 - (fTemp152 + floorf((fTemp268 - fTemp152))));
			float fTemp270 = (0.5f * (1.0f + fVec43[0]));
			int iTemp271 = ((int((fTemp152 > fTemp151)))?1:((int(((fTemp270 - floorf(fTemp270)) < fTemp269)))?2:0));
			fRec145[0] = square_blep_x(iTemp271, ((int((fTemp151 < 0.5f)))?1.0f:-1.0f), fTemp151, fTemp269);
			float 	fRec146 = square_blep_prev(iTemp271, fRec145[1], fTemp152, fTemp269);
			fRec144[0] = (fRec144[1] + (fConst10 * (fRec146 - fRec144[1])));
			fRec143[0] = (fConst7 * ((fRec144[0] - fRec144[1]) + fRec143[1]));
			fVec73[0] = fSlow40;
			float fTemp272 = (fSlow40 + fVec73[1]);
			float fTemp273 = (1 + fTemp169);
			float fTemp274 = (fTemp273 - (fTemp170 + floorf((fTemp273 - fTemp170))));
			float fTemp275 = (0.5f * (1.0f + fVec48[0]));
			int iTemp276 = ((int((fTemp170 > fTemp169)))?1:((int(((fTemp275 - floorf(fTemp275)) < fTemp274)))?2:0));
			fRec149[0] = square_blep_x(iTemp276, ((int((fTemp169 < 0.5f)))?1.0f:-1.0f), fTemp169, fTemp274);
			float 	fRec150 = square_blep_prev(iTemp276, fRec149[1], fTemp170, fTemp274);
			fRec148[0] = (fRec148[1] + (fConst10 * (fRec150 - fRec148[1])));
			fRec147[0] = (fConst7 * ((fRec148[0] - fRec148[1]) + fRec147[1]));
			fVec74[0] = fSlow41;
			float fTemp277 = (fSlow41 + fVec74[1]);
			float fTemp278 = (1 + fTemp187);
			float fTemp279 = (fTemp278 - (fTemp188 + floorf((fTemp278 - fTemp188))));
			float fTemp280 = (0.5f * (1.0f + fVec53[0]));
			int iTemp281 = ((int((fTemp188 > fTemp187)))?1:((int(((fTemp280 - floorf(fTemp280)) < fTemp279)))?2:0));
			fRec153[0] = square_blep_x(iTemp281, ((int((fTemp187 < 0.5f)))?1.0f:-1.0f), fTemp187, fTemp279);
			float 	fRec154 = square_blep_prev(iTemp281, fRec153[1], fTemp188, fTemp279);
			fRec152[0] = (fRec152[1] + (fConst11 * (fRec154 - fRec152[1])));
			fRec151[0] = (fConst7 * ((fRec152[0] - fRec152[1]) + fRec151[1]));
			fVec75[0] = fSlow42;
			float fTemp282 = (fSlow42 + fVec75[1]);
			float fTemp283 = (1 + fTemp205);
			float fTemp284 = (fTemp283 - (fTemp206 + floorf((fTemp283 - fTemp206))));
			float fTemp285 = (0.5f * (1.0f + fVec58[0]));
			int iTemp286 = ((int((fTemp206 > fTemp205)))?1:((int(((fTemp285 - floorf(fTemp285)) < fTemp284)))?2:0));
			fRec157[0] = square_blep_x(iTemp286, ((int((fTemp205 < 0.5f)))?1.0f:-1.0f), fTemp205, fTemp284);
			float 	fRec158 = square_blep_prev(iTemp286, fRec157[1], fTemp206, fTemp284);
			fRec156[0] = (fRec156[1] + (fConst11 * (fRec158 - fRec156[1])));
			fRec155[0] = (fConst7 * ((fRec156[0] - fRec156[1]) + fRec155[1]));
			fVec76[0] = fSlow43;
			float fTemp287 = (fSlow43 + fVec76[1]);
			float fTemp288 = (1 + fTemp223);
			float fTemp289 = (fTemp288 - (fTemp224 + floorf((fTemp288 - fTemp224))));
			float fTemp290 = (0.5f * (1.0f + fVec63[0]));
			int iTemp291 = ((int((fTemp224 > fTemp223)))?1:((int(((fTemp290 - floorf(fTemp290)) < fTemp289)))?2:0));
			fRec161[0] = square_blep_x(iTemp291, ((int((fTemp223 < 0.5f)))?1.0f:-1.0f), fTemp223, fTemp289);
			float 	fRec162 = square_blep_prev(iTemp291, fRec161[1], fTemp224, fTemp289);
			fRec160[0] = (fRec160[1] + (fConst11 * (fRec162 - fRec160[1])));
			fRec159[0] = (fConst7 * ((fRec160[0] - fRec160[1]) + fRec159[1]));
			fVec77[0] = fSlow44;
			float fTemp292 = (fSlow44 + fVec77[1]);
			float fTemp293 = (1 + fTemp10);
			float fTemp294 = (fTemp293 - (fTemp11 + floorf((fTemp293 - fTemp11))));
			float fTemp295 = (0.5f * (1.0f + fVec3[0]));
			int iTemp296 = ((int((fTemp11 > fTemp10)))?1:((int(((fTemp295 - floorf(fTemp295)) < fTemp294)))?2:0));
			fRec165[0] = square_blep_x(iTemp296, ((int((fTemp10 < 0.5f)))?1.0f:-1.0f), fTemp10, fTemp294);
			float 	fRec166 = square_blep_prev(iTemp296, fRec165[1], fTemp11, fTemp294);
			fRec164[0] = (fRec164[1] + (fConst11 * (fRec166 - fRec164[1])));
			fRec163[0] = (fConst7 * ((fRec164[0] - fRec164[1]) + fRec163[1]));
			fVec78[0] = fSlow45;
			float fTemp297 = (fSlow45 + fVec78[1]);
			float fTemp298 = (1 + fTemp31);
			float fTemp299 = (fTemp298 - (fTemp32 + floorf((fTemp298 - fTemp32))));
			float fTemp300 = (0.5f * (1.0f + fVec9[0]));
			int iTemp301 = ((int((fTemp32 > fTemp31)))?1:((int(((fTemp300 - floorf(fTemp300)) < fTemp299)))?2:0));
			fRec169[0] = square_blep_x(iTemp301, ((int((fTemp31 < 0.5f)))?1.0f:-1.0f), fTemp31, fTemp299);
			float 	fRec170 = square_blep_prev(iTemp301, fRec169[1], fTemp32, fTemp299);
			fRec168[0] = (fRec168[1] + (fConst12 * (fRec170 - fRec168[1])));
			fRec167[0] = (fConst7 * ((fRec168[0] - fRec168[1]) + fRec167[1]));
			fVec79[0] = fSlow46;
			float fTemp302 = (fSlow46 + fVec79[1]);
			float fTemp303 = (1 + fTemp52);
			float fTemp304 = (fTemp303 - (fTemp53 + floorf((fTemp303 - fTemp53))));
			float fTemp305 = (0.5f * (1.0f + fVec15[0]));
			int iTemp306 = ((int((fTemp53 > fTemp52)))?1:((int(((fTemp305 - floorf(fTemp305)) < fTemp304)))?2:0));
			fRec173[0] = square_blep_x(iTemp306, ((int((fTemp52 < 0.5f)))?1.0f:-1.0f), fTemp52, fTemp304);
			float 	fRec174 = square_blep_prev(iTemp306, fRec173[1], fTemp53, fTemp304);
			fRec172[0] = (fRec172[1] + (fConst12 * (fRec174 - fRec172[1])));
			fRec171[0] = (fConst7 * ((fRec172[0] - fRec172[1]) + fRec171[1]));
			fVec80[0] = fSlow47;
			float fTemp307 = (fSlow47 + fVec80[1]);
			float fTemp308 = (1 + fTemp73);
			float fTemp309 = (fTemp308 - (fTemp74 + floorf((fTemp308 - fTemp74))));
			float fTemp310 = (0.5f * (1.0f + fVec21[0]));
			int iTemp311 = ((int((fTemp74 > fTemp73)))?1:((int(((fTemp310 - floorf(fTemp310)) < fTemp309)))?2:0));
			fRec177[0] = square_blep_x(iTemp311, ((int((fTemp73 < 0.5f)))?1.0f:-1.0f), fTemp73, fTemp309);
			float 	fRec178 = square_blep_prev(iTemp311, fRec177[1], fTemp74, fTemp309);
			fRec176[0] = (fRec176[1] + (fConst12 * (fRec178 - fRec176[1])));
			fRec175[0] = (fConst7 * ((fRec176[0] - fRec176[1]) + fRec175[1]));
			fVec81[0] = fSlow48;
			float fTemp312 = (fSlow48 + fVec81[1]);
			float fTemp313 = (1 + fTemp94);
			float fTemp314 = (fTemp313 - (fTemp95 + floorf((fTemp313 - fTemp95))));
			float fTemp315 = (0.5f * (1.0f + fVec27[0]));
			int iTemp316 = ((int((fTemp95 > fTemp94)))?1:((int(((fTemp315 - floorf(fTemp315)) < fTemp314)))?2:0));
			fRec181[0] = square_blep_x(iTemp316, ((int((fTemp94 < 0.5f)))?1.0f:-1.0f), fTemp94, fTemp314);
			float 	fRec182 = square_blep_prev(iTemp316, fRec181[1], fTemp95, fTemp314);
			fRec180[0] = (fRec180[1] + (fConst12 * (fRec182 - fRec180[1])));
			fRec179[0] = (fConst7 * ((fRec180[0] - fRec180[1]) + fRec179[1]));
			fVec82[0] = fSlow49;
			float fTemp317 = (fSlow49 + fVec82[1]);
			float fTemp318 = (1 + fTemp112);
			float fTemp319 = (fTemp318 - (fTemp113 + floorf((fTemp318 - fTemp113))));
			float fTemp320 = (0.5f * (1.0f + fVec32[0]));
			int iTemp321 = ((int((fTemp113 > fTemp112)))?1:((int(((fTemp320 - floorf(fTemp320)) < fTemp319)))?2:0));
			fRec185[0] = square_blep_x(iTemp321, ((int((fTemp112 < 0.5f)))?1.0f:-1.0f), fTemp112, fTemp319);
			float 	fRec186 = square_blep_prev(iTemp321, fRec185[1], fTemp113, fTemp319);
			fRec184[0] = (fRec184[1] + (fConst13 * (fRec186 - fRec184[1])));
			fRec183[0] = (fConst7 * ((fRec184[0] - fRec184[1]) + fRec183[1]));
			fVec83[0] = fSlow50;
			float fTemp322 = (fSlow50 + fVec83[1]);
			float fTemp323 = (1 + fTemp130);
			float fTemp324 = (fTemp323 - (fTemp131 + floorf((fTemp323 - fTemp131))));
			float fTemp325 = (0.5f * (1.0f + fVec37[0]));
			int iTemp326 = ((int((fTemp131 > fTemp130)))?1:((int(((fTemp325 - floorf(fTemp325)) < fTemp324)))?2:0));
			fRec189[0] = square_blep_x(iTemp326, ((int((fTemp130 < 0.5f)))?1.0f:-1.0f), fTemp130, fTemp324);
			float 	fRec190 = square_blep_prev(iTemp326, fRec189[1], fTemp131, fTemp324);
			fRec188[0] = (fRec188[1] + (fConst13 * (fRec190 - fRec188[1])));
			fRec187[0] = (fConst7 * ((fRec188[0] - fRec188[1]) + fRec187[1]));
			fVec84[0] = fSlow51;
			float fTemp327 = (fSlow51 + fVec84[1]);
			float fTemp328 = (1 + fTemp148);
			float fTemp329 = (fTemp328 - (fTemp149 + floorf((fTemp328 - fTemp149))));
			float fTemp330 = (0.5f * (1.0f + fVec42[0]));
			int iTemp331 = ((int((fTemp149 > fTemp148)))?1:((int(((fTemp330 - floorf(fTemp330)) < fTemp329)))?2:0));
			fRec193[0] = square_blep_x(iTemp331, ((int((fTemp148 < 0.5f)))?1.0f:-1.0f), fTemp148, fTemp329);
			float 	fRec194 = square_blep_prev(iTemp331, fRec193[1], fTemp149, fTemp329);
			fRec192[0] = (fRec192[1] + (fConst13 * (fRec194 - fRec192[1])));
			fRec191[0] = (fConst7 * ((fRec192[0] - fRec192[1]) + fRec191[1]));
			fVec85[0] = fSlow52;
			float fTemp332 = (fSlow52 + fVec85[1]);
			float fTemp333 = (1 + fTemp166);
			float fTemp334 = (fTemp333 - (fTemp167 + floorf((fTemp333 - fTemp167))));
			float fTemp335 = (0.5f * (1.0f + fVec47[0]));
			int iTemp336 = ((int((fTemp167 > fTemp166)))?1:((int(((fTemp335 - floorf(fTemp335)) < fTemp334)))?2:0));
			fRec197[0] = square_blep_x(iTemp336, ((int((fTemp166 < 0.5f)))?1.0f:-1.0f), fTemp166, fTemp334);
			float 	fRec198 = square_blep_prev(iTemp336, fRec197[1], fTemp167, fTemp334);
			fRec196[0] = (fRec196[1] + (fConst13 * (fRec198 - fRec196[1])));
			fRec195[0] = (fConst7 * ((fRec196[0] - fRec196[1]) + fRec195[1]));
			fVec86[0] = fSlow53;
			float fTemp337 = (fSlow53 + fVec86[1]);
			float fTemp338 = (1 + fTemp184);
			float fTemp339 = (fTemp338 - (fTemp185 + floorf((fTemp338 - fTemp185))));
			float fTemp340 = (0.5f * (1.0f + fVec52[0]));
			int iTemp341 = ((int((fTemp185 > fTemp184)))?1:((int(((fTemp340 - floorf(fTemp340)) < fTemp339)))?2:0));
			fRec201[0] = square_blep_x(iTemp341, ((int((fTemp184 < 0.5f)))?1.0f:-1.0f), fTemp184, fTemp339);
			float 	fRec202 = square_blep_prev(iTemp341, fRec201[1], fTemp185, fTemp339);
			fRec200[0] = (fRec200[1] + (fConst14 * (fRec202 - fRec200[1])));
			fRec199[0] = (fConst7 * ((fRec200[0] - fRec200[1]) + fRec199[1]));
			fVec87[0] = fSlow54;
			float fTemp342 = (fSlow54 + fVec87[1]);
			float fTemp343 = (1 + fTemp202);
			float fTemp344 = (fTemp343 - (fTemp203 + floorf((fTemp343 - fTemp203))));
			float fTemp345 = (0.5f * (1.0f + fVec57[0]));
			int iTemp346 = ((int((fTemp203 > fTemp202)))?1:((int(((fTemp345 - floorf(fTemp345)) < fTemp344)))?2:0));
			fRec205[0] = square_blep_x(iTemp346, ((int((fTemp202 < 0.5f)))?1.0f:-1.0f), fTemp202, fTemp344);
			float 	fRec206 = square_blep_prev(iTemp346, fRec205[1], fTemp203, fTemp344);
			fRec204[0] = (fRec204[1] + (fConst14 * (fRec206 - fRec204[1])));
			fRec203[0] = (fConst7 * ((fRec204[0] - fRec204[1]) + fRec203[1]));
			fVec88[0] = fSlow55;
			float fTemp347 = (fSlow55 + fVec88[1]);
			float fTemp348 = (1 + fTemp220);
			float fTemp349 = (fTemp348 - (fTemp221 + floorf((fTemp348 - fTemp221))));
			float fTemp350 = (0.5f * (1.0f + fVec62[0]));
			int iTemp351 = ((int((fTemp221 > fTemp220)))?1:((int(((fTemp350 - floorf(fTemp350)) < fTemp349)))?2:0));
			fRec209[0] = square_blep_x(iTemp351, ((int((fTemp220 < 0.5f)))?1.0f:-1.0f), fTemp220, fTemp349);
			float 	fRec210 = square_blep_prev(iTemp351, fRec209[1], fTemp221, fTemp349);
			fRec208[0] = (fRec208[1] + (fConst14 * (fRec210 - fRec208[1])));
			fRec207[0] = (fConst7 * ((fRec208[0] - fRec208[1]) + fRec207[1]));
			fVec89[0] = fSlow56;
			float fTemp352 = (fSlow56 + fVec89[1]);
			float fTemp353 = (1 + fTemp7);
			float fTemp354 = (fTemp353 - (fTemp8 + floorf((fTemp353 - fTemp8))));
			float fTemp355 = (0.5f * (1.0f + fVec2[0]));
			int iTemp356 = ((int((fTemp8 > fTemp7)))?1:((int(((fTemp355 - floorf(fTemp355)) < fTemp354)))?2:0));
			fRec213[0] = square_blep_x(iTemp356, ((int((fTemp7 < 0.5f)))?1.0f:-1.0f), fTemp7, fTemp354);
			float 	fRec214 = square_blep_prev(iTemp356, fRec213[1], fTemp8, fTemp354);
			fRec212[0] = (fRec212[1] + (fConst14 * (fRec214 - fRec212[1])));
			fRec211[0] = (fConst7 * ((fRec212[0] - fRec212[1]) + fRec211[1]));
			fVec90[0] = fSlow57;
			float fTemp357 = (fSlow57 + fVec90[1]);
			float fTemp358 = (1 + fTemp28);
			float fTemp359 = (fTemp358 - (fTemp29 + floorf((fTemp358 - fTemp29))));
			float fTemp360 = (0.5f * (1.0f + fVec8[0]));
			int iTemp361 = ((int((fTemp29 > fTemp28)))?1:((int(((fTemp360 - floorf(fTemp360)) < fTemp359)))?2:0));
			fRec217[0] = square_blep_x(iTemp361, ((int((fTemp28 < 0.5f)))?1.0f:-1.0f), fTemp28, fTemp359);
			float 	fRec218 = square_blep_prev(iTemp361, fRec217[1], fTemp29, fTemp359);
			fRec216[0] = (fRec216[1] + (fConst15 * (fRec218 - fRec216[1])));
			fRec215[0] = (fConst7 * ((fRec216[0] - fRec216[1]) + fRec215[1]));
			fVec91[0] = fSlow58;
			float fTemp362 = (fSlow58 + fVec91[1]);
			float fTemp363 = (1 + fTemp49);
			float fTemp364 = (fTemp363 - (fTemp50 + floorf((fTemp363 - fTemp50))));
			float fTemp365 = (0.5f * (1.0f + fVec14[0]));
			int iTemp366 = ((int((fTemp50 > fTemp49)))?1:((int(((fTemp365 - floorf(fTemp365)) < fTemp364)))?2:0));
			fRec221[0] = square_blep_x(iTemp366, ((int((fTemp49 < 0.5f)))?1.0f:-1.0f), fTemp49, fTemp364);
			float 	fRec222 = square_blep_prev(iTemp366, fRec221[1], fTemp50, fTemp364);
			fRec220[0] = (fRec220[1] + (fConst15 * (fRec222 - fRec220[1])));
			fRec219[0] = (fConst7 * ((fRec220[0] - fRec220[1]) + fRec219[1]));
			fVec92[0] = fSlow59;
			float fTemp367 = (fSlow59 + fVec92[1]);
			float fTemp368 = (1 + fTemp70);
			float fTemp369 = (fTemp368 - (fTemp71 + floorf((fTemp368 - fTemp71))));
			float fTemp370 = (0.5f * (1.0f + fVec20[0]));
			int iTemp371 = ((int((fTemp71 > fTemp70)))?1:((int(((fTemp370 - floorf(fTemp370)) < fTemp369)))?2:0));
			fRec225[0] = square_blep_x(iTemp371, ((int((fTemp70 < 0.5f)))?1.0f:-1.0f), fTemp70, fTemp369);
			float 	fRec226 = square_blep_prev(iTemp371, fRec225[1], fTemp71, fTemp369);
			fRec224[0] = (fRec224[1] + (fConst15 * (fRec226 - fRec224[1])));
			fRec223[0] = (fConst7 * ((fRec224[0] - fRec224[1]) + fRec223[1]));
			fVec93[0] = fSlow60;
			float fTemp372 = (fSlow60 + fVec93[1]);
			float fTemp373 = (1 + fTemp91);
			float fTemp374 = (fTemp373 - (fTemp92 + floorf((fTemp373 - fTemp92))));
			float fTemp375 = (0.5f * (1.0f + fVec26[0]));
			int iTemp376 = ((int((fTemp92 > fTemp91)))?1:((int(((fTemp375 - floorf(fTemp375)) < fTemp374)))?2:0));
			fRec229[0] = square_blep_x(iTemp376, ((int((fTemp91 < 0.5f)))?1.0f:-1.0f), fTemp91, fTemp374);
			float 	fRec230 = square_blep_prev(iTemp376, fRec229[1], fTemp92, fTemp374);
			fRec228[0] = (fRec228[1] + (fConst15 * (fRec230 - fRec228[1])));
			fRec227[0] = (fConst7 * ((fRec228[0] - fRec228[1]) + fRec227[1]));
			fVec94[0] = fSlow61;
			float fTemp377 = (fSlow61 + fVec94[1]);
			float fTemp378 = (1 + fTemp109);
			float fTemp379 = (fTemp378 - (fTemp110 + floorf((fTemp378 - fTemp110))));
			float fTemp380 = (0.5f * (1.0f + fVec31[0]));
			int iTemp381 = ((int((fTemp110 > fTemp109)))?1:((int(((fTemp380 - floorf(fTemp380)) < fTemp379)))?2:0));
			fRec233[0] = square_blep_x(iTemp381, ((int((fTemp109 < 0.5f)))?1.0f:-1.0f), fTemp109, fTemp379);
			float 	fRec234 = square_blep_prev(iTemp381, fRec233[1], fTemp110, fTemp379);
			fRec232[0] = (fRec232[1] + (fConst16 * (fRec234 - fRec232[1])));
			fRec231[0] = (fConst7 * ((fRec232[0] - fRec232[1]) + fRec231[1]));
			fVec95[0] = fSlow62;
			float fTemp382 = (fSlow62 + fVec95[1]);
			float fTemp383 = (1 + fTemp127);
			float fTemp384 = (fTemp383 - (fTemp128 + floorf((fTemp383 - fTemp128))));
			float fTemp385 = (0.5f * (1.0f + fVec36[0]));
			int iTemp386 = ((int((fTemp128 > fTemp127)))?1:((int(((fTemp385 - floorf(fTemp385)) < fTemp384)))?2:0));
			fRec237[0] = square_blep_x(iTemp386, ((int((fTemp127 < 0.5f)))?1.0f:-1.0f), fTemp127, fTemp384);
			float 	fRec238 = square_blep_prev(iTemp386, fRec237[1], fTemp128, fTemp384);
			fRec236[0] = (fRec236[1] + (fConst16 * (fRec238 - fRec236[1])));
			fRec235[0] = (fConst7 * ((fRec236[0] - fRec236[1]) + fRec235[1]));
			fVec96[0] = fSlow63;
			float fTemp387 = (fSlow63 + fVec96[1]);
			float fTemp388 = (1 + fTemp145);
			float fTemp389 = (fTemp388 - (fTemp146 + floorf((fTemp388 - fTemp146))));
			float fTemp390 = (0.5f * (1.0f + fVec41[0]));
			int iTemp391 = ((int((fTemp146 > fTemp145)))?1:((int(((fTemp390 - floorf(fTemp390)) < fTemp389)))?2:0));
			fRec241[0] = square_blep_x(iTemp391, ((int((fTemp145 < 0.5f)))?1.0f:-1.0f), fTemp145, fTemp389);
			float 	fRec242 = square_blep_prev(iTemp391, fRec241[1], fTemp146, fTemp389);
			fRec240[0] = (fRec240[1] + (fConst16 * (fRec242 - fRec240[1])));
			fRec239[0] = (fConst7 * ((fRec240[0] - fRec240[1]) + fRec239[1]));
			fVec97[0] = fSlow64;
			float fTemp392 = (fSlow64 + fVec97[1]);
			float fTemp393 = (1 + fTemp163);
			float fTemp394 = (fTemp393 - (fTemp164 + floorf((fTemp393 - fTemp164))));
			float fTemp395 = (0.5f * (1.0f + fVec46[0]));
			int iTemp396 = ((int((fTemp164 > fTemp163)))?1:((int(((fTemp395 - floorf(fTemp395)) < fTemp394)))?2:0));
			fRec245[0] = square_blep_x(iTemp396, ((int((fTemp163 < 0.5f)))?1.0f:-1.0f), fTemp163, fTemp394);
			float 	fRec246 = square_blep_prev(iTemp396, fRec245[1], fTemp164, fTemp394);
			fRec244[0] = (fRec244[1] + (fConst16 * (fRec246 - fRec244[1])));
			fRec243[0] = (fConst7 * ((fRec244[0] - fRec244[1]) + fRec243[1]));
			fVec98[0] = fSlow65;
			float fTemp397 = (fSlow65 + fVec98[1]);
			float fTemp398 = (1 + fTemp181);
			float fTemp399 = (fTemp398 - (fTemp182 + floorf((fTemp398 - fTemp182))));
			float fTemp400 = (0.5f * (1.0f + fVec51[0]));
			int iTemp401 = ((int((fTemp182 > fTemp181)))?1:((int(((fTemp400 - floorf(fTemp400)) < fTemp399)))?2:0));
			fRec249[0] = square_blep_x(iTemp401, ((int((fTemp181 < 0.5f)))?1.0f:-1.0f), fTemp181, fTemp399);
			float 	fRec250 = square_blep_prev(iTemp401, fRec249[1], fTemp182, fTemp399);
			fRec248[0] = (fRec248[1] + (fConst17 * (fRec250 - fRec248[1])));
			fRec247[0] = (fConst7 * ((fRec248[0] - fRec248[1]) + fRec247[1]));
			fVec99[0] = fSlow66;
			float fTemp402 = (fSlow66 + fVec99[1]);
			float fTemp403 = (1 + fTemp199);
			float fTemp404 = (fTemp403 - (fTemp200 + floorf((fTemp403 - fTemp200))));
			float fTemp405 = (0.5f * (1.0f + fVec56[0]));
			int iTemp406 = ((int((fTemp200 > fTemp199)))?1:((int(((fTemp405 - floorf(fTemp405)) < fTemp404)))?2:0));
			fRec253[0] = square_blep_x(iTemp406, ((int((fTemp199 < 0.5f)))?1.0f:-1.0f), fTemp199, fTemp404);
			float 	fRec254 = square_blep_prev(iTemp406, fRec253[1], fTemp200, fTemp404);
			fRec252[0] = (fRec252[1] + (fConst17 * (fRec254 - fRec252[1])));
			fRec251[0] = (fConst7 * ((fRec252[0] - fRec252[1]) + fRec251[1]));
			fVec100[0] = fSlow67;
			float fTemp407 = (fSlow67 + fVec100[1]);
			float fTemp408 = (1 + fTemp217);
			float fTemp409 = (fTemp408 - (fTemp218 + floorf((fTemp408 - fTemp218))));
			float fTemp410 = (0.5f * (1.0f + fVec61[0]));
			int iTemp411 = ((int((fTemp218 > fTemp217)))?1:((int(((fTemp410 - floorf(fTemp410)) < fTemp409)))?2:0));
			fRec257[0] = square_blep_x(iTemp411, ((int((fTemp217 < 0.5f)))?1.0f:-1.0f), fTemp217, fTemp409);
			float 	fRec258 = square_blep_prev(iTemp411, fRec257[1], fTemp218, fTemp409);
			fRec256[0] = (fRec256[1] + (fConst17 * (fRec258 - fRec256[1])));
			fRec255[0] = (fConst7 * ((fRec256[0] - fRec256[1]) + fRec255[1]));
			fVec101[0] = fSlow68;
			float fTemp412 = (fSlow68 + fVec101[1]);
			float fTemp413 = (1 + fTemp4);
			float fTemp414 = (fTemp413 - (fTemp5 + floorf((fTemp413 - fTemp5))));
			float fTemp415 = (0.5f * (1.0f + fVec1[0]));
			int iTemp416 = ((int((fTemp5 > fTemp4)))?1:((int(((fTemp415 - floorf(fTemp415)) < fTemp414)))?2:0));
			fRec261[0] = square_blep_x(iTemp416, ((int((fTemp4 < 0.5f)))?1.0f:-1.0f), fTemp4, fTemp414);
			float 	fRec262 = square_blep_prev(iTemp416, fRec261[1], fTemp5, fTemp414);
			fRec260[0] = (fRec260[1] + (fConst17 * (fRec262 - fRec260[1])));
			fRec259[0] = (fConst7 * ((fRec260[0] - fRec260[1]) + fRec259[1]));
			fVec102[0] = fSlow69;
			float fTemp417 = (fSlow69 + fVec102[1]);
			float fTemp418 = (1 + fTemp25);
			float fTemp419 = (fTemp418 - (fTemp26 + floorf((fTemp418 - fTemp26))));
			float fTemp420 = (0.5f * (1.0f + fVec7[0]));
			int iTemp421 = ((int((fTemp26 > fTemp25)))?1:((int(((fTemp420 - floorf(fTemp420)) < fTemp419)))?2:0));
			fRec265[0] = square_blep_x(iTemp421, ((int((fTemp25 < 0.5f)))?1.0f:-1.0f), fTemp25, fTemp419);
			float 	fRec266 = square_blep_prev(iTemp421, fRec265[1], fTemp26, fTemp419);
			fRec264[0] = (fRec264[1] + (fConst18 * (fRec266 - fRec264[1])));
			fRec263[0] = (fConst7 * ((fRec264[0] - fRec264[1]) + fRec263[1]));
			fVec103[0] = fSlow70;
			float fTemp422 = (fSlow70 + fVec103[1]);
			float fTemp423 = (1 + fTemp46);
			float fTemp424 = (fTemp423 - (fTemp47 + floorf((fTemp423 - fTemp47))));
			float fTemp425 = (0.5f * (1.0f + fVec13[0]));
			int iTemp426 = ((int((fTemp47 > fTemp46)))?1:((int(((fTemp425 - floorf(fTemp425)) < fTemp424)))?2:0));
			fRec269[0] = square_blep_x(iTemp426, ((int((fTemp46 < 0.5f)))?1.0f:-1.0f), fTemp46, fTemp424);
			float 	fRec270 = square_blep_prev(iTemp426, fRec269[1], fTemp47, fTemp424);
			fRec268[0] = (fRec268[1] + (fConst18 * (fRec270 - fRec268[1])));
			fRec267[0] = (fConst7 * ((fRec268[0] - fRec268[1]) + fRec267[1]));
			fVec104[0] = fSlow71;
			float fTemp427 = (fSlow71 + fVec104[1]);
			float fTemp428 = (1 + fTemp67);
			float fTemp429 = (fTemp428 - (fTemp68 + floorf((fTemp428 - fTemp68))));
			float fTemp430 = (0.5f * (1.0f + fVec19[0]));
			int iTemp431 = ((int((fTemp68 > fTemp67)))?1:((int(((fTemp430 - floorf(fTemp430)) < fTemp429)))?2:0));
			fRec273[0] = square_blep_x(iTemp431, ((int((fTemp67 < 0.5f)))?1.0f:-1.0f), fTemp67, fTemp429);
			float 	fRec274 = square_blep_prev(iTemp431, fRec273[1], fTemp68, fTemp429);
			fRec272[0] = (fRec272[1] + (fConst18 * (fRec274 - fRec272[1])));
			fRec271[0] = (fConst7 * ((fRec272[0] - fRec272[1]) + fRec271[1]));
			fVec105[0] = fSlow72;
			float fTemp432 = (fSlow72 + fVec105[1]);
			float fTemp433 = (1 + fTemp88);
			float fTemp434 = (fTemp433 - (fTemp89 + floorf((fTemp433 - fTemp89))));
			float fTemp435 = (0.5f * (1.0f + fVec25[0]));
			int iTemp436 = ((int((fTemp89 > fTemp88)))?1:((int(((fTemp435 - floorf(fTemp435)) < fTemp434)))?2:0));
			fRec277[0] = square_blep_x(iTemp436, ((int((fTemp88 < 0.5f)))?1.0f:-1.0f), fTemp88, fTemp434);
			float 	fRec278 = square_blep_prev(iTemp436, fRec277[1], fTemp89, fTemp434);
			fRec276[0] = (fRec276[1] + (fConst18 * (fRec278 - fRec276[1])));
			fRec275[0] = (fConst7 * ((fRec276[0] - fRec276[1]) + fRec275[1]));
			fVec106[0] = fSlow73;
			float fTemp437 = (fSlow73 + fVec106[1]);
			int iTemp438 = ((int((fRec57[1] > fRec57[0])))?1:0);
			float fTemp439 = (1 + fRec57[0]);
			float fTemp440 = (0 - ((fRec57[1] + floorf((fTemp439 - fRec57[1]))) - fTemp439));
			fRec280[0] = saw_blep_x(iTemp438, (0 - (2 * (fRec57[0] - 0.5f))), fRec57[0], fTemp440);
			fRec281[0] = saw_blep_prev(iTemp438, fRec280[1], fRec57[1], fTemp440);
			fRec279[0] = (fConst7 * (((1.95f * fRec281[0]) - (1.95f * fRec281[1])) + fRec279[1]));
			fVec107[0] = fSlow74;
			float fTemp441 = (fSlow74 + fVec107[1]);
			int iTemp442 = ((int((fRec66[1] > fRec66[0])))?1:0);
			float fTemp443 = (1 + fRec66[0]);
			float fTemp444 = (0 - ((fRec66[1] + floorf((fTemp443 - fRec66[1]))) - fTemp443));
			fRec283[0] = saw_blep_x(iTemp442, (0 - (2 * (fRec66[0] - 0.5f))), fRec66[0], fTemp444);
			fRec284[0] = saw_blep_prev(iTemp442, fRec283[1], fRec66[1], fTemp444);
			fRec282[0] = (fConst7 * (((1.95f * fRec284[0]) - (1.95f * fRec284[1])) + fRec282[1]));
			fVec108[0] = fSlow75;
			float fTemp445 = (fSlow75 + fVec108[1]);
			int iTemp446 = ((int((fRec75[1] > fRec75[0])))?1:0);
			float fTemp447 = (1 + fRec75[0]);
			float fTemp448 = (0 - ((fRec75[1] + floorf((fTemp447 - fRec75[1]))) - fTemp447));
			fRec286[0] = saw_blep_x(iTemp446, (0 - (2 * (fRec75[0] - 0.5f))), fRec75[0], fTemp448);
			fRec287[0] = saw_blep_prev(iTemp446, fRec286[1], fRec75[1], fTemp448);
			fRec285[0] = (fConst7 * (((1.95f * fRec287[0]) - (1.95f * fRec287[1])) + fRec285[1]));
			fVec109[0] = fSlow76;
			float fTemp449 = (fSlow76 + fVec109[1]);
			int iTemp450 = ((int((fRec84[1] > fRec84[0])))?1:0);
			float fTemp451 = (1 + fRec84[0]);
			float fTemp452 = (0 - ((fRec84[1] + floorf((fTemp451 - fRec84[1]))) - fTemp451));
			fRec289[0] = saw_blep_x(iTemp450, (0 - (2 * (fRec84[0] - 0.5f))), fRec84[0], fTemp452);
			fRec290[0] = saw_blep_prev(iTemp450, fRec289[1], fRec84[1], fTemp452);
			fRec288[0] = (fConst7 * (((1.95f * fRec290[0]) - (1.95f * fRec290[1])) + fRec288[1]));
			fVec110[0] = fSlow77;
			float fTemp453 = (fSlow77 + fVec110[1]);
			int iTemp454 = ((int((fRec93[1] > fRec93[0])))?1:0);
			float fTemp455 = (1 + fRec93[0]);
			float fTemp456 = (0 - ((fRec93[1] + floorf((fTemp455 - fRec93[1]))) - fTemp455));
			fRec292[0] = saw_blep_x(iTemp454, (0 - (2 * (fRec93[0] - 0.5f))), fRec93[0], fTemp456);
			fRec293[0] = saw_blep_prev(iTemp454, fRec292[1], fRec93[1], fTemp456);
			fRec291[0] = (fConst7 * (((1.95f * fRec293[0]) - (1.95f * fRec293[1])) + fRec291[1]));
			fVec111[0] = fSlow78;
			float fTemp457 = (fSlow78 + fVec111[1]);
			int iTemp458 = ((int((fRec102[1] > fRec102[0])))?1:0);
			float fTemp459 = (1 + fRec102[0]);
			float fTemp460 = (0 - ((fRec102[1] + floorf((fTemp459 - fRec102[1]))) - fTemp459));
			fRec295[0] = saw_blep_x(iTemp458, (0 - (2 * (fRec102[0] - 0.5f))), fRec102[0], fTemp460);
			fRec296[0] = saw_blep_prev(iTemp458, fRec295[1], fRec102[1], fTemp460);
			fRec294[0] = (fConst7 * (((1.95f * fRec296[0]) - (1.95f * fRec296[1])) + fRec294[1]));
			fVec112[0] = fSlow79;
			float fTemp461 = (fSlow79 + fVec112[1]);
			int iTemp462 = ((int((fRec111[1] > fRec111[0])))?1:0);
			float fTemp463 = (1 + fRec111[0]);
			float fTemp464 = (0 - ((fRec111[1] + floorf((fTemp463 - fRec111[1]))) - fTemp463));
			fRec298[0] = saw_blep_x(iTemp462, (0 - (2 * (fRec111[0] - 0.5f))), fRec111[0], fTemp464);
			fRec299[0] = saw_blep_prev(iTemp462, fRec298[1], fRec111[1], fTemp464);
			fRec297[0] = (fConst7 * (((1.95f * fRec299[0]) - (1.95f * fRec299[1])) + fRec297[1]));
			fVec113[0] = fSlow80;
			float fTemp465 = (fSlow80 + fVec113[1]);
			int iTemp466 = ((int((fRec6[1] > fRec6[0])))?1:0);
			float fTemp467 = (1 + fRec6[0]);
			float fTemp468 = (0 - ((fRec6[1] + floorf((fTemp467 - fRec6[1]))) - fTemp467));
			fRec301[0] = saw_blep_x(iTemp466, (0 - (2 * (fRec6[0] - 0.5f))), fRec6[0], fTemp468);
			fRec302[0] = saw_blep_prev(iTemp466, fRec301[1], fRec6[1], fTemp468);
			fRec300[0] = (fConst7 * (((1.95f * fRec302[0]) - (1.95f * fRec302[1])) + fRec300[1]));
			float fTemp469 = ((fRec300[0] * fTemp465) + ((fRec297[0] * fTemp461) + ((fRec294[0] * fTemp457) + ((fRec291[0] * fTemp453) + ((fRec288[0] * fTemp449) + ((fRec285[0] * fTemp445) + ((fRec282[0] * fTemp441) + ((fRec279[0] * fTemp437) + ((fRec275[0] * fTemp432) + ((fRec271[0] * fTemp427) + ((fRec267[0] * fTemp422) + ((fRec263[0] * fTemp417) + ((fRec259[0] * fTemp412) + ((fRec255[0] * fTemp407) + ((fRec251[0] * fTemp402) + ((fRec247[0] * fTemp397) + ((fRec243[0] * fTemp392) + ((fRec239[0] * fTemp387) + ((fRec235[0] * fTemp382) + ((fRec231[0] * fTemp377) + ((fRec227[0] * fTemp372) + ((fRec223[0] * fTemp367) + ((fRec219[0] * fTemp362) + ((fRec215[0] * fTemp357) + ((fRec211[0] * fTemp352) + ((fRec207[0] * fTemp347) + ((fRec203[0] * fTemp342) + ((fRec199[0] * fTemp337) + ((fRec195[0] * fTemp332) + ((fRec191[0] * fTemp327) + ((fRec187[0] * fTemp322) + ((fRec183[0] * fTemp317) + ((fRec179[0] * fTemp312) + ((fRec175[0] * fTemp307) + ((fRec171[0] * fTemp302) + ((fRec167[0] * fTemp297) + ((fRec163[0] * fTemp292) + ((fRec159[0] * fTemp287) + ((fRec155[0] * fTemp282) + ((fRec151[0] * fTemp277) + ((fRec147[0] * fTemp272) + ((fRec143[0] * fTemp267) + ((fRec139[0] * fTemp262) + ((fRec135[0] * fTemp257) + (fSlow36 * ((fRec131[0] * fTemp252) + ((fRec127[0] * fTemp247) + ((fRec123[0] * fTemp242) + ((fRec119[0] * fTemp237) + ((fRec115[0] * fTemp232) + ((fRec106[0] * fTemp214) + ((fRec97[0] * fTemp196) + ((fRec88[0] * fTemp178) + ((fRec79[0] * fTemp160) + ((fRec70[0] * fTemp142) + ((fRec61[0] * fTemp124) + ((fRec52[0] * fTemp106) + ((fRec42[0] * fTemp85) + ((fRec32[0] * fTemp64) + ((fRec22[0] * fTemp43) + ((fRec12[0] * fTemp22) + (fRec1[0] * fTemp0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp470 = (0.5f * fTemp469);
			float fTemp471 = (fRec151[0] + (fRec147[0] + (fRec143[0] + (fRec135[0] + fRec139[0]))));
			float fTemp472 = (fRec167[0] + (fRec163[0] + (fRec159[0] + (fRec155[0] + fTemp471))));
			float fTemp473 = (fRec183[0] + (fRec179[0] + (fRec175[0] + (fRec171[0] + fTemp472))));
			float fTemp474 = (fRec199[0] + (fRec195[0] + (fRec191[0] + (fRec187[0] + fTemp473))));
			float fTemp475 = (fRec231[0] + (fRec227[0] + (fRec223[0] + (fRec219[0] + (fRec215[0] + (fRec211[0] + (fRec207[0] + (fRec203[0] + fTemp474))))))));
			float fTemp476 = ((fSlow36 * (fRec42[0] + (fRec32[0] + (fRec22[0] + (fRec12[0] + (fRec1[0] + (fRec79[0] + (fRec70[0] + (fRec61[0] + (fRec52[0] + (fRec131[0] + (fRec127[0] + (fRec123[0] + (fRec119[0] + (fRec115[0] + (fRec106[0] + (fRec88[0] + fRec97[0]))))))))))))))))) + (fRec300[0] + (fRec297[0] + (fRec294[0] + (fRec291[0] + (fRec288[0] + (fRec285[0] + (fRec282[0] + (fRec279[0] + (fRec275[0] + (fRec271[0] + (fRec267[0] + (fRec263[0] + (fRec259[0] + (fRec255[0] + (fRec251[0] + (fRec247[0] + (fRec243[0] + (fRec239[0] + (fRec235[0] + fTemp475))))))))))))))))))));
			fVec114[0] = (fTemp476 - fTemp470);
			fRec0[0] = (fConst19 * ((fTemp476 - (fTemp470 + fVec114[1])) + fRec0[1]));
			float fTemp477 = (fRec0[0] * fSlow1);
			int iTemp478 = ((int((fRec17[1] > fRec17[0])))?1:0);
			float fTemp479 = (1 + fRec17[0]);
			float fTemp480 = (0 - ((fRec17[1] + floorf((fTemp479 - fRec17[1]))) - fTemp479));
			fRec305[0] = saw_blep_x(iTemp478, (0 - (2 * (fRec17[0] - 0.5f))), fRec17[0], fTemp480);
			fRec306[0] = saw_blep_prev(iTemp478, fRec305[1], fRec17[1], fTemp480);
			fRec304[0] = (fConst7 * (((1.95f * fRec306[0]) - (1.95f * fRec306[1])) + fRec304[1]));
			int iTemp481 = ((int((fRec27[1] > fRec27[0])))?1:0);
			float fTemp482 = (1 + fRec27[0]);
			float fTemp483 = (0 - ((fRec27[1] + floorf((fTemp482 - fRec27[1]))) - fTemp482));
			fRec308[0] = saw_blep_x(iTemp481, (0 - (2 * (fRec27[0] - 0.5f))), fRec27[0], fTemp483);
			fRec309[0] = saw_blep_prev(iTemp481, fRec308[1], fRec27[1], fTemp483);
			fRec307[0] = (fConst7 * (((1.95f * fRec309[0]) - (1.95f * fRec309[1])) + fRec307[1]));
			int iTemp484 = ((int((fRec37[1] > fRec37[0])))?1:0);
			float fTemp485 = (1 + fRec37[0]);
			float fTemp486 = (0 - ((fRec37[1] + floorf((fTemp485 - fRec37[1]))) - fTemp485));
			fRec311[0] = saw_blep_x(iTemp484, (0 - (2 * (fRec37[0] - 0.5f))), fRec37[0], fTemp486);
			fRec312[0] = saw_blep_prev(iTemp484, fRec311[1], fRec37[1], fTemp486);
			fRec310[0] = (fConst7 * (((1.95f * fRec312[0]) - (1.95f * fRec312[1])) + fRec310[1]));
			int iTemp487 = ((int((fRec47[1] > fRec47[0])))?1:0);
			float fTemp488 = (1 + fRec47[0]);
			float fTemp489 = (0 - ((fRec47[1] + floorf((fTemp488 - fRec47[1]))) - fTemp488));
			fRec314[0] = saw_blep_x(iTemp487, (0 - (2 * (fRec47[0] - 0.5f))), fRec47[0], fTemp489);
			fRec315[0] = saw_blep_prev(iTemp487, fRec314[1], fRec47[1], fTemp489);
			fRec313[0] = (fConst7 * (((1.95f * fRec315[0]) - (1.95f * fRec315[1])) + fRec313[1]));
			float fTemp490 = (fRec279[0] * fTemp412);
			float fTemp491 = (fRec282[0] * fTemp417);
			float fTemp492 = (fRec285[0] * fTemp422);
			float fTemp493 = (fRec288[0] * fTemp427);
			float fTemp494 = (fRec291[0] * fTemp432);
			float fTemp495 = (fRec294[0] * fTemp437);
			float fTemp496 = (fRec297[0] * fTemp441);
			float fTemp497 = (fRec300[0] * fTemp445);
			float fTemp498 = (fRec304[0] * fTemp449);
			float fTemp499 = (fRec307[0] * fTemp453);
			float fTemp500 = (fRec310[0] * fTemp457);
			float fTemp501 = (fRec313[0] * fTemp461);
			float fTemp502 = (fRec279[0] * fTemp465);
			float fTemp503 = (0.5f * (fTemp502 + (fTemp501 + (fTemp500 + (fTemp499 + (fTemp498 + (fTemp497 + (fTemp496 + (fTemp495 + (fTemp494 + (fTemp493 + (fTemp492 + (fTemp491 + (fTemp490 + ((fRec313[0] * fTemp407) + ((fRec310[0] * fTemp402) + ((fRec307[0] * fTemp397) + ((fRec304[0] * fTemp392) + ((fRec300[0] * fTemp387) + ((fRec297[0] * fTemp382) + ((fRec294[0] * fTemp377) + ((fRec291[0] * fTemp372) + ((fRec288[0] * fTemp367) + ((fRec285[0] * fTemp362) + ((fRec282[0] * fTemp357) + ((fRec279[0] * fTemp352) + ((fRec275[0] * fTemp347) + ((fRec271[0] * fTemp342) + ((fRec267[0] * fTemp337) + ((fRec263[0] * fTemp332) + ((fRec259[0] * fTemp327) + ((fRec255[0] * fTemp322) + ((fRec251[0] * fTemp317) + ((fRec247[0] * fTemp312) + ((fRec243[0] * fTemp307) + ((fRec239[0] * fTemp302) + ((fRec235[0] * fTemp297) + ((fRec231[0] * fTemp292) + ((fRec227[0] * fTemp287) + ((fRec223[0] * fTemp282) + ((fRec219[0] * fTemp277) + ((fRec215[0] * fTemp272) + ((fRec211[0] * fTemp267) + ((fRec207[0] * fTemp262) + ((fRec203[0] * fTemp257) + (fSlow36 * ((fRec199[0] * fTemp252) + ((fRec195[0] * fTemp247) + ((fRec191[0] * fTemp242) + ((fRec187[0] * fTemp237) + ((fRec183[0] * fTemp232) + ((fRec179[0] * fTemp214) + ((fRec175[0] * fTemp196) + ((fRec171[0] * fTemp178) + ((fRec167[0] * fTemp160) + ((fRec163[0] * fTemp142) + ((fRec159[0] * fTemp124) + ((fRec155[0] * fTemp106) + ((fRec151[0] * fTemp85) + ((fRec147[0] * fTemp64) + ((fRec143[0] * fTemp43) + ((fRec139[0] * fTemp22) + (fRec135[0] * fTemp0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp504 = (0.5f * fRec313[0]);
			float fTemp505 = (0.5f * fRec310[0]);
			float fTemp506 = (0.5f * fRec307[0]);
			float fTemp507 = (0.5f * fRec304[0]);
			float fTemp508 = (0.5f * fRec300[0]);
			float fTemp509 = (0.5f * fRec297[0]);
			float fTemp510 = (0.5f * fRec294[0]);
			float fTemp511 = (0.5f * fRec291[0]);
			float fTemp512 = (0.5f * fRec288[0]);
			float fTemp513 = (0.5f * fRec285[0]);
			float fTemp514 = (0.5f * fRec275[0]);
			float fTemp515 = (0.5f * fRec271[0]);
			float fTemp516 = (0.5f * fRec267[0]);
			float fTemp517 = (0.5f * fRec263[0]);
			float fTemp518 = (0.5f * fRec259[0]);
			float fTemp519 = (0.5f * fRec255[0]);
			float fTemp520 = (0.5f * fRec251[0]);
			float fTemp521 = (0.5f * fRec247[0]);
			float fTemp522 = (0.5f * fRec243[0]);
			float fTemp523 = (0.5f * fRec239[0]);
			float fTemp524 = (0.5f * fRec235[0]);
			float fTemp525 = (0.5f * fRec231[0]);
			float fTemp526 = (0.5f * fRec227[0]);
			float fTemp527 = (0.5f * fRec223[0]);
			float fTemp528 = (0.5f * fRec219[0]);
			float fTemp529 = (0.5f * fRec215[0]);
			float fTemp530 = (0.5f * fRec211[0]);
			float fTemp531 = (0.5f * fRec207[0]);
			float fTemp532 = (0.5f * fRec203[0]);
			float fTemp533 = ((2 * ((((((((((((fRec282[0] + (fRec279[0] + ((((((((((((((((((fTemp532 + fTemp531) + fTemp530) + fTemp529) + fTemp528) + fTemp527) + fTemp526) + fTemp525) + fTemp524) + fTemp523) + fTemp522) + fTemp521) + fTemp520) + fTemp519) + fTemp518) + fTemp517) + fTemp516) + fTemp515) + fTemp514))) + fTemp513) + fTemp512) + fTemp511) + fTemp510) + fTemp509) + fTemp508) + fTemp507) + fTemp506) + fTemp505) + fTemp504) + (fSlow81 * fTemp474))) + (fRec313[0] + (fRec310[0] + (fRec307[0] + (fRec304[0] + (fRec300[0] + (fRec297[0] + (fRec294[0] + (fRec291[0] + (fRec288[0] + (fRec279[0] + fRec285[0])))))))))));
			fVec115[0] = (fTemp533 - fTemp503);
			fRec303[0] = (fConst19 * ((fTemp533 - (fTemp503 + fVec115[1])) + fRec303[1]));
			float fTemp534 = (fTemp503 + (0.0002f * (fRec303[0] * fSlow1)));
			iRec321[0] = ((int(((fTemp119 - fTemp118) < 0)))?(1 - iRec321[1]):iRec321[1]);
			float fTemp535 = (iRec321[0] + fTemp119);
			fVec116[0] = fTemp535;
			float fTemp536 = (0.5f * fVec116[0]);
			float fTemp537 = (0.5f * fVec116[1]);
			iRec322[0] = ((int(((fTemp536 - fTemp537) < 0)))?(1 - iRec322[1]):iRec322[1]);
			float fTemp538 = (iRec322[0] + fTemp536);
			fVec117[0] = fTemp538;
			float fTemp539 = (0.5f * fVec117[0]);
			float fTemp540 = (0.5f * fVec117[1]);
			iRec323[0] = ((int(((fTemp539 - fTemp540) < 0)))?(1 - iRec323[1]):iRec323[1]);
			float fTemp541 = (iRec323[0] + fTemp539);
			fVec118[0] = fTemp541;
			float fTemp542 = (0.5f * fVec118[1]);
			float fTemp543 = (0.5f * fVec118[0]);
			float fTemp544 = (1 + fTemp543);
			float fTemp545 = (fTemp544 - (fTemp542 + floorf((fTemp544 - fTemp542))));
			float fTemp546 = (0.5f * (1.0f + fVec118[0]));
			int iTemp547 = ((int((fTemp542 > fTemp543)))?1:((int(((fTemp546 - floorf(fTemp546)) < fTemp545)))?2:0));
			fRec319[0] = square_blep_x(iTemp547, ((int((fTemp543 < 0.5f)))?1.0f:-1.0f), fTemp543, fTemp545);
			float 	fRec320 = square_blep_prev(iTemp547, fRec319[1], fTemp542, fTemp545);
			fRec318[0] = (fRec318[1] + (fConst20 * (fRec320 - fRec318[1])));
			fRec317[0] = (fConst21 * ((fRec318[0] - fRec318[1]) + fRec317[1]));
			iRec328[0] = ((int(((fTemp137 - fTemp136) < 0)))?(1 - iRec328[1]):iRec328[1]);
			float fTemp548 = (iRec328[0] + fTemp137);
			fVec119[0] = fTemp548;
			float fTemp549 = (0.5f * fVec119[0]);
			float fTemp550 = (0.5f * fVec119[1]);
			iRec329[0] = ((int(((fTemp549 - fTemp550) < 0)))?(1 - iRec329[1]):iRec329[1]);
			float fTemp551 = (iRec329[0] + fTemp549);
			fVec120[0] = fTemp551;
			float fTemp552 = (0.5f * fVec120[0]);
			float fTemp553 = (0.5f * fVec120[1]);
			iRec330[0] = ((int(((fTemp552 - fTemp553) < 0)))?(1 - iRec330[1]):iRec330[1]);
			float fTemp554 = (iRec330[0] + fTemp552);
			fVec121[0] = fTemp554;
			float fTemp555 = (0.5f * fVec121[1]);
			float fTemp556 = (0.5f * fVec121[0]);
			float fTemp557 = (1 + fTemp556);
			float fTemp558 = (fTemp557 - (fTemp555 + floorf((fTemp557 - fTemp555))));
			float fTemp559 = (0.5f * (1.0f + fVec121[0]));
			int iTemp560 = ((int((fTemp555 > fTemp556)))?1:((int(((fTemp559 - floorf(fTemp559)) < fTemp558)))?2:0));
			fRec326[0] = square_blep_x(iTemp560, ((int((fTemp556 < 0.5f)))?1.0f:-1.0f), fTemp556, fTemp558);
			float 	fRec327 = square_blep_prev(iTemp560, fRec326[1], fTemp555, fTemp558);
			fRec325[0] = (fRec325[1] + (fConst20 * (fRec327 - fRec325[1])));
			fRec324[0] = (fConst21 * ((fRec325[0] - fRec325[1]) + fRec324[1]));
			iRec335[0] = ((int(((fTemp155 - fTemp154) < 0)))?(1 - iRec335[1]):iRec335[1]);
			float fTemp561 = (iRec335[0] + fTemp155);
			fVec122[0] = fTemp561;
			float fTemp562 = (0.5f * fVec122[0]);
			float fTemp563 = (0.5f * fVec122[1]);
			iRec336[0] = ((int(((fTemp562 - fTemp563) < 0)))?(1 - iRec336[1]):iRec336[1]);
			float fTemp564 = (iRec336[0] + fTemp562);
			fVec123[0] = fTemp564;
			float fTemp565 = (0.5f * fVec123[0]);
			float fTemp566 = (0.5f * fVec123[1]);
			iRec337[0] = ((int(((fTemp565 - fTemp566) < 0)))?(1 - iRec337[1]):iRec337[1]);
			float fTemp567 = (iRec337[0] + fTemp565);
			fVec124[0] = fTemp567;
			float fTemp568 = (0.5f * fVec124[1]);
			float fTemp569 = (0.5f * fVec124[0]);
			float fTemp570 = (1 + fTemp569);
			float fTemp571 = (fTemp570 - (fTemp568 + floorf((fTemp570 - fTemp568))));
			float fTemp572 = (0.5f * (1.0f + fVec124[0]));
			int iTemp573 = ((int((fTemp568 > fTemp569)))?1:((int(((fTemp572 - floorf(fTemp572)) < fTemp571)))?2:0));
			fRec333[0] = square_blep_x(iTemp573, ((int((fTemp569 < 0.5f)))?1.0f:-1.0f), fTemp569, fTemp571);
			float 	fRec334 = square_blep_prev(iTemp573, fRec333[1], fTemp568, fTemp571);
			fRec332[0] = (fRec332[1] + (fConst20 * (fRec334 - fRec332[1])));
			fRec331[0] = (fConst21 * ((fRec332[0] - fRec332[1]) + fRec331[1]));
			iRec342[0] = ((int(((fTemp173 - fTemp172) < 0)))?(1 - iRec342[1]):iRec342[1]);
			float fTemp574 = (iRec342[0] + fTemp173);
			fVec125[0] = fTemp574;
			float fTemp575 = (0.5f * fVec125[0]);
			float fTemp576 = (0.5f * fVec125[1]);
			iRec343[0] = ((int(((fTemp575 - fTemp576) < 0)))?(1 - iRec343[1]):iRec343[1]);
			float fTemp577 = (iRec343[0] + fTemp575);
			fVec126[0] = fTemp577;
			float fTemp578 = (0.5f * fVec126[0]);
			float fTemp579 = (0.5f * fVec126[1]);
			iRec344[0] = ((int(((fTemp578 - fTemp579) < 0)))?(1 - iRec344[1]):iRec344[1]);
			float fTemp580 = (iRec344[0] + fTemp578);
			fVec127[0] = fTemp580;
			float fTemp581 = (0.5f * fVec127[1]);
			float fTemp582 = (0.5f * fVec127[0]);
			float fTemp583 = (1 + fTemp582);
			float fTemp584 = (fTemp583 - (fTemp581 + floorf((fTemp583 - fTemp581))));
			float fTemp585 = (0.5f * (1.0f + fVec127[0]));
			int iTemp586 = ((int((fTemp581 > fTemp582)))?1:((int(((fTemp585 - floorf(fTemp585)) < fTemp584)))?2:0));
			fRec340[0] = square_blep_x(iTemp586, ((int((fTemp582 < 0.5f)))?1.0f:-1.0f), fTemp582, fTemp584);
			float 	fRec341 = square_blep_prev(iTemp586, fRec340[1], fTemp581, fTemp584);
			fRec339[0] = (fRec339[1] + (fConst20 * (fRec341 - fRec339[1])));
			fRec338[0] = (fConst21 * ((fRec339[0] - fRec339[1]) + fRec338[1]));
			iRec349[0] = ((int(((fTemp191 - fTemp190) < 0)))?(1 - iRec349[1]):iRec349[1]);
			float fTemp587 = (iRec349[0] + fTemp191);
			fVec128[0] = fTemp587;
			float fTemp588 = (0.5f * fVec128[0]);
			float fTemp589 = (0.5f * fVec128[1]);
			iRec350[0] = ((int(((fTemp588 - fTemp589) < 0)))?(1 - iRec350[1]):iRec350[1]);
			float fTemp590 = (iRec350[0] + fTemp588);
			fVec129[0] = fTemp590;
			float fTemp591 = (0.5f * fVec129[0]);
			float fTemp592 = (0.5f * fVec129[1]);
			iRec351[0] = ((int(((fTemp591 - fTemp592) < 0)))?(1 - iRec351[1]):iRec351[1]);
			float fTemp593 = (iRec351[0] + fTemp591);
			fVec130[0] = fTemp593;
			float fTemp594 = (0.5f * fVec130[1]);
			float fTemp595 = (0.5f * fVec130[0]);
			float fTemp596 = (1 + fTemp595);
			float fTemp597 = (fTemp596 - (fTemp594 + floorf((fTemp596 - fTemp594))));
			float fTemp598 = (0.5f * (1.0f + fVec130[0]));
			int iTemp599 = ((int((fTemp594 > fTemp595)))?1:((int(((fTemp598 - floorf(fTemp598)) < fTemp597)))?2:0));
			fRec347[0] = square_blep_x(iTemp599, ((int((fTemp595 < 0.5f)))?1.0f:-1.0f), fTemp595, fTemp597);
			float 	fRec348 = square_blep_prev(iTemp599, fRec347[1], fTemp594, fTemp597);
			fRec346[0] = (fRec346[1] + (fConst20 * (fRec348 - fRec346[1])));
			fRec345[0] = (fConst21 * ((fRec346[0] - fRec346[1]) + fRec345[1]));
			iRec356[0] = ((int(((fTemp209 - fTemp208) < 0)))?(1 - iRec356[1]):iRec356[1]);
			float fTemp600 = (iRec356[0] + fTemp209);
			fVec131[0] = fTemp600;
			float fTemp601 = (0.5f * fVec131[0]);
			float fTemp602 = (0.5f * fVec131[1]);
			iRec357[0] = ((int(((fTemp601 - fTemp602) < 0)))?(1 - iRec357[1]):iRec357[1]);
			float fTemp603 = (iRec357[0] + fTemp601);
			fVec132[0] = fTemp603;
			float fTemp604 = (0.5f * fVec132[0]);
			float fTemp605 = (0.5f * fVec132[1]);
			iRec358[0] = ((int(((fTemp604 - fTemp605) < 0)))?(1 - iRec358[1]):iRec358[1]);
			float fTemp606 = (iRec358[0] + fTemp604);
			fVec133[0] = fTemp606;
			float fTemp607 = (0.5f * fVec133[1]);
			float fTemp608 = (0.5f * fVec133[0]);
			float fTemp609 = (1 + fTemp608);
			float fTemp610 = (fTemp609 - (fTemp607 + floorf((fTemp609 - fTemp607))));
			float fTemp611 = (0.5f * (1.0f + fVec133[0]));
			int iTemp612 = ((int((fTemp607 > fTemp608)))?1:((int(((fTemp611 - floorf(fTemp611)) < fTemp610)))?2:0));
			fRec354[0] = square_blep_x(iTemp612, ((int((fTemp608 < 0.5f)))?1.0f:-1.0f), fTemp608, fTemp610);
			float 	fRec355 = square_blep_prev(iTemp612, fRec354[1], fTemp607, fTemp610);
			fRec353[0] = (fRec353[1] + (fConst20 * (fRec355 - fRec353[1])));
			fRec352[0] = (fConst21 * ((fRec353[0] - fRec353[1]) + fRec352[1]));
			iRec363[0] = ((int(((fTemp227 - fTemp226) < 0)))?(1 - iRec363[1]):iRec363[1]);
			float fTemp613 = (iRec363[0] + fTemp227);
			fVec134[0] = fTemp613;
			float fTemp614 = (0.5f * fVec134[0]);
			float fTemp615 = (0.5f * fVec134[1]);
			iRec364[0] = ((int(((fTemp614 - fTemp615) < 0)))?(1 - iRec364[1]):iRec364[1]);
			float fTemp616 = (iRec364[0] + fTemp614);
			fVec135[0] = fTemp616;
			float fTemp617 = (0.5f * fVec135[0]);
			float fTemp618 = (0.5f * fVec135[1]);
			iRec365[0] = ((int(((fTemp617 - fTemp618) < 0)))?(1 - iRec365[1]):iRec365[1]);
			float fTemp619 = (iRec365[0] + fTemp617);
			fVec136[0] = fTemp619;
			float fTemp620 = (0.5f * fVec136[1]);
			float fTemp621 = (0.5f * fVec136[0]);
			float fTemp622 = (1 + fTemp621);
			float fTemp623 = (fTemp622 - (fTemp620 + floorf((fTemp622 - fTemp620))));
			float fTemp624 = (0.5f * (1.0f + fVec136[0]));
			int iTemp625 = ((int((fTemp620 > fTemp621)))?1:((int(((fTemp624 - floorf(fTemp624)) < fTemp623)))?2:0));
			fRec361[0] = square_blep_x(iTemp625, ((int((fTemp621 < 0.5f)))?1.0f:-1.0f), fTemp621, fTemp623);
			float 	fRec362 = square_blep_prev(iTemp625, fRec361[1], fTemp620, fTemp623);
			fRec360[0] = (fRec360[1] + (fConst20 * (fRec362 - fRec360[1])));
			fRec359[0] = (fConst21 * ((fRec360[0] - fRec360[1]) + fRec359[1]));
			iRec370[0] = ((int(((fTemp17 - fTemp16) < 0)))?(1 - iRec370[1]):iRec370[1]);
			float fTemp626 = (iRec370[0] + fTemp17);
			fVec137[0] = fTemp626;
			float fTemp627 = (0.5f * fVec137[0]);
			float fTemp628 = (0.5f * fVec137[1]);
			iRec371[0] = ((int(((fTemp627 - fTemp628) < 0)))?(1 - iRec371[1]):iRec371[1]);
			float fTemp629 = (iRec371[0] + fTemp627);
			fVec138[0] = fTemp629;
			float fTemp630 = (0.5f * fVec138[1]);
			float fTemp631 = (0.5f * fVec138[0]);
			float fTemp632 = (1 + fTemp631);
			float fTemp633 = (fTemp632 - (fTemp630 + floorf((fTemp632 - fTemp630))));
			float fTemp634 = (0.5f * (1.0f + fVec138[0]));
			int iTemp635 = ((int((fTemp630 > fTemp631)))?1:((int(((fTemp634 - floorf(fTemp634)) < fTemp633)))?2:0));
			fRec368[0] = square_blep_x(iTemp635, ((int((fTemp631 < 0.5f)))?1.0f:-1.0f), fTemp631, fTemp633);
			float 	fRec369 = square_blep_prev(iTemp635, fRec368[1], fTemp630, fTemp633);
			fRec367[0] = (fRec367[1] + (fConst20 * (fRec369 - fRec367[1])));
			fRec366[0] = (fConst21 * ((fRec367[0] - fRec367[1]) + fRec366[1]));
			iRec376[0] = ((int(((fTemp38 - fTemp37) < 0)))?(1 - iRec376[1]):iRec376[1]);
			float fTemp636 = (iRec376[0] + fTemp38);
			fVec139[0] = fTemp636;
			float fTemp637 = (0.5f * fVec139[0]);
			float fTemp638 = (0.5f * fVec139[1]);
			iRec377[0] = ((int(((fTemp637 - fTemp638) < 0)))?(1 - iRec377[1]):iRec377[1]);
			float fTemp639 = (iRec377[0] + fTemp637);
			fVec140[0] = fTemp639;
			float fTemp640 = (0.5f * fVec140[1]);
			float fTemp641 = (0.5f * fVec140[0]);
			float fTemp642 = (1 + fTemp641);
			float fTemp643 = (fTemp642 - (fTemp640 + floorf((fTemp642 - fTemp640))));
			float fTemp644 = (0.5f * (1.0f + fVec140[0]));
			int iTemp645 = ((int((fTemp640 > fTemp641)))?1:((int(((fTemp644 - floorf(fTemp644)) < fTemp643)))?2:0));
			fRec374[0] = square_blep_x(iTemp645, ((int((fTemp641 < 0.5f)))?1.0f:-1.0f), fTemp641, fTemp643);
			float 	fRec375 = square_blep_prev(iTemp645, fRec374[1], fTemp640, fTemp643);
			fRec373[0] = (fRec373[1] + (fConst22 * (fRec375 - fRec373[1])));
			fRec372[0] = (fConst21 * ((fRec373[0] - fRec373[1]) + fRec372[1]));
			iRec382[0] = ((int(((fTemp59 - fTemp58) < 0)))?(1 - iRec382[1]):iRec382[1]);
			float fTemp646 = (iRec382[0] + fTemp59);
			fVec141[0] = fTemp646;
			float fTemp647 = (0.5f * fVec141[0]);
			float fTemp648 = (0.5f * fVec141[1]);
			iRec383[0] = ((int(((fTemp647 - fTemp648) < 0)))?(1 - iRec383[1]):iRec383[1]);
			float fTemp649 = (iRec383[0] + fTemp647);
			fVec142[0] = fTemp649;
			float fTemp650 = (0.5f * fVec142[1]);
			float fTemp651 = (0.5f * fVec142[0]);
			float fTemp652 = (1 + fTemp651);
			float fTemp653 = (fTemp652 - (fTemp650 + floorf((fTemp652 - fTemp650))));
			float fTemp654 = (0.5f * (1.0f + fVec142[0]));
			int iTemp655 = ((int((fTemp650 > fTemp651)))?1:((int(((fTemp654 - floorf(fTemp654)) < fTemp653)))?2:0));
			fRec380[0] = square_blep_x(iTemp655, ((int((fTemp651 < 0.5f)))?1.0f:-1.0f), fTemp651, fTemp653);
			float 	fRec381 = square_blep_prev(iTemp655, fRec380[1], fTemp650, fTemp653);
			fRec379[0] = (fRec379[1] + (fConst22 * (fRec381 - fRec379[1])));
			fRec378[0] = (fConst21 * ((fRec379[0] - fRec379[1]) + fRec378[1]));
			iRec388[0] = ((int(((fTemp80 - fTemp79) < 0)))?(1 - iRec388[1]):iRec388[1]);
			float fTemp656 = (iRec388[0] + fTemp80);
			fVec143[0] = fTemp656;
			float fTemp657 = (0.5f * fVec143[0]);
			float fTemp658 = (0.5f * fVec143[1]);
			iRec389[0] = ((int(((fTemp657 - fTemp658) < 0)))?(1 - iRec389[1]):iRec389[1]);
			float fTemp659 = (iRec389[0] + fTemp657);
			fVec144[0] = fTemp659;
			float fTemp660 = (0.5f * fVec144[1]);
			float fTemp661 = (0.5f * fVec144[0]);
			float fTemp662 = (1 + fTemp661);
			float fTemp663 = (fTemp662 - (fTemp660 + floorf((fTemp662 - fTemp660))));
			float fTemp664 = (0.5f * (1.0f + fVec144[0]));
			int iTemp665 = ((int((fTemp660 > fTemp661)))?1:((int(((fTemp664 - floorf(fTemp664)) < fTemp663)))?2:0));
			fRec386[0] = square_blep_x(iTemp665, ((int((fTemp661 < 0.5f)))?1.0f:-1.0f), fTemp661, fTemp663);
			float 	fRec387 = square_blep_prev(iTemp665, fRec386[1], fTemp660, fTemp663);
			fRec385[0] = (fRec385[1] + (fConst22 * (fRec387 - fRec385[1])));
			fRec384[0] = (fConst21 * ((fRec385[0] - fRec385[1]) + fRec384[1]));
			iRec394[0] = ((int(((fTemp101 - fTemp100) < 0)))?(1 - iRec394[1]):iRec394[1]);
			float fTemp666 = (iRec394[0] + fTemp101);
			fVec145[0] = fTemp666;
			float fTemp667 = (0.5f * fVec145[0]);
			float fTemp668 = (0.5f * fVec145[1]);
			iRec395[0] = ((int(((fTemp667 - fTemp668) < 0)))?(1 - iRec395[1]):iRec395[1]);
			float fTemp669 = (iRec395[0] + fTemp667);
			fVec146[0] = fTemp669;
			float fTemp670 = (0.5f * fVec146[1]);
			float fTemp671 = (0.5f * fVec146[0]);
			float fTemp672 = (1 + fTemp671);
			float fTemp673 = (fTemp672 - (fTemp670 + floorf((fTemp672 - fTemp670))));
			float fTemp674 = (0.5f * (1.0f + fVec146[0]));
			int iTemp675 = ((int((fTemp670 > fTemp671)))?1:((int(((fTemp674 - floorf(fTemp674)) < fTemp673)))?2:0));
			fRec392[0] = square_blep_x(iTemp675, ((int((fTemp671 < 0.5f)))?1.0f:-1.0f), fTemp671, fTemp673);
			float 	fRec393 = square_blep_prev(iTemp675, fRec392[1], fTemp670, fTemp673);
			fRec391[0] = (fRec391[1] + (fConst22 * (fRec393 - fRec391[1])));
			fRec390[0] = (fConst21 * ((fRec391[0] - fRec391[1]) + fRec390[1]));
			float fTemp676 = (1 + fTemp539);
			float fTemp677 = (fTemp676 - (fTemp540 + floorf((fTemp676 - fTemp540))));
			float fTemp678 = (0.5f * (1.0f + fVec117[0]));
			int iTemp679 = ((int((fTemp540 > fTemp539)))?1:((int(((fTemp678 - floorf(fTemp678)) < fTemp677)))?2:0));
			fRec398[0] = square_blep_x(iTemp679, ((int((fTemp539 < 0.5f)))?1.0f:-1.0f), fTemp539, fTemp677);
			float 	fRec399 = square_blep_prev(iTemp679, fRec398[1], fTemp540, fTemp677);
			fRec397[0] = (fRec397[1] + (fConst22 * (fRec399 - fRec397[1])));
			fRec396[0] = (fConst23 * ((fRec397[0] - fRec397[1]) + fRec396[1]));
			float fTemp680 = (1 + fTemp552);
			float fTemp681 = (fTemp680 - (fTemp553 + floorf((fTemp680 - fTemp553))));
			float fTemp682 = (0.5f * (1.0f + fVec120[0]));
			int iTemp683 = ((int((fTemp553 > fTemp552)))?1:((int(((fTemp682 - floorf(fTemp682)) < fTemp681)))?2:0));
			fRec402[0] = square_blep_x(iTemp683, ((int((fTemp552 < 0.5f)))?1.0f:-1.0f), fTemp552, fTemp681);
			float 	fRec403 = square_blep_prev(iTemp683, fRec402[1], fTemp553, fTemp681);
			fRec401[0] = (fRec401[1] + (fConst22 * (fRec403 - fRec401[1])));
			fRec400[0] = (fConst23 * ((fRec401[0] - fRec401[1]) + fRec400[1]));
			float fTemp684 = (1 + fTemp565);
			float fTemp685 = (fTemp684 - (fTemp566 + floorf((fTemp684 - fTemp566))));
			float fTemp686 = (0.5f * (1.0f + fVec123[0]));
			int iTemp687 = ((int((fTemp566 > fTemp565)))?1:((int(((fTemp686 - floorf(fTemp686)) < fTemp685)))?2:0));
			fRec406[0] = square_blep_x(iTemp687, ((int((fTemp565 < 0.5f)))?1.0f:-1.0f), fTemp565, fTemp685);
			float 	fRec407 = square_blep_prev(iTemp687, fRec406[1], fTemp566, fTemp685);
			fRec405[0] = (fRec405[1] + (fConst22 * (fRec407 - fRec405[1])));
			fRec404[0] = (fConst23 * ((fRec405[0] - fRec405[1]) + fRec404[1]));
			float fTemp688 = (1 + fTemp578);
			float fTemp689 = (fTemp688 - (fTemp579 + floorf((fTemp688 - fTemp579))));
			float fTemp690 = (0.5f * (1.0f + fVec126[0]));
			int iTemp691 = ((int((fTemp579 > fTemp578)))?1:((int(((fTemp690 - floorf(fTemp690)) < fTemp689)))?2:0));
			fRec410[0] = square_blep_x(iTemp691, ((int((fTemp578 < 0.5f)))?1.0f:-1.0f), fTemp578, fTemp689);
			float 	fRec411 = square_blep_prev(iTemp691, fRec410[1], fTemp579, fTemp689);
			fRec409[0] = (fRec409[1] + (fConst22 * (fRec411 - fRec409[1])));
			fRec408[0] = (fConst23 * ((fRec409[0] - fRec409[1]) + fRec408[1]));
			float fTemp692 = (1 + fTemp591);
			float fTemp693 = (fTemp692 - (fTemp592 + floorf((fTemp692 - fTemp592))));
			float fTemp694 = (0.5f * (1.0f + fVec129[0]));
			int iTemp695 = ((int((fTemp592 > fTemp591)))?1:((int(((fTemp694 - floorf(fTemp694)) < fTemp693)))?2:0));
			fRec414[0] = square_blep_x(iTemp695, ((int((fTemp591 < 0.5f)))?1.0f:-1.0f), fTemp591, fTemp693);
			float 	fRec415 = square_blep_prev(iTemp695, fRec414[1], fTemp592, fTemp693);
			fRec413[0] = (fRec413[1] + (fConst24 * (fRec415 - fRec413[1])));
			fRec412[0] = (fConst23 * ((fRec413[0] - fRec413[1]) + fRec412[1]));
			float fTemp696 = ((fRec412[0] * fTemp252) + ((fRec408[0] * fTemp247) + ((fRec404[0] * fTemp242) + ((fRec400[0] * fTemp237) + ((fRec396[0] * fTemp232) + ((fRec390[0] * fTemp214) + ((fRec384[0] * fTemp196) + ((fRec378[0] * fTemp178) + ((fRec372[0] * fTemp160) + ((fRec366[0] * fTemp142) + ((fRec359[0] * fTemp124) + ((fRec352[0] * fTemp106) + ((fRec345[0] * fTemp85) + ((fRec338[0] * fTemp64) + ((fRec331[0] * fTemp43) + ((fRec324[0] * fTemp22) + (fRec317[0] * fTemp0)))))))))))))))));
			float fTemp697 = (1 + fTemp604);
			float fTemp698 = (fTemp697 - (fTemp605 + floorf((fTemp697 - fTemp605))));
			float fTemp699 = (0.5f * (1.0f + fVec132[0]));
			int iTemp700 = ((int((fTemp605 > fTemp604)))?1:((int(((fTemp699 - floorf(fTemp699)) < fTemp698)))?2:0));
			fRec418[0] = square_blep_x(iTemp700, ((int((fTemp604 < 0.5f)))?1.0f:-1.0f), fTemp604, fTemp698);
			float 	fRec419 = square_blep_prev(iTemp700, fRec418[1], fTemp605, fTemp698);
			fRec417[0] = (fRec417[1] + (fConst24 * (fRec419 - fRec417[1])));
			fRec416[0] = (fConst23 * ((fRec417[0] - fRec417[1]) + fRec416[1]));
			float fTemp701 = (1 + fTemp617);
			float fTemp702 = (fTemp701 - (fTemp618 + floorf((fTemp701 - fTemp618))));
			float fTemp703 = (0.5f * (1.0f + fVec135[0]));
			int iTemp704 = ((int((fTemp618 > fTemp617)))?1:((int(((fTemp703 - floorf(fTemp703)) < fTemp702)))?2:0));
			fRec422[0] = square_blep_x(iTemp704, ((int((fTemp617 < 0.5f)))?1.0f:-1.0f), fTemp617, fTemp702);
			float 	fRec423 = square_blep_prev(iTemp704, fRec422[1], fTemp618, fTemp702);
			fRec421[0] = (fRec421[1] + (fConst24 * (fRec423 - fRec421[1])));
			fRec420[0] = (fConst23 * ((fRec421[0] - fRec421[1]) + fRec420[1]));
			float fTemp705 = (1 + fTemp627);
			float fTemp706 = (fTemp705 - (fTemp628 + floorf((fTemp705 - fTemp628))));
			float fTemp707 = (0.5f * (1.0f + fVec137[0]));
			int iTemp708 = ((int((fTemp628 > fTemp627)))?1:((int(((fTemp707 - floorf(fTemp707)) < fTemp706)))?2:0));
			fRec426[0] = square_blep_x(iTemp708, ((int((fTemp627 < 0.5f)))?1.0f:-1.0f), fTemp627, fTemp706);
			float 	fRec427 = square_blep_prev(iTemp708, fRec426[1], fTemp628, fTemp706);
			fRec425[0] = (fRec425[1] + (fConst24 * (fRec427 - fRec425[1])));
			fRec424[0] = (fConst23 * ((fRec425[0] - fRec425[1]) + fRec424[1]));
			float fTemp709 = (1 + fTemp637);
			float fTemp710 = (fTemp709 - (fTemp638 + floorf((fTemp709 - fTemp638))));
			float fTemp711 = (0.5f * (1.0f + fVec139[0]));
			int iTemp712 = ((int((fTemp638 > fTemp637)))?1:((int(((fTemp711 - floorf(fTemp711)) < fTemp710)))?2:0));
			fRec430[0] = square_blep_x(iTemp712, ((int((fTemp637 < 0.5f)))?1.0f:-1.0f), fTemp637, fTemp710);
			float 	fRec431 = square_blep_prev(iTemp712, fRec430[1], fTemp638, fTemp710);
			fRec429[0] = (fRec429[1] + (fConst25 * (fRec431 - fRec429[1])));
			fRec428[0] = (fConst23 * ((fRec429[0] - fRec429[1]) + fRec428[1]));
			float fTemp713 = (1 + fTemp647);
			float fTemp714 = (fTemp713 - (fTemp648 + floorf((fTemp713 - fTemp648))));
			float fTemp715 = (0.5f * (1.0f + fVec141[0]));
			int iTemp716 = ((int((fTemp648 > fTemp647)))?1:((int(((fTemp715 - floorf(fTemp715)) < fTemp714)))?2:0));
			fRec434[0] = square_blep_x(iTemp716, ((int((fTemp647 < 0.5f)))?1.0f:-1.0f), fTemp647, fTemp714);
			float 	fRec435 = square_blep_prev(iTemp716, fRec434[1], fTemp648, fTemp714);
			fRec433[0] = (fRec433[1] + (fConst25 * (fRec435 - fRec433[1])));
			fRec432[0] = (fConst23 * ((fRec433[0] - fRec433[1]) + fRec432[1]));
			float fTemp717 = (1 + fTemp657);
			float fTemp718 = (fTemp717 - (fTemp658 + floorf((fTemp717 - fTemp658))));
			float fTemp719 = (0.5f * (1.0f + fVec143[0]));
			int iTemp720 = ((int((fTemp658 > fTemp657)))?1:((int(((fTemp719 - floorf(fTemp719)) < fTemp718)))?2:0));
			fRec438[0] = square_blep_x(iTemp720, ((int((fTemp657 < 0.5f)))?1.0f:-1.0f), fTemp657, fTemp718);
			float 	fRec439 = square_blep_prev(iTemp720, fRec438[1], fTemp658, fTemp718);
			fRec437[0] = (fRec437[1] + (fConst25 * (fRec439 - fRec437[1])));
			fRec436[0] = (fConst23 * ((fRec437[0] - fRec437[1]) + fRec436[1]));
			float fTemp721 = (1 + fTemp667);
			float fTemp722 = (fTemp721 - (fTemp668 + floorf((fTemp721 - fTemp668))));
			float fTemp723 = (0.5f * (1.0f + fVec145[0]));
			int iTemp724 = ((int((fTemp668 > fTemp667)))?1:((int(((fTemp723 - floorf(fTemp723)) < fTemp722)))?2:0));
			fRec442[0] = square_blep_x(iTemp724, ((int((fTemp667 < 0.5f)))?1.0f:-1.0f), fTemp667, fTemp722);
			float 	fRec443 = square_blep_prev(iTemp724, fRec442[1], fTemp668, fTemp722);
			fRec441[0] = (fRec441[1] + (fConst25 * (fRec443 - fRec441[1])));
			fRec440[0] = (fConst23 * ((fRec441[0] - fRec441[1]) + fRec440[1]));
			float fTemp725 = (1 + fTemp536);
			float fTemp726 = (fTemp725 - (fTemp537 + floorf((fTemp725 - fTemp537))));
			float fTemp727 = (0.5f * (1.0f + fVec116[0]));
			int iTemp728 = ((int((fTemp537 > fTemp536)))?1:((int(((fTemp727 - floorf(fTemp727)) < fTemp726)))?2:0));
			fRec446[0] = square_blep_x(iTemp728, ((int((fTemp536 < 0.5f)))?1.0f:-1.0f), fTemp536, fTemp726);
			float 	fRec447 = square_blep_prev(iTemp728, fRec446[1], fTemp537, fTemp726);
			fRec445[0] = (fRec445[1] + (fConst25 * (fRec447 - fRec445[1])));
			fRec444[0] = (fConst4 * ((fRec445[0] - fRec445[1]) + fRec444[1]));
			float fTemp729 = (1 + fTemp549);
			float fTemp730 = (fTemp729 - (fTemp550 + floorf((fTemp729 - fTemp550))));
			float fTemp731 = (0.5f * (1.0f + fVec119[0]));
			int iTemp732 = ((int((fTemp550 > fTemp549)))?1:((int(((fTemp731 - floorf(fTemp731)) < fTemp730)))?2:0));
			fRec450[0] = square_blep_x(iTemp732, ((int((fTemp549 < 0.5f)))?1.0f:-1.0f), fTemp549, fTemp730);
			float 	fRec451 = square_blep_prev(iTemp732, fRec450[1], fTemp550, fTemp730);
			fRec449[0] = (fRec449[1] + (fConst25 * (fRec451 - fRec449[1])));
			fRec448[0] = (fConst4 * ((fRec449[0] - fRec449[1]) + fRec448[1]));
			float fTemp733 = (1 + fTemp562);
			float fTemp734 = (fTemp733 - (fTemp563 + floorf((fTemp733 - fTemp563))));
			float fTemp735 = (0.5f * (1.0f + fVec122[0]));
			int iTemp736 = ((int((fTemp563 > fTemp562)))?1:((int(((fTemp735 - floorf(fTemp735)) < fTemp734)))?2:0));
			fRec454[0] = square_blep_x(iTemp736, ((int((fTemp562 < 0.5f)))?1.0f:-1.0f), fTemp562, fTemp734);
			float 	fRec455 = square_blep_prev(iTemp736, fRec454[1], fTemp563, fTemp734);
			fRec453[0] = (fRec453[1] + (fConst25 * (fRec455 - fRec453[1])));
			fRec452[0] = (fConst4 * ((fRec453[0] - fRec453[1]) + fRec452[1]));
			float fTemp737 = (1 + fTemp575);
			float fTemp738 = (fTemp737 - (fTemp576 + floorf((fTemp737 - fTemp576))));
			float fTemp739 = (0.5f * (1.0f + fVec125[0]));
			int iTemp740 = ((int((fTemp576 > fTemp575)))?1:((int(((fTemp739 - floorf(fTemp739)) < fTemp738)))?2:0));
			fRec458[0] = square_blep_x(iTemp740, ((int((fTemp575 < 0.5f)))?1.0f:-1.0f), fTemp575, fTemp738);
			float 	fRec459 = square_blep_prev(iTemp740, fRec458[1], fTemp576, fTemp738);
			fRec457[0] = (fRec457[1] + (fConst25 * (fRec459 - fRec457[1])));
			fRec456[0] = (fConst4 * ((fRec457[0] - fRec457[1]) + fRec456[1]));
			float fTemp741 = (1 + fTemp588);
			float fTemp742 = (fTemp741 - (fTemp589 + floorf((fTemp741 - fTemp589))));
			float fTemp743 = (0.5f * (1.0f + fVec128[0]));
			int iTemp744 = ((int((fTemp589 > fTemp588)))?1:((int(((fTemp743 - floorf(fTemp743)) < fTemp742)))?2:0));
			fRec462[0] = square_blep_x(iTemp744, ((int((fTemp588 < 0.5f)))?1.0f:-1.0f), fTemp588, fTemp742);
			float 	fRec463 = square_blep_prev(iTemp744, fRec462[1], fTemp589, fTemp742);
			fRec461[0] = (fRec461[1] + (fConst2 * (fRec463 - fRec461[1])));
			fRec460[0] = (fConst4 * ((fRec461[0] - fRec461[1]) + fRec460[1]));
			float fTemp745 = (1 + fTemp601);
			float fTemp746 = (fTemp745 - (fTemp602 + floorf((fTemp745 - fTemp602))));
			float fTemp747 = (0.5f * (1.0f + fVec131[0]));
			int iTemp748 = ((int((fTemp602 > fTemp601)))?1:((int(((fTemp747 - floorf(fTemp747)) < fTemp746)))?2:0));
			fRec466[0] = square_blep_x(iTemp748, ((int((fTemp601 < 0.5f)))?1.0f:-1.0f), fTemp601, fTemp746);
			float 	fRec467 = square_blep_prev(iTemp748, fRec466[1], fTemp602, fTemp746);
			fRec465[0] = (fRec465[1] + (fConst2 * (fRec467 - fRec465[1])));
			fRec464[0] = (fConst4 * ((fRec465[0] - fRec465[1]) + fRec464[1]));
			float fTemp749 = (1 + fTemp614);
			float fTemp750 = (fTemp749 - (fTemp615 + floorf((fTemp749 - fTemp615))));
			float fTemp751 = (0.5f * (1.0f + fVec134[0]));
			int iTemp752 = ((int((fTemp615 > fTemp614)))?1:((int(((fTemp751 - floorf(fTemp751)) < fTemp750)))?2:0));
			fRec470[0] = square_blep_x(iTemp752, ((int((fTemp614 < 0.5f)))?1.0f:-1.0f), fTemp614, fTemp750);
			float 	fRec471 = square_blep_prev(iTemp752, fRec470[1], fTemp615, fTemp750);
			fRec469[0] = (fRec469[1] + (fConst2 * (fRec471 - fRec469[1])));
			fRec468[0] = (fConst4 * ((fRec469[0] - fRec469[1]) + fRec468[1]));
			float fTemp753 = (0.8395f * ((fRec183[0] * fTemp465) + ((fRec179[0] * fTemp461) + ((fRec175[0] * fTemp457) + ((fRec171[0] * fTemp453) + ((fRec167[0] * fTemp449) + ((fRec163[0] * fTemp445) + ((fRec159[0] * fTemp441) + ((fRec155[0] * fTemp437) + ((fRec151[0] * fTemp432) + ((fRec147[0] * fTemp427) + ((fRec143[0] * fTemp422) + ((fRec139[0] * fTemp417) + ((fRec135[0] * fTemp412) + ((fRec131[0] * fTemp407) + ((fRec127[0] * fTemp402) + ((fRec123[0] * fTemp397) + ((fRec119[0] * fTemp392) + ((fRec115[0] * fTemp387) + ((fRec106[0] * fTemp382) + ((fRec97[0] * fTemp377) + ((fRec88[0] * fTemp372) + ((fRec79[0] * fTemp367) + ((fRec70[0] * fTemp362) + ((fRec61[0] * fTemp357) + ((fRec52[0] * fTemp352) + ((fRec42[0] * fTemp347) + ((fRec32[0] * fTemp342) + ((fRec22[0] * fTemp337) + ((fRec12[0] * fTemp332) + ((fRec1[0] * fTemp327) + ((fRec468[0] * fTemp322) + ((fRec464[0] * fTemp317) + ((fRec460[0] * fTemp312) + ((fRec456[0] * fTemp307) + ((fRec452[0] * fTemp302) + ((fRec448[0] * fTemp297) + ((fRec444[0] * fTemp292) + ((fRec440[0] * fTemp287) + ((fRec436[0] * fTemp282) + ((fRec432[0] * fTemp277) + ((fRec428[0] * fTemp272) + ((fRec424[0] * fTemp267) + ((fRec420[0] * fTemp262) + ((fRec416[0] * fTemp257) + (fSlow36 * fTemp696))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp754 = (1.679f * ((fSlow36 * (fRec390[0] + (fRec384[0] + (fRec378[0] + (fRec372[0] + (fRec366[0] + (fRec359[0] + (fRec352[0] + (fRec345[0] + (fRec338[0] + (fRec331[0] + (fRec324[0] + (fRec317[0] + (fRec412[0] + (fRec408[0] + (fRec404[0] + (fRec396[0] + fRec400[0]))))))))))))))))) + (fRec440[0] + (fRec436[0] + (fRec432[0] + (fRec428[0] + (fRec424[0] + (fRec420[0] + (fRec416[0] + (fRec468[0] + (fRec464[0] + (fRec460[0] + (fRec456[0] + (fRec452[0] + (fRec448[0] + (fRec444[0] + (fRec42[0] + (fRec32[0] + (fRec22[0] + (fRec12[0] + (fRec1[0] + (fRec79[0] + (fRec70[0] + (fRec61[0] + (fRec52[0] + (fRec131[0] + (fRec127[0] + (fRec123[0] + (fRec119[0] + (fRec115[0] + (fRec106[0] + (fRec97[0] + (fRec88[0] + fTemp473)))))))))))))))))))))))))))))))));
			fVec147[0] = (fTemp754 - fTemp753);
			fRec316[0] = (fConst19 * ((fTemp754 - (fTemp753 + fVec147[1])) + fRec316[1]));
			float fTemp755 = (fTemp753 + (0.0002f * (fRec316[0] * fSlow1)));
			int iTemp756 = int((1048576 * faustpower<2>(min(1.0f, max(-1.0f, (0.1f * fTemp534))))));
			iVec148[IOTA&4095] = iTemp756;
			iRec473[0] = ((iVec148[IOTA&4095] + iRec473[1]) - iVec148[(IOTA-iConst28)&4095]);
			float fTemp757 = log10f(sqrtf((fConst29 * float(iRec473[0]))));
			fVec149[0] = fTemp757;
			fRec472[0] = ((fConst26 * ((int(((2e+01f * fVec149[0]) > -75.0f)))?((int(((2e+01f * fVec149[1]) < -105.0f)))?1.0f:0.0f):0.0f)) + (fConst27 * fRec472[1]));
			float fTemp758 = min(1.0f, (fConst30 * fRec472[0]));
			fVec150[0] = fTemp758;
			fRec474[0] = (fSlow84 + (0.98f * fRec474[1]));
			float fTemp759 = ((fRec88[0] * fTemp252) + ((fRec79[0] * fTemp247) + ((fRec70[0] * fTemp242) + ((fRec61[0] * fTemp237) + ((fRec52[0] * fTemp232) + ((fRec42[0] * fTemp214) + ((fRec32[0] * fTemp196) + ((fRec22[0] * fTemp178) + ((fRec12[0] * fTemp160) + ((fRec1[0] * fTemp142) + ((fRec468[0] * fTemp124) + ((fRec464[0] * fTemp106) + ((fRec460[0] * fTemp85) + ((fRec456[0] * fTemp64) + ((fRec452[0] * fTemp43) + ((fRec448[0] * fTemp22) + (fRec444[0] * fTemp0)))))))))))))))));
			float fTemp760 = ((fRec460[0] * fTemp252) + ((fRec456[0] * fTemp247) + ((fRec452[0] * fTemp242) + ((fRec448[0] * fTemp237) + ((fRec444[0] * fTemp232) + ((fRec440[0] * fTemp214) + ((fRec436[0] * fTemp196) + ((fRec432[0] * fTemp178) + ((fRec428[0] * fTemp160) + ((fRec424[0] * fTemp142) + ((fRec420[0] * fTemp124) + ((fRec416[0] * fTemp106) + ((fRec412[0] * fTemp85) + ((fRec408[0] * fTemp64) + ((fRec404[0] * fTemp43) + ((fRec400[0] * fTemp22) + (fRec396[0] * fTemp0)))))))))))))))));
			fRec475[0] = (fRec475[1] + (fConst31 * ((fSlow35 * ((fSlow88 * (((0.5f * fTemp696) + (0.25f * fTemp760)) + (0.125f * fTemp759))) + (fSlow86 * ((0.5f * fTemp760) + (0.25f * fTemp759))))) - fRec475[1])));
			float fTemp761 = (fSlow90 * fTemp755);
			fVec151[0] = fTemp761;
			fRec477[0] = (fConst32 * ((fVec151[0] - fVec151[1]) + fRec477[1]));
			float fTemp762 = ((fSlow91 * fTemp755) + (0.5416666666666667f * fRec477[0]));
			fVec152[0] = fTemp762;
			fRec476[0] = (fConst33 * ((fVec152[0] - fVec152[1]) + fRec476[1]));
			float fTemp763 = (0.5f * ((fRec231[0] * fTemp465) + ((fRec227[0] * fTemp461) + ((fRec223[0] * fTemp457) + ((fRec219[0] * fTemp453) + ((fRec215[0] * fTemp449) + ((fRec211[0] * fTemp445) + ((fRec207[0] * fTemp441) + ((fRec203[0] * fTemp437) + ((fRec199[0] * fTemp432) + ((fRec195[0] * fTemp427) + ((fRec191[0] * fTemp422) + ((fRec187[0] * fTemp417) + ((fRec183[0] * fTemp412) + ((fRec179[0] * fTemp407) + ((fRec175[0] * fTemp402) + ((fRec171[0] * fTemp397) + ((fRec167[0] * fTemp392) + ((fRec163[0] * fTemp387) + ((fRec159[0] * fTemp382) + ((fRec155[0] * fTemp377) + ((fRec151[0] * fTemp372) + ((fRec147[0] * fTemp367) + ((fRec143[0] * fTemp362) + ((fRec139[0] * fTemp357) + ((fRec135[0] * fTemp352) + ((fRec131[0] * fTemp347) + ((fRec127[0] * fTemp342) + ((fRec123[0] * fTemp337) + ((fRec119[0] * fTemp332) + ((fRec115[0] * fTemp327) + ((fRec106[0] * fTemp322) + ((fRec97[0] * fTemp317) + ((fRec88[0] * fTemp312) + ((fRec79[0] * fTemp307) + ((fRec70[0] * fTemp302) + ((fRec61[0] * fTemp297) + ((fRec52[0] * fTemp292) + ((fRec42[0] * fTemp287) + ((fRec32[0] * fTemp282) + ((fRec22[0] * fTemp277) + ((fRec12[0] * fTemp272) + ((fRec1[0] * fTemp267) + ((fRec468[0] * fTemp262) + ((fRec464[0] * fTemp257) + (fSlow36 * fTemp760))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp764 = ((fSlow36 * (fRec440[0] + (fRec436[0] + (fRec432[0] + (fRec428[0] + (fRec424[0] + (fRec420[0] + (fRec416[0] + (fRec412[0] + (fRec408[0] + (fRec404[0] + (fRec400[0] + (fRec396[0] + (fRec460[0] + (fRec456[0] + (fRec452[0] + (fRec444[0] + fRec448[0]))))))))))))))))) + (fRec468[0] + (fRec464[0] + (fRec42[0] + (fRec32[0] + (fRec22[0] + (fRec12[0] + (fRec1[0] + (fRec79[0] + (fRec70[0] + (fRec61[0] + (fRec52[0] + (fRec131[0] + (fRec127[0] + (fRec123[0] + (fRec119[0] + (fRec115[0] + (fRec106[0] + (fRec97[0] + (fRec88[0] + fTemp475))))))))))))))))))));
			fVec153[0] = (fTemp764 - fTemp763);
			fRec480[0] = (fConst19 * ((fTemp764 - (fTemp763 + fVec153[1])) + fRec480[1]));
			float fTemp765 = (fTemp763 + (0.0002f * (fRec480[0] * fSlow1)));
			float fTemp766 = (fSlow93 * fTemp765);
			fVec154[0] = fTemp766;
			fRec479[0] = (fConst34 * ((fVec154[0] - fVec154[1]) + fRec479[1]));
			float fTemp767 = ((fSlow94 * fTemp765) + (0.5416666666666667f * fRec479[0]));
			fVec155[0] = fTemp767;
			fRec478[0] = (fConst35 * ((fVec155[0] - fVec155[1]) + fRec478[1]));
			fRec483[0] = (fConst19 * fRec483[1]);
			float fTemp768 = ((0.0002f * (fRec483[0] * fSlow1)) + (0.5f * (fTemp502 + ((fRec275[0] * fTemp461) + ((fRec271[0] * fTemp457) + ((fRec267[0] * fTemp453) + ((fRec263[0] * fTemp449) + ((fRec259[0] * fTemp445) + ((fRec255[0] * fTemp441) + ((fRec251[0] * fTemp437) + ((fRec247[0] * fTemp432) + ((fRec243[0] * fTemp427) + ((fRec239[0] * fTemp422) + ((fRec235[0] * fTemp417) + ((fRec231[0] * fTemp412) + ((fRec227[0] * fTemp407) + ((fRec223[0] * fTemp402) + ((fRec219[0] * fTemp397) + ((fRec215[0] * fTemp392) + ((fRec211[0] * fTemp387) + ((fRec207[0] * fTemp382) + ((fRec203[0] * fTemp377) + ((fRec199[0] * fTemp372) + ((fRec195[0] * fTemp367) + ((fRec191[0] * fTemp362) + ((fRec187[0] * fTemp357) + ((fRec183[0] * fTemp352) + ((fRec179[0] * fTemp347) + ((fRec175[0] * fTemp342) + ((fRec171[0] * fTemp337) + ((fRec167[0] * fTemp332) + ((fRec163[0] * fTemp327) + ((fRec159[0] * fTemp322) + ((fRec155[0] * fTemp317) + ((fRec151[0] * fTemp312) + ((fRec147[0] * fTemp307) + ((fRec143[0] * fTemp302) + ((fRec139[0] * fTemp297) + ((fRec135[0] * fTemp292) + ((fRec131[0] * fTemp287) + ((fRec127[0] * fTemp282) + ((fRec123[0] * fTemp277) + ((fRec119[0] * fTemp272) + ((fRec115[0] * fTemp267) + ((fRec106[0] * fTemp262) + ((fRec97[0] * fTemp257) + (fSlow36 * fTemp759)))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp769 = (fSlow96 * fTemp768);
			fVec156[0] = fTemp769;
			fRec482[0] = (fConst36 * ((fVec156[0] - fVec156[1]) + fRec482[1]));
			float fTemp770 = ((fSlow97 * fTemp768) + (0.5416666666666667f * fRec482[0]));
			fVec157[0] = fTemp770;
			fRec481[0] = (fConst37 * ((fVec157[0] - fVec157[1]) + fRec481[1]));
			float fTemp771 = (0.5f * (fTemp502 + (fTemp501 + (fTemp500 + (fTemp499 + (fTemp498 + (fTemp497 + (fTemp496 + (fTemp495 + (fTemp494 + (fTemp493 + (fTemp492 + (fTemp491 + (fTemp490 + ((fRec275[0] * fTemp407) + ((fRec271[0] * fTemp402) + ((fRec267[0] * fTemp397) + ((fRec263[0] * fTemp392) + ((fRec259[0] * fTemp387) + ((fRec255[0] * fTemp382) + ((fRec251[0] * fTemp377) + ((fRec247[0] * fTemp372) + ((fRec243[0] * fTemp367) + ((fRec239[0] * fTemp362) + ((fRec235[0] * fTemp357) + ((fRec231[0] * fTemp352) + ((fRec227[0] * fTemp347) + ((fRec223[0] * fTemp342) + ((fRec219[0] * fTemp337) + ((fRec215[0] * fTemp332) + ((fRec211[0] * fTemp327) + ((fRec207[0] * fTemp322) + ((fRec203[0] * fTemp317) + ((fRec199[0] * fTemp312) + ((fRec195[0] * fTemp307) + ((fRec191[0] * fTemp302) + ((fRec187[0] * fTemp297) + ((fRec183[0] * fTemp292) + ((fRec179[0] * fTemp287) + ((fRec175[0] * fTemp282) + ((fRec171[0] * fTemp277) + ((fRec167[0] * fTemp272) + ((fRec163[0] * fTemp267) + ((fRec159[0] * fTemp262) + ((fRec155[0] * fTemp257) + (fSlow36 * ((fRec151[0] * fTemp252) + ((fRec147[0] * fTemp247) + ((fRec143[0] * fTemp242) + ((fRec139[0] * fTemp237) + ((fRec135[0] * fTemp232) + ((fRec131[0] * fTemp214) + ((fRec127[0] * fTemp196) + ((fRec123[0] * fTemp178) + ((fRec119[0] * fTemp160) + ((fRec115[0] * fTemp142) + ((fRec106[0] * fTemp124) + ((fRec97[0] * fTemp106) + ((fRec88[0] * fTemp85) + ((fRec79[0] * fTemp64) + ((fRec70[0] * fTemp43) + ((fRec61[0] * fTemp22) + (fRec52[0] * fTemp0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp772 = ((fSlow36 * (fRec79[0] + (fRec70[0] + (fRec61[0] + (fRec52[0] + (fRec131[0] + (fRec127[0] + (fRec123[0] + (fRec119[0] + (fRec115[0] + (fRec106[0] + (fRec97[0] + (fRec88[0] + fTemp471))))))))))))) + (fRec313[0] + (fRec310[0] + (fRec307[0] + (fRec304[0] + (fRec300[0] + (fRec297[0] + (fRec294[0] + (fRec291[0] + (fRec288[0] + (fRec285[0] + (fRec282[0] + ((2 * fRec279[0]) + (fRec275[0] + (fRec271[0] + (fRec267[0] + (fRec263[0] + (fRec259[0] + (fRec255[0] + (fRec251[0] + (fRec247[0] + (fRec243[0] + (fRec239[0] + (fRec235[0] + (fRec231[0] + (fRec227[0] + (fRec223[0] + (fRec219[0] + (fRec215[0] + (fRec211[0] + (fRec207[0] + (fRec203[0] + (fRec199[0] + (fRec195[0] + (fRec191[0] + (fRec187[0] + (fRec183[0] + (fRec179[0] + (fRec175[0] + (fRec171[0] + (fRec167[0] + (fRec163[0] + (fRec155[0] + fRec159[0])))))))))))))))))))))))))))))))))))))))))));
			fVec158[0] = (fTemp772 - fTemp771);
			fRec486[0] = (fConst19 * ((fTemp772 - (fTemp771 + fVec158[1])) + fRec486[1]));
			float fTemp773 = (fTemp771 + (0.0002f * (fRec486[0] * fSlow1)));
			float fTemp774 = (fSlow99 * fTemp773);
			fVec159[0] = fTemp774;
			fRec485[0] = (fConst38 * ((fVec159[0] - fVec159[1]) + fRec485[1]));
			float fTemp775 = ((fSlow100 * fTemp773) + (0.5416666666666667f * fRec485[0]));
			fVec160[0] = fTemp775;
			fRec484[0] = (fConst39 * ((fVec160[0] - fVec160[1]) + fRec484[1]));
			fRec488[0] = (fRec488[1] + (fConst8 * (fVec151[0] - fRec488[1])));
			fRec487[0] = (fRec487[1] + (fConst8 * (fRec488[0] - fRec487[1])));
			fRec490[0] = (fRec490[1] + (fConst10 * (fVec154[0] - fRec490[1])));
			fRec489[0] = (fRec489[1] + (fConst10 * (fRec490[0] - fRec489[1])));
			fRec492[0] = (fRec492[1] + (fConst13 * (fVec156[0] - fRec492[1])));
			fRec491[0] = (fRec491[1] + (fConst13 * (fRec492[0] - fRec491[1])));
			fRec494[0] = (fRec494[1] + (fConst16 * (fVec159[0] - fRec494[1])));
			fRec493[0] = (fRec493[1] + (fConst16 * (fRec494[0] - fRec493[1])));
			float fTemp776 = (0.5f * ((fRec291[0] * fTemp465) + ((fRec288[0] * fTemp461) + ((fRec285[0] * fTemp457) + ((fRec282[0] * fTemp453) + ((fRec279[0] * fTemp449) + ((fRec313[0] * fTemp445) + ((fRec310[0] * fTemp441) + ((fRec307[0] * fTemp437) + ((fRec304[0] * fTemp432) + ((fRec300[0] * fTemp427) + ((fRec297[0] * fTemp422) + ((fRec294[0] * fTemp417) + ((fRec291[0] * fTemp412) + ((fRec288[0] * fTemp407) + ((fRec285[0] * fTemp402) + ((fRec282[0] * fTemp397) + ((fRec279[0] * fTemp392) + ((fRec275[0] * fTemp387) + ((fRec271[0] * fTemp382) + ((fRec267[0] * fTemp377) + ((fRec263[0] * fTemp372) + ((fRec259[0] * fTemp367) + ((fRec255[0] * fTemp362) + ((fRec251[0] * fTemp357) + ((fRec247[0] * fTemp352) + ((fRec243[0] * fTemp347) + ((fRec239[0] * fTemp342) + ((fRec235[0] * fTemp337) + ((fRec231[0] * fTemp332) + ((fRec227[0] * fTemp327) + ((fRec223[0] * fTemp322) + ((fRec219[0] * fTemp317) + ((fRec215[0] * fTemp312) + ((fRec211[0] * fTemp307) + ((fRec207[0] * fTemp302) + ((fRec203[0] * fTemp297) + ((fRec199[0] * fTemp292) + ((fRec195[0] * fTemp287) + ((fRec191[0] * fTemp282) + ((fRec187[0] * fTemp277) + ((fRec183[0] * fTemp272) + ((fRec179[0] * fTemp267) + ((fRec175[0] * fTemp262) + ((fRec171[0] * fTemp257) + (fSlow36 * ((fRec167[0] * fTemp252) + ((fRec163[0] * fTemp247) + ((fRec159[0] * fTemp242) + ((fRec155[0] * fTemp237) + ((fRec151[0] * fTemp232) + ((fRec147[0] * fTemp214) + ((fRec143[0] * fTemp196) + ((fRec139[0] * fTemp178) + ((fRec135[0] * fTemp160) + ((fRec131[0] * fTemp142) + ((fRec127[0] * fTemp124) + ((fRec123[0] * fTemp106) + ((fRec119[0] * fTemp85) + ((fRec115[0] * fTemp64) + ((fRec106[0] * fTemp43) + ((fRec97[0] * fTemp22) + (fRec88[0] * fTemp0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp777 = ((fRec291[0] + (fRec285[0] + fRec288[0])) + (2 * ((fTemp504 + (fTemp505 + (fTemp506 + (fTemp507 + (fTemp508 + (fTemp509 + (fTemp510 + (fTemp511 + (fTemp512 + (fTemp513 + (fRec282[0] + (fRec279[0] + (fTemp514 + (fTemp515 + (fTemp516 + (fTemp517 + (fTemp518 + (fTemp519 + (fTemp520 + (fTemp521 + (fTemp522 + (fTemp523 + (fTemp524 + (fTemp525 + (fTemp526 + (fTemp527 + (fTemp528 + (fTemp529 + (fTemp530 + (fTemp531 + (fTemp532 + ((((((((0.5f * fRec171[0]) + (0.5f * fRec175[0])) + (0.5f * fRec179[0])) + (0.5f * fRec183[0])) + (0.5f * fRec187[0])) + (0.5f * fRec191[0])) + (0.5f * fRec195[0])) + (0.5f * fRec199[0]))))))))))))))))))))))))))))))))) + (fSlow81 * (fRec131[0] + (fRec127[0] + (fRec123[0] + (fRec119[0] + (fRec115[0] + (fRec106[0] + (fRec97[0] + (fRec88[0] + fTemp472))))))))))));
			fVec161[0] = (fTemp777 - fTemp776);
			fRec495[0] = (fConst19 * ((fTemp777 - (fTemp776 + fVec161[1])) + fRec495[1]));
			fRec496[0] = (fSlow121 + (0.98f * fRec496[1]));
			output0[i] = (FAUSTFLOAT)((0.001f + (0.05f * fRec496[0])) * ((fSlow120 * ((fSlow119 * fTemp534) + ((fSlow117 * (fTemp776 + (0.0002f * (fRec495[0] * fSlow1)))) + ((fSlow115 * fTemp773) + ((fSlow113 * (fTemp470 + (0.0002f * fTemp477))) + ((fSlow111 * fTemp768) + ((fSlow109 * fTemp755) + (fSlow107 * fTemp765)))))))) + ((fSlow105 * ((fSlow103 * (((fRec493[0] + fRec491[0]) + fRec489[0]) + fRec487[0])) + (fSlow102 * (((fRec484[0] + fRec481[0]) + fRec478[0]) + fRec476[0])))) + ((fRec475[0] * (0.5f + (4.5f * fRec474[0]))) + (fSlow83 * (max(fSlow82, (0.25f * (fVec150[4] + (fVec150[3] + (fVec150[0] + fVec150[2]))))) * ((fTemp469 + (fTemp755 + (0.5f * fTemp534))) + (0.0004f * fTemp477))))))));
			// post processing
			fRec496[1] = fRec496[0];
			fRec495[1] = fRec495[0];
			fVec161[1] = fVec161[0];
			fRec493[1] = fRec493[0];
			fRec494[1] = fRec494[0];
			fRec491[1] = fRec491[0];
			fRec492[1] = fRec492[0];
			fRec489[1] = fRec489[0];
			fRec490[1] = fRec490[0];
			fRec487[1] = fRec487[0];
			fRec488[1] = fRec488[0];
			fRec484[1] = fRec484[0];
			fVec160[1] = fVec160[0];
			fRec485[1] = fRec485[0];
			fVec159[1] = fVec159[0];
			fRec486[1] = fRec486[0];
			fVec158[1] = fVec158[0];
			fRec481[1] = fRec481[0];
			fVec157[1] = fVec157[0];
			fRec482[1] = fRec482[0];
			fVec156[1] = fVec156[0];
			fRec483[1] = fRec483[0];
			fRec478[1] = fRec478[0];
			fVec155[1] = fVec155[0];
			fRec479[1] = fRec479[0];
			fVec154[1] = fVec154[0];
			fRec480[1] = fRec480[0];
			fVec153[1] = fVec153[0];
			fRec476[1] = fRec476[0];
			fVec152[1] = fVec152[0];
			fRec477[1] = fRec477[0];
			fVec151[1] = fVec151[0];
			fRec475[1] = fRec475[0];
			fRec474[1] = fRec474[0];
			for (int i=4; i>0; i--) fVec150[i] = fVec150[i-1];
			fRec472[1] = fRec472[0];
			fVec149[1] = fVec149[0];
			iRec473[1] = iRec473[0];
			IOTA = IOTA+1;
			fRec316[1] = fRec316[0];
			fVec147[1] = fVec147[0];
			fRec468[1] = fRec468[0];
			fRec469[1] = fRec469[0];
			fRec470[1] = fRec470[0];
			fRec464[1] = fRec464[0];
			fRec465[1] = fRec465[0];
			fRec466[1] = fRec466[0];
			fRec460[1] = fRec460[0];
			fRec461[1] = fRec461[0];
			fRec462[1] = fRec462[0];
			fRec456[1] = fRec456[0];
			fRec457[1] = fRec457[0];
			fRec458[1] = fRec458[0];
			fRec452[1] = fRec452[0];
			fRec453[1] = fRec453[0];
			fRec454[1] = fRec454[0];
			fRec448[1] = fRec448[0];
			fRec449[1] = fRec449[0];
			fRec450[1] = fRec450[0];
			fRec444[1] = fRec444[0];
			fRec445[1] = fRec445[0];
			fRec446[1] = fRec446[0];
			fRec440[1] = fRec440[0];
			fRec441[1] = fRec441[0];
			fRec442[1] = fRec442[0];
			fRec436[1] = fRec436[0];
			fRec437[1] = fRec437[0];
			fRec438[1] = fRec438[0];
			fRec432[1] = fRec432[0];
			fRec433[1] = fRec433[0];
			fRec434[1] = fRec434[0];
			fRec428[1] = fRec428[0];
			fRec429[1] = fRec429[0];
			fRec430[1] = fRec430[0];
			fRec424[1] = fRec424[0];
			fRec425[1] = fRec425[0];
			fRec426[1] = fRec426[0];
			fRec420[1] = fRec420[0];
			fRec421[1] = fRec421[0];
			fRec422[1] = fRec422[0];
			fRec416[1] = fRec416[0];
			fRec417[1] = fRec417[0];
			fRec418[1] = fRec418[0];
			fRec412[1] = fRec412[0];
			fRec413[1] = fRec413[0];
			fRec414[1] = fRec414[0];
			fRec408[1] = fRec408[0];
			fRec409[1] = fRec409[0];
			fRec410[1] = fRec410[0];
			fRec404[1] = fRec404[0];
			fRec405[1] = fRec405[0];
			fRec406[1] = fRec406[0];
			fRec400[1] = fRec400[0];
			fRec401[1] = fRec401[0];
			fRec402[1] = fRec402[0];
			fRec396[1] = fRec396[0];
			fRec397[1] = fRec397[0];
			fRec398[1] = fRec398[0];
			fRec390[1] = fRec390[0];
			fRec391[1] = fRec391[0];
			fRec392[1] = fRec392[0];
			fVec146[1] = fVec146[0];
			iRec395[1] = iRec395[0];
			fVec145[1] = fVec145[0];
			iRec394[1] = iRec394[0];
			fRec384[1] = fRec384[0];
			fRec385[1] = fRec385[0];
			fRec386[1] = fRec386[0];
			fVec144[1] = fVec144[0];
			iRec389[1] = iRec389[0];
			fVec143[1] = fVec143[0];
			iRec388[1] = iRec388[0];
			fRec378[1] = fRec378[0];
			fRec379[1] = fRec379[0];
			fRec380[1] = fRec380[0];
			fVec142[1] = fVec142[0];
			iRec383[1] = iRec383[0];
			fVec141[1] = fVec141[0];
			iRec382[1] = iRec382[0];
			fRec372[1] = fRec372[0];
			fRec373[1] = fRec373[0];
			fRec374[1] = fRec374[0];
			fVec140[1] = fVec140[0];
			iRec377[1] = iRec377[0];
			fVec139[1] = fVec139[0];
			iRec376[1] = iRec376[0];
			fRec366[1] = fRec366[0];
			fRec367[1] = fRec367[0];
			fRec368[1] = fRec368[0];
			fVec138[1] = fVec138[0];
			iRec371[1] = iRec371[0];
			fVec137[1] = fVec137[0];
			iRec370[1] = iRec370[0];
			fRec359[1] = fRec359[0];
			fRec360[1] = fRec360[0];
			fRec361[1] = fRec361[0];
			fVec136[1] = fVec136[0];
			iRec365[1] = iRec365[0];
			fVec135[1] = fVec135[0];
			iRec364[1] = iRec364[0];
			fVec134[1] = fVec134[0];
			iRec363[1] = iRec363[0];
			fRec352[1] = fRec352[0];
			fRec353[1] = fRec353[0];
			fRec354[1] = fRec354[0];
			fVec133[1] = fVec133[0];
			iRec358[1] = iRec358[0];
			fVec132[1] = fVec132[0];
			iRec357[1] = iRec357[0];
			fVec131[1] = fVec131[0];
			iRec356[1] = iRec356[0];
			fRec345[1] = fRec345[0];
			fRec346[1] = fRec346[0];
			fRec347[1] = fRec347[0];
			fVec130[1] = fVec130[0];
			iRec351[1] = iRec351[0];
			fVec129[1] = fVec129[0];
			iRec350[1] = iRec350[0];
			fVec128[1] = fVec128[0];
			iRec349[1] = iRec349[0];
			fRec338[1] = fRec338[0];
			fRec339[1] = fRec339[0];
			fRec340[1] = fRec340[0];
			fVec127[1] = fVec127[0];
			iRec344[1] = iRec344[0];
			fVec126[1] = fVec126[0];
			iRec343[1] = iRec343[0];
			fVec125[1] = fVec125[0];
			iRec342[1] = iRec342[0];
			fRec331[1] = fRec331[0];
			fRec332[1] = fRec332[0];
			fRec333[1] = fRec333[0];
			fVec124[1] = fVec124[0];
			iRec337[1] = iRec337[0];
			fVec123[1] = fVec123[0];
			iRec336[1] = iRec336[0];
			fVec122[1] = fVec122[0];
			iRec335[1] = iRec335[0];
			fRec324[1] = fRec324[0];
			fRec325[1] = fRec325[0];
			fRec326[1] = fRec326[0];
			fVec121[1] = fVec121[0];
			iRec330[1] = iRec330[0];
			fVec120[1] = fVec120[0];
			iRec329[1] = iRec329[0];
			fVec119[1] = fVec119[0];
			iRec328[1] = iRec328[0];
			fRec317[1] = fRec317[0];
			fRec318[1] = fRec318[0];
			fRec319[1] = fRec319[0];
			fVec118[1] = fVec118[0];
			iRec323[1] = iRec323[0];
			fVec117[1] = fVec117[0];
			iRec322[1] = iRec322[0];
			fVec116[1] = fVec116[0];
			iRec321[1] = iRec321[0];
			fRec303[1] = fRec303[0];
			fVec115[1] = fVec115[0];
			fRec313[1] = fRec313[0];
			fRec315[1] = fRec315[0];
			fRec314[1] = fRec314[0];
			fRec310[1] = fRec310[0];
			fRec312[1] = fRec312[0];
			fRec311[1] = fRec311[0];
			fRec307[1] = fRec307[0];
			fRec309[1] = fRec309[0];
			fRec308[1] = fRec308[0];
			fRec304[1] = fRec304[0];
			fRec306[1] = fRec306[0];
			fRec305[1] = fRec305[0];
			fRec0[1] = fRec0[0];
			fVec114[1] = fVec114[0];
			fRec300[1] = fRec300[0];
			fRec302[1] = fRec302[0];
			fRec301[1] = fRec301[0];
			fVec113[1] = fVec113[0];
			fRec297[1] = fRec297[0];
			fRec299[1] = fRec299[0];
			fRec298[1] = fRec298[0];
			fVec112[1] = fVec112[0];
			fRec294[1] = fRec294[0];
			fRec296[1] = fRec296[0];
			fRec295[1] = fRec295[0];
			fVec111[1] = fVec111[0];
			fRec291[1] = fRec291[0];
			fRec293[1] = fRec293[0];
			fRec292[1] = fRec292[0];
			fVec110[1] = fVec110[0];
			fRec288[1] = fRec288[0];
			fRec290[1] = fRec290[0];
			fRec289[1] = fRec289[0];
			fVec109[1] = fVec109[0];
			fRec285[1] = fRec285[0];
			fRec287[1] = fRec287[0];
			fRec286[1] = fRec286[0];
			fVec108[1] = fVec108[0];
			fRec282[1] = fRec282[0];
			fRec284[1] = fRec284[0];
			fRec283[1] = fRec283[0];
			fVec107[1] = fVec107[0];
			fRec279[1] = fRec279[0];
			fRec281[1] = fRec281[0];
			fRec280[1] = fRec280[0];
			fVec106[1] = fVec106[0];
			fRec275[1] = fRec275[0];
			fRec276[1] = fRec276[0];
			fRec277[1] = fRec277[0];
			fVec105[1] = fVec105[0];
			fRec271[1] = fRec271[0];
			fRec272[1] = fRec272[0];
			fRec273[1] = fRec273[0];
			fVec104[1] = fVec104[0];
			fRec267[1] = fRec267[0];
			fRec268[1] = fRec268[0];
			fRec269[1] = fRec269[0];
			fVec103[1] = fVec103[0];
			fRec263[1] = fRec263[0];
			fRec264[1] = fRec264[0];
			fRec265[1] = fRec265[0];
			fVec102[1] = fVec102[0];
			fRec259[1] = fRec259[0];
			fRec260[1] = fRec260[0];
			fRec261[1] = fRec261[0];
			fVec101[1] = fVec101[0];
			fRec255[1] = fRec255[0];
			fRec256[1] = fRec256[0];
			fRec257[1] = fRec257[0];
			fVec100[1] = fVec100[0];
			fRec251[1] = fRec251[0];
			fRec252[1] = fRec252[0];
			fRec253[1] = fRec253[0];
			fVec99[1] = fVec99[0];
			fRec247[1] = fRec247[0];
			fRec248[1] = fRec248[0];
			fRec249[1] = fRec249[0];
			fVec98[1] = fVec98[0];
			fRec243[1] = fRec243[0];
			fRec244[1] = fRec244[0];
			fRec245[1] = fRec245[0];
			fVec97[1] = fVec97[0];
			fRec239[1] = fRec239[0];
			fRec240[1] = fRec240[0];
			fRec241[1] = fRec241[0];
			fVec96[1] = fVec96[0];
			fRec235[1] = fRec235[0];
			fRec236[1] = fRec236[0];
			fRec237[1] = fRec237[0];
			fVec95[1] = fVec95[0];
			fRec231[1] = fRec231[0];
			fRec232[1] = fRec232[0];
			fRec233[1] = fRec233[0];
			fVec94[1] = fVec94[0];
			fRec227[1] = fRec227[0];
			fRec228[1] = fRec228[0];
			fRec229[1] = fRec229[0];
			fVec93[1] = fVec93[0];
			fRec223[1] = fRec223[0];
			fRec224[1] = fRec224[0];
			fRec225[1] = fRec225[0];
			fVec92[1] = fVec92[0];
			fRec219[1] = fRec219[0];
			fRec220[1] = fRec220[0];
			fRec221[1] = fRec221[0];
			fVec91[1] = fVec91[0];
			fRec215[1] = fRec215[0];
			fRec216[1] = fRec216[0];
			fRec217[1] = fRec217[0];
			fVec90[1] = fVec90[0];
			fRec211[1] = fRec211[0];
			fRec212[1] = fRec212[0];
			fRec213[1] = fRec213[0];
			fVec89[1] = fVec89[0];
			fRec207[1] = fRec207[0];
			fRec208[1] = fRec208[0];
			fRec209[1] = fRec209[0];
			fVec88[1] = fVec88[0];
			fRec203[1] = fRec203[0];
			fRec204[1] = fRec204[0];
			fRec205[1] = fRec205[0];
			fVec87[1] = fVec87[0];
			fRec199[1] = fRec199[0];
			fRec200[1] = fRec200[0];
			fRec201[1] = fRec201[0];
			fVec86[1] = fVec86[0];
			fRec195[1] = fRec195[0];
			fRec196[1] = fRec196[0];
			fRec197[1] = fRec197[0];
			fVec85[1] = fVec85[0];
			fRec191[1] = fRec191[0];
			fRec192[1] = fRec192[0];
			fRec193[1] = fRec193[0];
			fVec84[1] = fVec84[0];
			fRec187[1] = fRec187[0];
			fRec188[1] = fRec188[0];
			fRec189[1] = fRec189[0];
			fVec83[1] = fVec83[0];
			fRec183[1] = fRec183[0];
			fRec184[1] = fRec184[0];
			fRec185[1] = fRec185[0];
			fVec82[1] = fVec82[0];
			fRec179[1] = fRec179[0];
			fRec180[1] = fRec180[0];
			fRec181[1] = fRec181[0];
			fVec81[1] = fVec81[0];
			fRec175[1] = fRec175[0];
			fRec176[1] = fRec176[0];
			fRec177[1] = fRec177[0];
			fVec80[1] = fVec80[0];
			fRec171[1] = fRec171[0];
			fRec172[1] = fRec172[0];
			fRec173[1] = fRec173[0];
			fVec79[1] = fVec79[0];
			fRec167[1] = fRec167[0];
			fRec168[1] = fRec168[0];
			fRec169[1] = fRec169[0];
			fVec78[1] = fVec78[0];
			fRec163[1] = fRec163[0];
			fRec164[1] = fRec164[0];
			fRec165[1] = fRec165[0];
			fVec77[1] = fVec77[0];
			fRec159[1] = fRec159[0];
			fRec160[1] = fRec160[0];
			fRec161[1] = fRec161[0];
			fVec76[1] = fVec76[0];
			fRec155[1] = fRec155[0];
			fRec156[1] = fRec156[0];
			fRec157[1] = fRec157[0];
			fVec75[1] = fVec75[0];
			fRec151[1] = fRec151[0];
			fRec152[1] = fRec152[0];
			fRec153[1] = fRec153[0];
			fVec74[1] = fVec74[0];
			fRec147[1] = fRec147[0];
			fRec148[1] = fRec148[0];
			fRec149[1] = fRec149[0];
			fVec73[1] = fVec73[0];
			fRec143[1] = fRec143[0];
			fRec144[1] = fRec144[0];
			fRec145[1] = fRec145[0];
			fVec72[1] = fVec72[0];
			fRec139[1] = fRec139[0];
			fRec140[1] = fRec140[0];
			fRec141[1] = fRec141[0];
			fVec71[1] = fVec71[0];
			fRec135[1] = fRec135[0];
			fRec136[1] = fRec136[0];
			fRec137[1] = fRec137[0];
			fVec70[1] = fVec70[0];
			fRec131[1] = fRec131[0];
			fRec132[1] = fRec132[0];
			fRec133[1] = fRec133[0];
			fVec69[1] = fVec69[0];
			fRec127[1] = fRec127[0];
			fRec128[1] = fRec128[0];
			fRec129[1] = fRec129[0];
			fVec68[1] = fVec68[0];
			fRec123[1] = fRec123[0];
			fRec124[1] = fRec124[0];
			fRec125[1] = fRec125[0];
			fVec67[1] = fVec67[0];
			fRec119[1] = fRec119[0];
			fRec120[1] = fRec120[0];
			fRec121[1] = fRec121[0];
			fVec66[1] = fVec66[0];
			fRec115[1] = fRec115[0];
			fRec116[1] = fRec116[0];
			fRec117[1] = fRec117[0];
			fVec65[1] = fVec65[0];
			fRec106[1] = fRec106[0];
			fRec107[1] = fRec107[0];
			fRec108[1] = fRec108[0];
			fVec64[1] = fVec64[0];
			iRec114[1] = iRec114[0];
			fVec63[1] = fVec63[0];
			iRec113[1] = iRec113[0];
			fVec62[1] = fVec62[0];
			iRec112[1] = iRec112[0];
			fVec61[1] = fVec61[0];
			iRec110[1] = iRec110[0];
			fRec111[1] = fRec111[0];
			fVec60[1] = fVec60[0];
			fRec97[1] = fRec97[0];
			fRec98[1] = fRec98[0];
			fRec99[1] = fRec99[0];
			fVec59[1] = fVec59[0];
			iRec105[1] = iRec105[0];
			fVec58[1] = fVec58[0];
			iRec104[1] = iRec104[0];
			fVec57[1] = fVec57[0];
			iRec103[1] = iRec103[0];
			fVec56[1] = fVec56[0];
			iRec101[1] = iRec101[0];
			fRec102[1] = fRec102[0];
			fVec55[1] = fVec55[0];
			fRec88[1] = fRec88[0];
			fRec89[1] = fRec89[0];
			fRec90[1] = fRec90[0];
			fVec54[1] = fVec54[0];
			iRec96[1] = iRec96[0];
			fVec53[1] = fVec53[0];
			iRec95[1] = iRec95[0];
			fVec52[1] = fVec52[0];
			iRec94[1] = iRec94[0];
			fVec51[1] = fVec51[0];
			iRec92[1] = iRec92[0];
			fRec93[1] = fRec93[0];
			fVec50[1] = fVec50[0];
			fRec79[1] = fRec79[0];
			fRec80[1] = fRec80[0];
			fRec81[1] = fRec81[0];
			fVec49[1] = fVec49[0];
			iRec87[1] = iRec87[0];
			fVec48[1] = fVec48[0];
			iRec86[1] = iRec86[0];
			fVec47[1] = fVec47[0];
			iRec85[1] = iRec85[0];
			fVec46[1] = fVec46[0];
			iRec83[1] = iRec83[0];
			fRec84[1] = fRec84[0];
			fVec45[1] = fVec45[0];
			fRec70[1] = fRec70[0];
			fRec71[1] = fRec71[0];
			fRec72[1] = fRec72[0];
			fVec44[1] = fVec44[0];
			iRec78[1] = iRec78[0];
			fVec43[1] = fVec43[0];
			iRec77[1] = iRec77[0];
			fVec42[1] = fVec42[0];
			iRec76[1] = iRec76[0];
			fVec41[1] = fVec41[0];
			iRec74[1] = iRec74[0];
			fRec75[1] = fRec75[0];
			fVec40[1] = fVec40[0];
			fRec61[1] = fRec61[0];
			fRec62[1] = fRec62[0];
			fRec63[1] = fRec63[0];
			fVec39[1] = fVec39[0];
			iRec69[1] = iRec69[0];
			fVec38[1] = fVec38[0];
			iRec68[1] = iRec68[0];
			fVec37[1] = fVec37[0];
			iRec67[1] = iRec67[0];
			fVec36[1] = fVec36[0];
			iRec65[1] = iRec65[0];
			fRec66[1] = fRec66[0];
			fVec35[1] = fVec35[0];
			fRec52[1] = fRec52[0];
			fRec53[1] = fRec53[0];
			fRec54[1] = fRec54[0];
			fVec34[1] = fVec34[0];
			iRec60[1] = iRec60[0];
			fVec33[1] = fVec33[0];
			iRec59[1] = iRec59[0];
			fVec32[1] = fVec32[0];
			iRec58[1] = iRec58[0];
			fVec31[1] = fVec31[0];
			iRec56[1] = iRec56[0];
			fRec57[1] = fRec57[0];
			fVec30[1] = fVec30[0];
			fRec42[1] = fRec42[0];
			fRec43[1] = fRec43[0];
			fRec44[1] = fRec44[0];
			fVec29[1] = fVec29[0];
			iRec51[1] = iRec51[0];
			fVec28[1] = fVec28[0];
			iRec50[1] = iRec50[0];
			fVec27[1] = fVec27[0];
			iRec49[1] = iRec49[0];
			fVec26[1] = fVec26[0];
			iRec48[1] = iRec48[0];
			fVec25[1] = fVec25[0];
			iRec46[1] = iRec46[0];
			fRec47[1] = fRec47[0];
			fVec24[1] = fVec24[0];
			fRec32[1] = fRec32[0];
			fRec33[1] = fRec33[0];
			fRec34[1] = fRec34[0];
			fVec23[1] = fVec23[0];
			iRec41[1] = iRec41[0];
			fVec22[1] = fVec22[0];
			iRec40[1] = iRec40[0];
			fVec21[1] = fVec21[0];
			iRec39[1] = iRec39[0];
			fVec20[1] = fVec20[0];
			iRec38[1] = iRec38[0];
			fVec19[1] = fVec19[0];
			iRec36[1] = iRec36[0];
			fRec37[1] = fRec37[0];
			fVec18[1] = fVec18[0];
			fRec22[1] = fRec22[0];
			fRec23[1] = fRec23[0];
			fRec24[1] = fRec24[0];
			fVec17[1] = fVec17[0];
			iRec31[1] = iRec31[0];
			fVec16[1] = fVec16[0];
			iRec30[1] = iRec30[0];
			fVec15[1] = fVec15[0];
			iRec29[1] = iRec29[0];
			fVec14[1] = fVec14[0];
			iRec28[1] = iRec28[0];
			fVec13[1] = fVec13[0];
			iRec26[1] = iRec26[0];
			fRec27[1] = fRec27[0];
			fVec12[1] = fVec12[0];
			fRec12[1] = fRec12[0];
			fRec13[1] = fRec13[0];
			fRec14[1] = fRec14[0];
			fVec11[1] = fVec11[0];
			iRec21[1] = iRec21[0];
			fVec10[1] = fVec10[0];
			iRec20[1] = iRec20[0];
			fVec9[1] = fVec9[0];
			iRec19[1] = iRec19[0];
			fVec8[1] = fVec8[0];
			iRec18[1] = iRec18[0];
			fVec7[1] = fVec7[0];
			iRec16[1] = iRec16[0];
			fRec17[1] = fRec17[0];
			fVec6[1] = fVec6[0];
			fRec1[1] = fRec1[0];
			fRec2[1] = fRec2[0];
			fRec3[1] = fRec3[0];
			fVec5[1] = fVec5[0];
			iRec11[1] = iRec11[0];
			fVec4[1] = fVec4[0];
			iRec10[1] = iRec10[0];
			fVec3[1] = fVec3[0];
			iRec9[1] = iRec9[0];
			fVec2[1] = fVec2[0];
			iRec8[1] = iRec8[0];
			fVec1[1] = fVec1[0];
			iRec5[1] = iRec5[0];
			fRec6[1] = fRec6[0];
			fRec7[1] = fRec7[0];
			fVec0[1] = fVec0[0];
		}
	}
};


