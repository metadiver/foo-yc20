//-----------------------------------------------------
// name: "Foo YC-20 simulation"
// author: "Sampo Savolainen"
// license: "GPLv3"
// copyright: "(c)Sampo Savolainen 2009"
//
// Code generated with Faust 0.9.23 (http://faust.grame.fr)
//-----------------------------------------------------
/* link with : "" */
#include "polyblep.cpp"
#include <math.h>
#include <cmath>
template <int N> inline float faustpower(float x) 		{ return powf(x,N); } 
template <int N> inline double faustpower(double x) 	{ return pow(x,N); }
template <int N> inline int faustpower(int x) 			{ return faustpower<N/2>(x) * faustpower<N-N/2>(x); } 
template <> 	 inline int faustpower<0>(int x) 		{ return 1; }
template <> 	 inline int faustpower<1>(int x) 		{ return x; }
#include <cmath>
// abs is now predefined
//template<typename T> T abs (T a)			{ return (a<T(0)) ? -a : a; }


inline int		lsr (int x, int n)			{ return int(((unsigned int)x) >> n); }

/******************************************************************************
*******************************************************************************

							       VECTOR INTRINSICS

*******************************************************************************
*******************************************************************************/

//inline void *aligned_calloc(size_t nmemb, size_t size) { return (void*)((unsigned)(calloc((nmemb*size)+15,sizeof(char)))+15 & 0xfffffff0); }
//inline void *aligned_calloc(size_t nmemb, size_t size) { return (void*)((size_t)(calloc((nmemb*size)+15,sizeof(char)))+15 & ~15); }


/******************************************************************************
*******************************************************************************

			ABSTRACT USER INTERFACE

*******************************************************************************
*******************************************************************************/

struct Meta 
{
    void declare (const char*, const char*) {  }
};

//----------------------------------------------------------------
//  abstract definition of a user interface
//----------------------------------------------------------------
            

class UI
{
	bool	fStopped;
public:
		
	UI() : fStopped(false) {}
	virtual ~UI() {}
	
	virtual void addButton(const char* label, float* zone) = 0;
	virtual void addToggleButton(const char* label, float* zone) = 0;
	virtual void addCheckButton(const char* label, float* zone) = 0;
	virtual void addVerticalSlider(const char* label, float* zone, float init, float min, float max, float step) = 0;
	virtual void addHorizontalSlider(const char* label, float* zone, float init, float min, float max, float step) = 0;
	virtual void addNumEntry(const char* label, float* zone, float init, float min, float max, float step) = 0;
	
	virtual void openFrameBox(const char* label) = 0;
	virtual void openTabBox(const char* label) = 0;
	virtual void openHorizontalBox(const char* label) = 0;
	virtual void openVerticalBox(const char* label) = 0;
	virtual void closeBox() = 0;

    virtual void declare(float* zone, const char* key, const char* value) = 0;
};




/******************************************************************************
*******************************************************************************

			    FAUST DSP

*******************************************************************************
*******************************************************************************/



//----------------------------------------------------------------
//  abstract definition of a signal processor
//----------------------------------------------------------------
			
class dsp {
 protected:
	int fSamplingFreq;
 public:
	dsp() {}
	virtual ~dsp() {}

	virtual int getNumInputs() 						= 0;
	virtual int getNumOutputs() 					= 0;
	virtual void buildUserInterface(UI* interface) 	= 0;
	virtual void init(int samplingRate) 			= 0;
 	virtual void compute(int len, float** inputs, float** outputs) 	= 0;
};
		

//----------------------------------------------------------------------------
//  FAUST generated signal processor
//----------------------------------------------------------------------------
		

#ifndef FAUSTFLOAT
#define FAUSTFLOAT float
#endif  

typedef long double quad;

class mydsp : public dsp{
  private:
	FAUSTFLOAT 	fslider0;
	FAUSTFLOAT 	fbutton0;
	float 	fVec0[4];
	FAUSTFLOAT 	fslider1;
	FAUSTFLOAT 	fslider2;
	float 	fConst0;
	float 	fConst1;
	float 	fRec5[2];
	FAUSTFLOAT 	fslider3;
	float 	fRec4[3];
	int 	iRec3[2];
	float 	fVec1[3];
	int 	iRec6[2];
	float 	fVec2[3];
	int 	iRec7[2];
	float 	fVec3[3];
	int 	iRec8[2];
	float 	fVec4[3];
	int 	iRec9[2];
	float 	fVec5[3];
	float 	fVec6[2];
	float 	fConst2;
	float 	fRec2[2];
	float 	fConst3;
	float 	fConst4;
	float 	fRec1[2];
	FAUSTFLOAT 	fbutton1;
	float 	fVec7[4];
	float 	fRec13[3];
	int 	iRec12[2];
	float 	fVec8[3];
	int 	iRec14[2];
	float 	fVec9[3];
	int 	iRec15[2];
	float 	fVec10[3];
	int 	iRec16[2];
	float 	fVec11[3];
	int 	iRec17[2];
	float 	fVec12[3];
	float 	fVec13[2];
	float 	fConst5;
	float 	fRec11[2];
	float 	fRec10[2];
	FAUSTFLOAT 	fbutton2;
	float 	fVec14[4];
	float 	fRec21[3];
	int 	iRec20[2];
	float 	fVec15[3];
	int 	iRec22[2];
	float 	fVec16[3];
	int 	iRec23[2];
	float 	fVec17[3];
	int 	iRec24[2];
	float 	fVec18[3];
	int 	iRec25[2];
	float 	fVec19[3];
	float 	fVec20[2];
	float 	fRec19[2];
	float 	fRec18[2];
	FAUSTFLOAT 	fbutton3;
	float 	fVec21[4];
	float 	fRec29[3];
	int 	iRec28[2];
	float 	fVec22[3];
	int 	iRec30[2];
	float 	fVec23[3];
	int 	iRec31[2];
	float 	fVec24[3];
	int 	iRec32[2];
	float 	fVec25[3];
	int 	iRec33[2];
	float 	fVec26[3];
	float 	fVec27[2];
	float 	fRec27[2];
	float 	fRec26[2];
	FAUSTFLOAT 	fbutton4;
	float 	fVec28[4];
	float 	fRec37[3];
	int 	iRec36[2];
	float 	fVec29[3];
	int 	iRec38[2];
	float 	fVec30[3];
	int 	iRec39[2];
	float 	fVec31[3];
	int 	iRec40[2];
	float 	fVec32[3];
	int 	iRec41[2];
	float 	fVec33[3];
	float 	fVec34[2];
	float 	fRec35[2];
	float 	fRec34[2];
	FAUSTFLOAT 	fbutton5;
	float 	fVec35[4];
	float 	fRec45[3];
	int 	iRec44[2];
	float 	fVec36[3];
	int 	iRec46[2];
	float 	fVec37[3];
	int 	iRec47[2];
	float 	fVec38[3];
	int 	iRec48[2];
	float 	fVec39[3];
	float 	fVec40[2];
	float 	fConst6;
	float 	fRec43[2];
	float 	fConst7;
	float 	fRec42[2];
	FAUSTFLOAT 	fbutton6;
	float 	fVec41[4];
	float 	fRec52[3];
	int 	iRec51[2];
	float 	fVec42[3];
	int 	iRec53[2];
	float 	fVec43[3];
	int 	iRec54[2];
	float 	fVec44[3];
	int 	iRec55[2];
	float 	fVec45[3];
	float 	fVec46[2];
	float 	fRec50[2];
	float 	fRec49[2];
	FAUSTFLOAT 	fbutton7;
	float 	fVec47[4];
	float 	fRec59[3];
	int 	iRec58[2];
	float 	fVec48[3];
	int 	iRec60[2];
	float 	fVec49[3];
	int 	iRec61[2];
	float 	fVec50[3];
	int 	iRec62[2];
	float 	fVec51[3];
	float 	fVec52[2];
	float 	fRec57[2];
	float 	fRec56[2];
	FAUSTFLOAT 	fbutton8;
	float 	fVec53[4];
	float 	fRec66[3];
	int 	iRec65[2];
	float 	fVec54[3];
	int 	iRec67[2];
	float 	fVec55[3];
	int 	iRec68[2];
	float 	fVec56[3];
	int 	iRec69[2];
	float 	fVec57[3];
	float 	fVec58[2];
	float 	fRec64[2];
	float 	fRec63[2];
	FAUSTFLOAT 	fbutton9;
	float 	fVec59[4];
	float 	fRec73[3];
	int 	iRec72[2];
	float 	fVec60[3];
	int 	iRec74[2];
	float 	fVec61[3];
	int 	iRec75[2];
	float 	fVec62[3];
	int 	iRec76[2];
	float 	fVec63[3];
	float 	fVec64[2];
	float 	fConst8;
	float 	fRec71[2];
	float 	fRec70[2];
	FAUSTFLOAT 	fbutton10;
	float 	fVec65[4];
	float 	fRec80[3];
	int 	iRec79[2];
	float 	fVec66[3];
	int 	iRec81[2];
	float 	fVec67[3];
	int 	iRec82[2];
	float 	fVec68[3];
	int 	iRec83[2];
	float 	fVec69[3];
	float 	fVec70[2];
	float 	fRec78[2];
	float 	fRec77[2];
	FAUSTFLOAT 	fbutton11;
	float 	fVec71[4];
	float 	fRec87[3];
	int 	iRec86[2];
	float 	fVec72[3];
	int 	iRec88[2];
	float 	fVec73[3];
	int 	iRec89[2];
	float 	fVec74[3];
	int 	iRec90[2];
	float 	fVec75[3];
	float 	fVec76[2];
	float 	fRec85[2];
	float 	fRec84[2];
	FAUSTFLOAT 	fbutton12;
	float 	fVec77[4];
	float 	fVec78[2];
	float 	fRec92[2];
	float 	fRec91[2];
	FAUSTFLOAT 	fbutton13;
	float 	fVec79[4];
	float 	fVec80[2];
	float 	fConst9;
	float 	fRec94[2];
	float 	fRec93[2];
	FAUSTFLOAT 	fbutton14;
	float 	fVec81[4];
	float 	fVec82[2];
	float 	fRec96[2];
	float 	fRec95[2];
	FAUSTFLOAT 	fbutton15;
	float 	fVec83[4];
	float 	fVec84[2];
	float 	fRec98[2];
	float 	fRec97[2];
	FAUSTFLOAT 	fbutton16;
	float 	fVec85[4];
	float 	fVec86[2];
	float 	fRec100[2];
	float 	fRec99[2];
	FAUSTFLOAT 	fslider4;
	FAUSTFLOAT 	fbutton17;
	float 	fVec87[4];
	float 	fVec88[2];
	float 	fConst10;
	float 	fRec102[2];
	float 	fRec101[2];
	FAUSTFLOAT 	fbutton18;
	float 	fVec89[4];
	float 	fVec90[2];
	float 	fRec104[2];
	float 	fRec103[2];
	FAUSTFLOAT 	fbutton19;
	float 	fVec91[4];
	float 	fVec92[2];
	float 	fRec106[2];
	float 	fRec105[2];
	FAUSTFLOAT 	fbutton20;
	float 	fVec93[4];
	float 	fVec94[2];
	float 	fRec108[2];
	float 	fRec107[2];
	FAUSTFLOAT 	fbutton21;
	float 	fVec95[4];
	float 	fVec96[2];
	float 	fConst11;
	float 	fRec110[2];
	float 	fRec109[2];
	FAUSTFLOAT 	fbutton22;
	float 	fVec97[4];
	float 	fVec98[2];
	float 	fRec112[2];
	float 	fRec111[2];
	FAUSTFLOAT 	fbutton23;
	float 	fVec99[4];
	float 	fVec100[2];
	float 	fRec114[2];
	float 	fRec113[2];
	FAUSTFLOAT 	fbutton24;
	float 	fVec101[4];
	float 	fVec102[2];
	float 	fRec116[2];
	float 	fRec115[2];
	FAUSTFLOAT 	fbutton25;
	float 	fVec103[4];
	float 	fVec104[2];
	float 	fConst12;
	float 	fRec118[2];
	float 	fRec117[2];
	FAUSTFLOAT 	fbutton26;
	float 	fVec105[4];
	float 	fVec106[2];
	float 	fRec120[2];
	float 	fRec119[2];
	FAUSTFLOAT 	fbutton27;
	float 	fVec107[4];
	float 	fVec108[2];
	float 	fRec122[2];
	float 	fRec121[2];
	FAUSTFLOAT 	fbutton28;
	float 	fVec109[4];
	float 	fVec110[2];
	float 	fRec124[2];
	float 	fRec123[2];
	FAUSTFLOAT 	fbutton29;
	float 	fVec111[4];
	float 	fVec112[2];
	float 	fConst13;
	float 	fRec126[2];
	float 	fRec125[2];
	FAUSTFLOAT 	fbutton30;
	float 	fVec113[4];
	float 	fVec114[2];
	float 	fRec128[2];
	float 	fRec127[2];
	FAUSTFLOAT 	fbutton31;
	float 	fVec115[4];
	float 	fVec116[2];
	float 	fRec130[2];
	float 	fRec129[2];
	FAUSTFLOAT 	fbutton32;
	float 	fVec117[4];
	float 	fVec118[2];
	float 	fRec132[2];
	float 	fRec131[2];
	FAUSTFLOAT 	fbutton33;
	float 	fVec119[4];
	float 	fVec120[2];
	float 	fConst14;
	float 	fRec134[2];
	float 	fRec133[2];
	FAUSTFLOAT 	fbutton34;
	float 	fVec121[4];
	float 	fVec122[2];
	float 	fRec136[2];
	float 	fRec135[2];
	FAUSTFLOAT 	fbutton35;
	float 	fVec123[4];
	float 	fVec124[2];
	float 	fRec138[2];
	float 	fRec137[2];
	FAUSTFLOAT 	fbutton36;
	float 	fVec125[4];
	float 	fVec126[2];
	float 	fRec140[2];
	float 	fRec139[2];
	FAUSTFLOAT 	fbutton37;
	float 	fVec127[4];
	float 	fVec128[2];
	float 	fConst15;
	float 	fRec142[2];
	float 	fRec141[2];
	FAUSTFLOAT 	fbutton38;
	float 	fVec129[4];
	float 	fVec130[2];
	float 	fRec144[2];
	float 	fRec143[2];
	FAUSTFLOAT 	fbutton39;
	float 	fVec131[4];
	float 	fVec132[2];
	float 	fRec146[2];
	float 	fRec145[2];
	FAUSTFLOAT 	fbutton40;
	float 	fVec133[4];
	float 	fVec134[2];
	float 	fRec148[2];
	float 	fRec147[2];
	FAUSTFLOAT 	fbutton41;
	float 	fVec135[4];
	float 	fVec136[2];
	float 	fConst16;
	float 	fRec150[2];
	float 	fRec149[2];
	FAUSTFLOAT 	fbutton42;
	float 	fVec137[4];
	float 	fVec138[2];
	float 	fRec152[2];
	float 	fRec151[2];
	FAUSTFLOAT 	fbutton43;
	float 	fVec139[4];
	float 	fVec140[2];
	float 	fRec154[2];
	float 	fRec153[2];
	FAUSTFLOAT 	fbutton44;
	float 	fVec141[4];
	float 	fVec142[2];
	float 	fRec156[2];
	float 	fRec155[2];
	FAUSTFLOAT 	fbutton45;
	float 	fVec143[4];
	float 	fVec144[2];
	float 	fConst17;
	float 	fRec158[2];
	float 	fRec157[2];
	FAUSTFLOAT 	fbutton46;
	float 	fVec145[4];
	float 	fVec146[2];
	float 	fRec160[2];
	float 	fRec159[2];
	FAUSTFLOAT 	fbutton47;
	float 	fVec147[4];
	float 	fVec148[2];
	float 	fRec162[2];
	float 	fRec161[2];
	FAUSTFLOAT 	fbutton48;
	float 	fVec149[4];
	float 	fVec150[2];
	float 	fRec164[2];
	float 	fRec163[2];
	FAUSTFLOAT 	fbutton49;
	float 	fVec151[4];
	float 	fVec152[2];
	float 	fConst18;
	float 	fRec166[2];
	float 	fRec165[2];
	FAUSTFLOAT 	fbutton50;
	float 	fVec153[4];
	float 	fVec154[2];
	float 	fRec168[2];
	float 	fRec167[2];
	FAUSTFLOAT 	fbutton51;
	float 	fVec155[4];
	float 	fVec156[2];
	float 	fRec170[2];
	float 	fRec169[2];
	FAUSTFLOAT 	fbutton52;
	float 	fVec157[4];
	float 	fVec158[2];
	float 	fRec172[2];
	float 	fRec171[2];
	FAUSTFLOAT 	fbutton53;
	float 	fVec159[4];
	float 	fVec160[2];
	float 	fVec161[2];
	float 	fRec173[2];
	FAUSTFLOAT 	fbutton54;
	float 	fVec162[4];
	float 	fVec163[2];
	float 	fVec164[2];
	float 	fRec174[2];
	FAUSTFLOAT 	fbutton55;
	float 	fVec165[4];
	float 	fVec166[2];
	float 	fVec167[2];
	float 	fRec175[2];
	FAUSTFLOAT 	fbutton56;
	float 	fVec168[4];
	float 	fVec169[2];
	float 	fVec170[2];
	float 	fRec176[2];
	FAUSTFLOAT 	fbutton57;
	float 	fVec171[4];
	float 	fVec172[2];
	float 	fVec173[2];
	float 	fRec177[2];
	FAUSTFLOAT 	fbutton58;
	float 	fVec174[4];
	float 	fVec175[2];
	float 	fVec176[2];
	float 	fRec178[2];
	FAUSTFLOAT 	fbutton59;
	float 	fVec177[4];
	float 	fVec178[2];
	float 	fVec179[2];
	float 	fRec179[2];
	FAUSTFLOAT 	fbutton60;
	float 	fVec180[4];
	float 	fVec181[2];
	float 	fVec182[2];
	float 	fRec180[2];
	float 	fVec183[2];
	float 	fConst19;
	float 	fRec0[2];
	float 	fVec184[2];
	float 	fVec185[2];
	float 	fRec182[2];
	float 	fVec186[2];
	float 	fVec187[2];
	float 	fRec183[2];
	float 	fVec188[2];
	float 	fVec189[2];
	float 	fRec184[2];
	float 	fVec190[2];
	float 	fVec191[2];
	float 	fRec185[2];
	float 	fVec192[2];
	float 	fRec181[2];
	int 	iRec189[2];
	float 	fVec193[3];
	int 	iRec190[2];
	float 	fVec194[3];
	int 	iRec191[2];
	float 	fVec195[3];
	float 	fVec196[2];
	float 	fConst20;
	float 	fRec188[2];
	float 	fConst21;
	float 	fRec187[2];
	int 	iRec194[2];
	float 	fVec197[3];
	int 	iRec195[2];
	float 	fVec198[3];
	int 	iRec196[2];
	float 	fVec199[3];
	float 	fVec200[2];
	float 	fRec193[2];
	float 	fRec192[2];
	int 	iRec199[2];
	float 	fVec201[3];
	int 	iRec200[2];
	float 	fVec202[3];
	int 	iRec201[2];
	float 	fVec203[3];
	float 	fVec204[2];
	float 	fRec198[2];
	float 	fRec197[2];
	int 	iRec204[2];
	float 	fVec205[3];
	int 	iRec205[2];
	float 	fVec206[3];
	int 	iRec206[2];
	float 	fVec207[3];
	float 	fVec208[2];
	float 	fRec203[2];
	float 	fRec202[2];
	int 	iRec209[2];
	float 	fVec209[3];
	int 	iRec210[2];
	float 	fVec210[3];
	int 	iRec211[2];
	float 	fVec211[3];
	float 	fVec212[2];
	float 	fRec208[2];
	float 	fRec207[2];
	int 	iRec214[2];
	float 	fVec213[3];
	int 	iRec215[2];
	float 	fVec214[3];
	int 	iRec216[2];
	float 	fVec215[3];
	float 	fVec216[2];
	float 	fRec213[2];
	float 	fRec212[2];
	int 	iRec219[2];
	float 	fVec217[3];
	int 	iRec220[2];
	float 	fVec218[3];
	int 	iRec221[2];
	float 	fVec219[3];
	float 	fVec220[2];
	float 	fRec218[2];
	float 	fRec217[2];
	int 	iRec224[2];
	float 	fVec221[3];
	int 	iRec225[2];
	float 	fVec222[3];
	float 	fVec223[2];
	float 	fRec223[2];
	float 	fRec222[2];
	int 	iRec228[2];
	float 	fVec224[3];
	int 	iRec229[2];
	float 	fVec225[3];
	float 	fVec226[2];
	float 	fConst22;
	float 	fRec227[2];
	float 	fRec226[2];
	int 	iRec232[2];
	float 	fVec227[3];
	int 	iRec233[2];
	float 	fVec228[3];
	float 	fVec229[2];
	float 	fRec231[2];
	float 	fRec230[2];
	int 	iRec236[2];
	float 	fVec230[3];
	int 	iRec237[2];
	float 	fVec231[3];
	float 	fVec232[2];
	float 	fRec235[2];
	float 	fRec234[2];
	int 	iRec240[2];
	float 	fVec233[3];
	int 	iRec241[2];
	float 	fVec234[3];
	float 	fVec235[2];
	float 	fRec239[2];
	float 	fRec238[2];
	float 	fVec236[2];
	float 	fRec243[2];
	float 	fConst23;
	float 	fRec242[2];
	float 	fVec237[2];
	float 	fRec245[2];
	float 	fRec244[2];
	float 	fVec238[2];
	float 	fRec247[2];
	float 	fRec246[2];
	float 	fVec239[2];
	float 	fRec249[2];
	float 	fRec248[2];
	float 	fVec240[2];
	float 	fConst24;
	float 	fRec251[2];
	float 	fRec250[2];
	float 	fVec241[2];
	float 	fRec253[2];
	float 	fRec252[2];
	float 	fVec242[2];
	float 	fRec255[2];
	float 	fRec254[2];
	float 	fVec243[2];
	float 	fRec257[2];
	float 	fRec256[2];
	float 	fVec244[2];
	float 	fConst25;
	float 	fRec259[2];
	float 	fRec258[2];
	float 	fVec245[2];
	float 	fRec261[2];
	float 	fRec260[2];
	float 	fVec246[2];
	float 	fRec263[2];
	float 	fRec262[2];
	float 	fVec247[2];
	float 	fRec265[2];
	float 	fRec264[2];
	float 	fVec248[2];
	float 	fRec267[2];
	float 	fRec266[2];
	float 	fVec249[2];
	float 	fRec269[2];
	float 	fRec268[2];
	float 	fVec250[2];
	float 	fRec271[2];
	float 	fRec270[2];
	float 	fVec251[2];
	float 	fRec273[2];
	float 	fRec272[2];
	float 	fVec252[2];
	float 	fRec275[2];
	float 	fRec274[2];
	float 	fVec253[2];
	float 	fRec277[2];
	float 	fRec276[2];
	float 	fVec254[2];
	float 	fRec279[2];
	float 	fRec278[2];
	float 	fVec255[2];
	float 	fRec186[2];
	float 	fConst26;
	float 	fConst27;
	int 	iRec285[2];
	int 	iConst28;
	float 	fRec282[2];
	int 	iRec283[2];
	float 	fRec284[2];
	float 	fConst29;
	float 	fVec256[2];
	float 	fRec281[2];
	float 	fRec280[2];
	float 	fConst30;
	float 	fVec257[5];
	FAUSTFLOAT 	fslider5;
	FAUSTFLOAT 	fslider6;
	float 	fRec286[2];
	FAUSTFLOAT 	fslider7;
	FAUSTFLOAT 	fslider8;
	float 	fConst31;
	float 	fRec287[2];
	FAUSTFLOAT 	fslider9;
	float 	fVec258[2];
	float 	fConst32;
	float 	fRec289[2];
	float 	fVec259[2];
	float 	fConst33;
	float 	fRec288[2];
	float 	fVec260[2];
	float 	fRec292[2];
	FAUSTFLOAT 	fslider10;
	float 	fVec261[2];
	float 	fConst34;
	float 	fRec291[2];
	float 	fVec262[2];
	float 	fConst35;
	float 	fRec290[2];
	float 	fRec295[2];
	FAUSTFLOAT 	fslider11;
	float 	fVec263[2];
	float 	fConst36;
	float 	fRec294[2];
	float 	fVec264[2];
	float 	fConst37;
	float 	fRec293[2];
	float 	fVec265[2];
	float 	fRec298[2];
	FAUSTFLOAT 	fslider12;
	float 	fVec266[2];
	float 	fConst38;
	float 	fRec297[2];
	float 	fVec267[2];
	float 	fConst39;
	float 	fRec296[2];
	FAUSTFLOAT 	fslider13;
	float 	fRec300[2];
	float 	fRec299[2];
	float 	fRec302[2];
	float 	fRec301[2];
	float 	fRec304[2];
	float 	fRec303[2];
	float 	fRec306[2];
	float 	fRec305[2];
	FAUSTFLOAT 	fslider14;
	FAUSTFLOAT 	fslider15;
	FAUSTFLOAT 	fslider16;
	FAUSTFLOAT 	fslider17;
	FAUSTFLOAT 	fslider18;
	FAUSTFLOAT 	fslider19;
	float 	fVec268[2];
	float 	fRec307[2];
	FAUSTFLOAT 	fslider20;
	FAUSTFLOAT 	fslider21;
	FAUSTFLOAT 	fslider22;
	float 	fRec308[2];
  public:
	static void metadata(Meta* m) 	{ 
		m->declare("name", "Foo YC-20 simulation");
		m->declare("author", "Sampo Savolainen");
		m->declare("license", "GPLv3");
		m->declare("copyright", "(c)Sampo Savolainen 2009");
	}

	virtual int getNumInputs() 	{ return 0; }
	virtual int getNumOutputs() 	{ return 3; }
	static void classInit(int samplingFreq) {
	}
	virtual void instanceInit(int samplingFreq) {
		fSamplingFreq = samplingFreq;
		fslider0 = 0.0f;
		fbutton0 = 0.0;
		for (int i=0; i<4; i++) fVec0[i] = 0;
		fslider1 = 0.0f;
		fslider2 = 0.0f;
		fConst0 = float(fSamplingFreq);
		fConst1 = (1.0f / fConst0);
		for (int i=0; i<2; i++) fRec5[i] = 0;
		fslider3 = 0.0f;
		for (int i=0; i<3; i++) fRec4[i] = 0;
		for (int i=0; i<2; i++) iRec3[i] = 0;
		for (int i=0; i<3; i++) fVec1[i] = 0;
		for (int i=0; i<2; i++) iRec6[i] = 0;
		for (int i=0; i<3; i++) fVec2[i] = 0;
		for (int i=0; i<2; i++) iRec7[i] = 0;
		for (int i=0; i<3; i++) fVec3[i] = 0;
		for (int i=0; i<2; i++) iRec8[i] = 0;
		for (int i=0; i<3; i++) fVec4[i] = 0;
		for (int i=0; i<2; i++) iRec9[i] = 0;
		for (int i=0; i<3; i++) fVec5[i] = 0;
		for (int i=0; i<2; i++) fVec6[i] = 0;
		fConst2 = (1470.5882352941176f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec2[i] = 0;
		fConst3 = (1.0f / fSamplingFreq);
		fConst4 = (0.003596453201970443f / (fConst3 + 0.003596453201970443f));
		for (int i=0; i<2; i++) fRec1[i] = 0;
		fbutton1 = 0.0;
		for (int i=0; i<4; i++) fVec7[i] = 0;
		for (int i=0; i<3; i++) fRec13[i] = 0;
		for (int i=0; i<2; i++) iRec12[i] = 0;
		for (int i=0; i<3; i++) fVec8[i] = 0;
		for (int i=0; i<2; i++) iRec14[i] = 0;
		for (int i=0; i<3; i++) fVec9[i] = 0;
		for (int i=0; i<2; i++) iRec15[i] = 0;
		for (int i=0; i<3; i++) fVec10[i] = 0;
		for (int i=0; i<2; i++) iRec16[i] = 0;
		for (int i=0; i<3; i++) fVec11[i] = 0;
		for (int i=0; i<2; i++) iRec17[i] = 0;
		for (int i=0; i<3; i++) fVec12[i] = 0;
		for (int i=0; i<2; i++) fVec13[i] = 0;
		fConst5 = (1785.7142857142858f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec11[i] = 0;
		for (int i=0; i<2; i++) fRec10[i] = 0;
		fbutton2 = 0.0;
		for (int i=0; i<4; i++) fVec14[i] = 0;
		for (int i=0; i<3; i++) fRec21[i] = 0;
		for (int i=0; i<2; i++) iRec20[i] = 0;
		for (int i=0; i<3; i++) fVec15[i] = 0;
		for (int i=0; i<2; i++) iRec22[i] = 0;
		for (int i=0; i<3; i++) fVec16[i] = 0;
		for (int i=0; i<2; i++) iRec23[i] = 0;
		for (int i=0; i<3; i++) fVec17[i] = 0;
		for (int i=0; i<2; i++) iRec24[i] = 0;
		for (int i=0; i<3; i++) fVec18[i] = 0;
		for (int i=0; i<2; i++) iRec25[i] = 0;
		for (int i=0; i<3; i++) fVec19[i] = 0;
		for (int i=0; i<2; i++) fVec20[i] = 0;
		for (int i=0; i<2; i++) fRec19[i] = 0;
		for (int i=0; i<2; i++) fRec18[i] = 0;
		fbutton3 = 0.0;
		for (int i=0; i<4; i++) fVec21[i] = 0;
		for (int i=0; i<3; i++) fRec29[i] = 0;
		for (int i=0; i<2; i++) iRec28[i] = 0;
		for (int i=0; i<3; i++) fVec22[i] = 0;
		for (int i=0; i<2; i++) iRec30[i] = 0;
		for (int i=0; i<3; i++) fVec23[i] = 0;
		for (int i=0; i<2; i++) iRec31[i] = 0;
		for (int i=0; i<3; i++) fVec24[i] = 0;
		for (int i=0; i<2; i++) iRec32[i] = 0;
		for (int i=0; i<3; i++) fVec25[i] = 0;
		for (int i=0; i<2; i++) iRec33[i] = 0;
		for (int i=0; i<3; i++) fVec26[i] = 0;
		for (int i=0; i<2; i++) fVec27[i] = 0;
		for (int i=0; i<2; i++) fRec27[i] = 0;
		for (int i=0; i<2; i++) fRec26[i] = 0;
		fbutton4 = 0.0;
		for (int i=0; i<4; i++) fVec28[i] = 0;
		for (int i=0; i<3; i++) fRec37[i] = 0;
		for (int i=0; i<2; i++) iRec36[i] = 0;
		for (int i=0; i<3; i++) fVec29[i] = 0;
		for (int i=0; i<2; i++) iRec38[i] = 0;
		for (int i=0; i<3; i++) fVec30[i] = 0;
		for (int i=0; i<2; i++) iRec39[i] = 0;
		for (int i=0; i<3; i++) fVec31[i] = 0;
		for (int i=0; i<2; i++) iRec40[i] = 0;
		for (int i=0; i<3; i++) fVec32[i] = 0;
		for (int i=0; i<2; i++) iRec41[i] = 0;
		for (int i=0; i<3; i++) fVec33[i] = 0;
		for (int i=0; i<2; i++) fVec34[i] = 0;
		for (int i=0; i<2; i++) fRec35[i] = 0;
		for (int i=0; i<2; i++) fRec34[i] = 0;
		fbutton5 = 0.0;
		for (int i=0; i<4; i++) fVec35[i] = 0;
		for (int i=0; i<3; i++) fRec45[i] = 0;
		for (int i=0; i<2; i++) iRec44[i] = 0;
		for (int i=0; i<3; i++) fVec36[i] = 0;
		for (int i=0; i<2; i++) iRec46[i] = 0;
		for (int i=0; i<3; i++) fVec37[i] = 0;
		for (int i=0; i<2; i++) iRec47[i] = 0;
		for (int i=0; i<3; i++) fVec38[i] = 0;
		for (int i=0; i<2; i++) iRec48[i] = 0;
		for (int i=0; i<3; i++) fVec39[i] = 0;
		for (int i=0; i<2; i++) fVec40[i] = 0;
		fConst6 = (2127.659574468085f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec43[i] = 0;
		fConst7 = (0.007374545454545454f / (fConst3 + 0.007374545454545454f));
		for (int i=0; i<2; i++) fRec42[i] = 0;
		fbutton6 = 0.0;
		for (int i=0; i<4; i++) fVec41[i] = 0;
		for (int i=0; i<3; i++) fRec52[i] = 0;
		for (int i=0; i<2; i++) iRec51[i] = 0;
		for (int i=0; i<3; i++) fVec42[i] = 0;
		for (int i=0; i<2; i++) iRec53[i] = 0;
		for (int i=0; i<3; i++) fVec43[i] = 0;
		for (int i=0; i<2; i++) iRec54[i] = 0;
		for (int i=0; i<3; i++) fVec44[i] = 0;
		for (int i=0; i<2; i++) iRec55[i] = 0;
		for (int i=0; i<3; i++) fVec45[i] = 0;
		for (int i=0; i<2; i++) fVec46[i] = 0;
		for (int i=0; i<2; i++) fRec50[i] = 0;
		for (int i=0; i<2; i++) fRec49[i] = 0;
		fbutton7 = 0.0;
		for (int i=0; i<4; i++) fVec47[i] = 0;
		for (int i=0; i<3; i++) fRec59[i] = 0;
		for (int i=0; i<2; i++) iRec58[i] = 0;
		for (int i=0; i<3; i++) fVec48[i] = 0;
		for (int i=0; i<2; i++) iRec60[i] = 0;
		for (int i=0; i<3; i++) fVec49[i] = 0;
		for (int i=0; i<2; i++) iRec61[i] = 0;
		for (int i=0; i<3; i++) fVec50[i] = 0;
		for (int i=0; i<2; i++) iRec62[i] = 0;
		for (int i=0; i<3; i++) fVec51[i] = 0;
		for (int i=0; i<2; i++) fVec52[i] = 0;
		for (int i=0; i<2; i++) fRec57[i] = 0;
		for (int i=0; i<2; i++) fRec56[i] = 0;
		fbutton8 = 0.0;
		for (int i=0; i<4; i++) fVec53[i] = 0;
		for (int i=0; i<3; i++) fRec66[i] = 0;
		for (int i=0; i<2; i++) iRec65[i] = 0;
		for (int i=0; i<3; i++) fVec54[i] = 0;
		for (int i=0; i<2; i++) iRec67[i] = 0;
		for (int i=0; i<3; i++) fVec55[i] = 0;
		for (int i=0; i<2; i++) iRec68[i] = 0;
		for (int i=0; i<3; i++) fVec56[i] = 0;
		for (int i=0; i<2; i++) iRec69[i] = 0;
		for (int i=0; i<3; i++) fVec57[i] = 0;
		for (int i=0; i<2; i++) fVec58[i] = 0;
		for (int i=0; i<2; i++) fRec64[i] = 0;
		for (int i=0; i<2; i++) fRec63[i] = 0;
		fbutton9 = 0.0;
		for (int i=0; i<4; i++) fVec59[i] = 0;
		for (int i=0; i<3; i++) fRec73[i] = 0;
		for (int i=0; i<2; i++) iRec72[i] = 0;
		for (int i=0; i<3; i++) fVec60[i] = 0;
		for (int i=0; i<2; i++) iRec74[i] = 0;
		for (int i=0; i<3; i++) fVec61[i] = 0;
		for (int i=0; i<2; i++) iRec75[i] = 0;
		for (int i=0; i<3; i++) fVec62[i] = 0;
		for (int i=0; i<2; i++) iRec76[i] = 0;
		for (int i=0; i<3; i++) fVec63[i] = 0;
		for (int i=0; i<2; i++) fVec64[i] = 0;
		fConst8 = (2564.102564102564f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec71[i] = 0;
		for (int i=0; i<2; i++) fRec70[i] = 0;
		fbutton10 = 0.0;
		for (int i=0; i<4; i++) fVec65[i] = 0;
		for (int i=0; i<3; i++) fRec80[i] = 0;
		for (int i=0; i<2; i++) iRec79[i] = 0;
		for (int i=0; i<3; i++) fVec66[i] = 0;
		for (int i=0; i<2; i++) iRec81[i] = 0;
		for (int i=0; i<3; i++) fVec67[i] = 0;
		for (int i=0; i<2; i++) iRec82[i] = 0;
		for (int i=0; i<3; i++) fVec68[i] = 0;
		for (int i=0; i<2; i++) iRec83[i] = 0;
		for (int i=0; i<3; i++) fVec69[i] = 0;
		for (int i=0; i<2; i++) fVec70[i] = 0;
		for (int i=0; i<2; i++) fRec78[i] = 0;
		for (int i=0; i<2; i++) fRec77[i] = 0;
		fbutton11 = 0.0;
		for (int i=0; i<4; i++) fVec71[i] = 0;
		for (int i=0; i<3; i++) fRec87[i] = 0;
		for (int i=0; i<2; i++) iRec86[i] = 0;
		for (int i=0; i<3; i++) fVec72[i] = 0;
		for (int i=0; i<2; i++) iRec88[i] = 0;
		for (int i=0; i<3; i++) fVec73[i] = 0;
		for (int i=0; i<2; i++) iRec89[i] = 0;
		for (int i=0; i<3; i++) fVec74[i] = 0;
		for (int i=0; i<2; i++) iRec90[i] = 0;
		for (int i=0; i<3; i++) fVec75[i] = 0;
		for (int i=0; i<2; i++) fVec76[i] = 0;
		for (int i=0; i<2; i++) fRec85[i] = 0;
		for (int i=0; i<2; i++) fRec84[i] = 0;
		fbutton12 = 0.0;
		for (int i=0; i<4; i++) fVec77[i] = 0;
		for (int i=0; i<2; i++) fVec78[i] = 0;
		for (int i=0; i<2; i++) fRec92[i] = 0;
		for (int i=0; i<2; i++) fRec91[i] = 0;
		fbutton13 = 0.0;
		for (int i=0; i<4; i++) fVec79[i] = 0;
		for (int i=0; i<2; i++) fVec80[i] = 0;
		fConst9 = (3703.703703703704f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec94[i] = 0;
		for (int i=0; i<2; i++) fRec93[i] = 0;
		fbutton14 = 0.0;
		for (int i=0; i<4; i++) fVec81[i] = 0;
		for (int i=0; i<2; i++) fVec82[i] = 0;
		for (int i=0; i<2; i++) fRec96[i] = 0;
		for (int i=0; i<2; i++) fRec95[i] = 0;
		fbutton15 = 0.0;
		for (int i=0; i<4; i++) fVec83[i] = 0;
		for (int i=0; i<2; i++) fVec84[i] = 0;
		for (int i=0; i<2; i++) fRec98[i] = 0;
		for (int i=0; i<2; i++) fRec97[i] = 0;
		fbutton16 = 0.0;
		for (int i=0; i<4; i++) fVec85[i] = 0;
		for (int i=0; i<2; i++) fVec86[i] = 0;
		for (int i=0; i<2; i++) fRec100[i] = 0;
		for (int i=0; i<2; i++) fRec99[i] = 0;
		fslider4 = 0.0f;
		fbutton17 = 0.0;
		for (int i=0; i<4; i++) fVec87[i] = 0;
		for (int i=0; i<2; i++) fVec88[i] = 0;
		fConst10 = (4545.454545454545f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec102[i] = 0;
		for (int i=0; i<2; i++) fRec101[i] = 0;
		fbutton18 = 0.0;
		for (int i=0; i<4; i++) fVec89[i] = 0;
		for (int i=0; i<2; i++) fVec90[i] = 0;
		for (int i=0; i<2; i++) fRec104[i] = 0;
		for (int i=0; i<2; i++) fRec103[i] = 0;
		fbutton19 = 0.0;
		for (int i=0; i<4; i++) fVec91[i] = 0;
		for (int i=0; i<2; i++) fVec92[i] = 0;
		for (int i=0; i<2; i++) fRec106[i] = 0;
		for (int i=0; i<2; i++) fRec105[i] = 0;
		fbutton20 = 0.0;
		for (int i=0; i<4; i++) fVec93[i] = 0;
		for (int i=0; i<2; i++) fVec94[i] = 0;
		for (int i=0; i<2; i++) fRec108[i] = 0;
		for (int i=0; i<2; i++) fRec107[i] = 0;
		fbutton21 = 0.0;
		for (int i=0; i<4; i++) fVec95[i] = 0;
		for (int i=0; i<2; i++) fVec96[i] = 0;
		fConst11 = (5555.555555555556f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec110[i] = 0;
		for (int i=0; i<2; i++) fRec109[i] = 0;
		fbutton22 = 0.0;
		for (int i=0; i<4; i++) fVec97[i] = 0;
		for (int i=0; i<2; i++) fVec98[i] = 0;
		for (int i=0; i<2; i++) fRec112[i] = 0;
		for (int i=0; i<2; i++) fRec111[i] = 0;
		fbutton23 = 0.0;
		for (int i=0; i<4; i++) fVec99[i] = 0;
		for (int i=0; i<2; i++) fVec100[i] = 0;
		for (int i=0; i<2; i++) fRec114[i] = 0;
		for (int i=0; i<2; i++) fRec113[i] = 0;
		fbutton24 = 0.0;
		for (int i=0; i<4; i++) fVec101[i] = 0;
		for (int i=0; i<2; i++) fVec102[i] = 0;
		for (int i=0; i<2; i++) fRec116[i] = 0;
		for (int i=0; i<2; i++) fRec115[i] = 0;
		fbutton25 = 0.0;
		for (int i=0; i<4; i++) fVec103[i] = 0;
		for (int i=0; i<2; i++) fVec104[i] = 0;
		fConst12 = (8333.333333333334f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec118[i] = 0;
		for (int i=0; i<2; i++) fRec117[i] = 0;
		fbutton26 = 0.0;
		for (int i=0; i<4; i++) fVec105[i] = 0;
		for (int i=0; i<2; i++) fVec106[i] = 0;
		for (int i=0; i<2; i++) fRec120[i] = 0;
		for (int i=0; i<2; i++) fRec119[i] = 0;
		fbutton27 = 0.0;
		for (int i=0; i<4; i++) fVec107[i] = 0;
		for (int i=0; i<2; i++) fVec108[i] = 0;
		for (int i=0; i<2; i++) fRec122[i] = 0;
		for (int i=0; i<2; i++) fRec121[i] = 0;
		fbutton28 = 0.0;
		for (int i=0; i<4; i++) fVec109[i] = 0;
		for (int i=0; i<2; i++) fVec110[i] = 0;
		for (int i=0; i<2; i++) fRec124[i] = 0;
		for (int i=0; i<2; i++) fRec123[i] = 0;
		fbutton29 = 0.0;
		for (int i=0; i<4; i++) fVec111[i] = 0;
		for (int i=0; i<2; i++) fVec112[i] = 0;
		fConst13 = (1e+04f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec126[i] = 0;
		for (int i=0; i<2; i++) fRec125[i] = 0;
		fbutton30 = 0.0;
		for (int i=0; i<4; i++) fVec113[i] = 0;
		for (int i=0; i<2; i++) fVec114[i] = 0;
		for (int i=0; i<2; i++) fRec128[i] = 0;
		for (int i=0; i<2; i++) fRec127[i] = 0;
		fbutton31 = 0.0;
		for (int i=0; i<4; i++) fVec115[i] = 0;
		for (int i=0; i<2; i++) fVec116[i] = 0;
		for (int i=0; i<2; i++) fRec130[i] = 0;
		for (int i=0; i<2; i++) fRec129[i] = 0;
		fbutton32 = 0.0;
		for (int i=0; i<4; i++) fVec117[i] = 0;
		for (int i=0; i<2; i++) fVec118[i] = 0;
		for (int i=0; i<2; i++) fRec132[i] = 0;
		for (int i=0; i<2; i++) fRec131[i] = 0;
		fbutton33 = 0.0;
		for (int i=0; i<4; i++) fVec119[i] = 0;
		for (int i=0; i<2; i++) fVec120[i] = 0;
		fConst14 = (12195.121951219513f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec134[i] = 0;
		for (int i=0; i<2; i++) fRec133[i] = 0;
		fbutton34 = 0.0;
		for (int i=0; i<4; i++) fVec121[i] = 0;
		for (int i=0; i<2; i++) fVec122[i] = 0;
		for (int i=0; i<2; i++) fRec136[i] = 0;
		for (int i=0; i<2; i++) fRec135[i] = 0;
		fbutton35 = 0.0;
		for (int i=0; i<4; i++) fVec123[i] = 0;
		for (int i=0; i<2; i++) fVec124[i] = 0;
		for (int i=0; i<2; i++) fRec138[i] = 0;
		for (int i=0; i<2; i++) fRec137[i] = 0;
		fbutton36 = 0.0;
		for (int i=0; i<4; i++) fVec125[i] = 0;
		for (int i=0; i<2; i++) fVec126[i] = 0;
		for (int i=0; i<2; i++) fRec140[i] = 0;
		for (int i=0; i<2; i++) fRec139[i] = 0;
		fbutton37 = 0.0;
		for (int i=0; i<4; i++) fVec127[i] = 0;
		for (int i=0; i<2; i++) fVec128[i] = 0;
		fConst15 = (17857.14285714286f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec142[i] = 0;
		for (int i=0; i<2; i++) fRec141[i] = 0;
		fbutton38 = 0.0;
		for (int i=0; i<4; i++) fVec129[i] = 0;
		for (int i=0; i<2; i++) fVec130[i] = 0;
		for (int i=0; i<2; i++) fRec144[i] = 0;
		for (int i=0; i<2; i++) fRec143[i] = 0;
		fbutton39 = 0.0;
		for (int i=0; i<4; i++) fVec131[i] = 0;
		for (int i=0; i<2; i++) fVec132[i] = 0;
		for (int i=0; i<2; i++) fRec146[i] = 0;
		for (int i=0; i<2; i++) fRec145[i] = 0;
		fbutton40 = 0.0;
		for (int i=0; i<4; i++) fVec133[i] = 0;
		for (int i=0; i<2; i++) fVec134[i] = 0;
		for (int i=0; i<2; i++) fRec148[i] = 0;
		for (int i=0; i<2; i++) fRec147[i] = 0;
		fbutton41 = 0.0;
		for (int i=0; i<4; i++) fVec135[i] = 0;
		for (int i=0; i<2; i++) fVec136[i] = 0;
		fConst16 = (21276.59574468085f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec150[i] = 0;
		for (int i=0; i<2; i++) fRec149[i] = 0;
		fbutton42 = 0.0;
		for (int i=0; i<4; i++) fVec137[i] = 0;
		for (int i=0; i<2; i++) fVec138[i] = 0;
		for (int i=0; i<2; i++) fRec152[i] = 0;
		for (int i=0; i<2; i++) fRec151[i] = 0;
		fbutton43 = 0.0;
		for (int i=0; i<4; i++) fVec139[i] = 0;
		for (int i=0; i<2; i++) fVec140[i] = 0;
		for (int i=0; i<2; i++) fRec154[i] = 0;
		for (int i=0; i<2; i++) fRec153[i] = 0;
		fbutton44 = 0.0;
		for (int i=0; i<4; i++) fVec141[i] = 0;
		for (int i=0; i<2; i++) fVec142[i] = 0;
		for (int i=0; i<2; i++) fRec156[i] = 0;
		for (int i=0; i<2; i++) fRec155[i] = 0;
		fbutton45 = 0.0;
		for (int i=0; i<4; i++) fVec143[i] = 0;
		for (int i=0; i<2; i++) fVec144[i] = 0;
		fConst17 = (25641.02564102564f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec158[i] = 0;
		for (int i=0; i<2; i++) fRec157[i] = 0;
		fbutton46 = 0.0;
		for (int i=0; i<4; i++) fVec145[i] = 0;
		for (int i=0; i<2; i++) fVec146[i] = 0;
		for (int i=0; i<2; i++) fRec160[i] = 0;
		for (int i=0; i<2; i++) fRec159[i] = 0;
		fbutton47 = 0.0;
		for (int i=0; i<4; i++) fVec147[i] = 0;
		for (int i=0; i<2; i++) fVec148[i] = 0;
		for (int i=0; i<2; i++) fRec162[i] = 0;
		for (int i=0; i<2; i++) fRec161[i] = 0;
		fbutton48 = 0.0;
		for (int i=0; i<4; i++) fVec149[i] = 0;
		for (int i=0; i<2; i++) fVec150[i] = 0;
		for (int i=0; i<2; i++) fRec164[i] = 0;
		for (int i=0; i<2; i++) fRec163[i] = 0;
		fbutton49 = 0.0;
		for (int i=0; i<4; i++) fVec151[i] = 0;
		for (int i=0; i<2; i++) fVec152[i] = 0;
		fConst18 = (37037.03703703704f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec166[i] = 0;
		for (int i=0; i<2; i++) fRec165[i] = 0;
		fbutton50 = 0.0;
		for (int i=0; i<4; i++) fVec153[i] = 0;
		for (int i=0; i<2; i++) fVec154[i] = 0;
		for (int i=0; i<2; i++) fRec168[i] = 0;
		for (int i=0; i<2; i++) fRec167[i] = 0;
		fbutton51 = 0.0;
		for (int i=0; i<4; i++) fVec155[i] = 0;
		for (int i=0; i<2; i++) fVec156[i] = 0;
		for (int i=0; i<2; i++) fRec170[i] = 0;
		for (int i=0; i<2; i++) fRec169[i] = 0;
		fbutton52 = 0.0;
		for (int i=0; i<4; i++) fVec157[i] = 0;
		for (int i=0; i<2; i++) fVec158[i] = 0;
		for (int i=0; i<2; i++) fRec172[i] = 0;
		for (int i=0; i<2; i++) fRec171[i] = 0;
		fbutton53 = 0.0;
		for (int i=0; i<4; i++) fVec159[i] = 0;
		for (int i=0; i<2; i++) fVec160[i] = 0;
		for (int i=0; i<2; i++) fVec161[i] = 0;
		for (int i=0; i<2; i++) fRec173[i] = 0;
		fbutton54 = 0.0;
		for (int i=0; i<4; i++) fVec162[i] = 0;
		for (int i=0; i<2; i++) fVec163[i] = 0;
		for (int i=0; i<2; i++) fVec164[i] = 0;
		for (int i=0; i<2; i++) fRec174[i] = 0;
		fbutton55 = 0.0;
		for (int i=0; i<4; i++) fVec165[i] = 0;
		for (int i=0; i<2; i++) fVec166[i] = 0;
		for (int i=0; i<2; i++) fVec167[i] = 0;
		for (int i=0; i<2; i++) fRec175[i] = 0;
		fbutton56 = 0.0;
		for (int i=0; i<4; i++) fVec168[i] = 0;
		for (int i=0; i<2; i++) fVec169[i] = 0;
		for (int i=0; i<2; i++) fVec170[i] = 0;
		for (int i=0; i<2; i++) fRec176[i] = 0;
		fbutton57 = 0.0;
		for (int i=0; i<4; i++) fVec171[i] = 0;
		for (int i=0; i<2; i++) fVec172[i] = 0;
		for (int i=0; i<2; i++) fVec173[i] = 0;
		for (int i=0; i<2; i++) fRec177[i] = 0;
		fbutton58 = 0.0;
		for (int i=0; i<4; i++) fVec174[i] = 0;
		for (int i=0; i<2; i++) fVec175[i] = 0;
		for (int i=0; i<2; i++) fVec176[i] = 0;
		for (int i=0; i<2; i++) fRec178[i] = 0;
		fbutton59 = 0.0;
		for (int i=0; i<4; i++) fVec177[i] = 0;
		for (int i=0; i<2; i++) fVec178[i] = 0;
		for (int i=0; i<2; i++) fVec179[i] = 0;
		for (int i=0; i<2; i++) fRec179[i] = 0;
		fbutton60 = 0.0;
		for (int i=0; i<4; i++) fVec180[i] = 0;
		for (int i=0; i<2; i++) fVec181[i] = 0;
		for (int i=0; i<2; i++) fVec182[i] = 0;
		for (int i=0; i<2; i++) fRec180[i] = 0;
		for (int i=0; i<2; i++) fVec183[i] = 0;
		fConst19 = (0.0001f / (0.0001f + fConst3));
		for (int i=0; i<2; i++) fRec0[i] = 0;
		for (int i=0; i<2; i++) fVec184[i] = 0;
		for (int i=0; i<2; i++) fVec185[i] = 0;
		for (int i=0; i<2; i++) fRec182[i] = 0;
		for (int i=0; i<2; i++) fVec186[i] = 0;
		for (int i=0; i<2; i++) fVec187[i] = 0;
		for (int i=0; i<2; i++) fRec183[i] = 0;
		for (int i=0; i<2; i++) fVec188[i] = 0;
		for (int i=0; i<2; i++) fVec189[i] = 0;
		for (int i=0; i<2; i++) fRec184[i] = 0;
		for (int i=0; i<2; i++) fVec190[i] = 0;
		for (int i=0; i<2; i++) fVec191[i] = 0;
		for (int i=0; i<2; i++) fRec185[i] = 0;
		for (int i=0; i<2; i++) fVec192[i] = 0;
		for (int i=0; i<2; i++) fRec181[i] = 0;
		for (int i=0; i<2; i++) iRec189[i] = 0;
		for (int i=0; i<3; i++) fVec193[i] = 0;
		for (int i=0; i<2; i++) iRec190[i] = 0;
		for (int i=0; i<3; i++) fVec194[i] = 0;
		for (int i=0; i<2; i++) iRec191[i] = 0;
		for (int i=0; i<3; i++) fVec195[i] = 0;
		for (int i=0; i<2; i++) fVec196[i] = 0;
		fConst20 = (666.6666666666666f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec188[i] = 0;
		fConst21 = (0.0016849851632047478f / (fConst3 + 0.0016849851632047478f));
		for (int i=0; i<2; i++) fRec187[i] = 0;
		for (int i=0; i<2; i++) iRec194[i] = 0;
		for (int i=0; i<3; i++) fVec197[i] = 0;
		for (int i=0; i<2; i++) iRec195[i] = 0;
		for (int i=0; i<3; i++) fVec198[i] = 0;
		for (int i=0; i<2; i++) iRec196[i] = 0;
		for (int i=0; i<3; i++) fVec199[i] = 0;
		for (int i=0; i<2; i++) fVec200[i] = 0;
		for (int i=0; i<2; i++) fRec193[i] = 0;
		for (int i=0; i<2; i++) fRec192[i] = 0;
		for (int i=0; i<2; i++) iRec199[i] = 0;
		for (int i=0; i<3; i++) fVec201[i] = 0;
		for (int i=0; i<2; i++) iRec200[i] = 0;
		for (int i=0; i<3; i++) fVec202[i] = 0;
		for (int i=0; i<2; i++) iRec201[i] = 0;
		for (int i=0; i<3; i++) fVec203[i] = 0;
		for (int i=0; i<2; i++) fVec204[i] = 0;
		for (int i=0; i<2; i++) fRec198[i] = 0;
		for (int i=0; i<2; i++) fRec197[i] = 0;
		for (int i=0; i<2; i++) iRec204[i] = 0;
		for (int i=0; i<3; i++) fVec205[i] = 0;
		for (int i=0; i<2; i++) iRec205[i] = 0;
		for (int i=0; i<3; i++) fVec206[i] = 0;
		for (int i=0; i<2; i++) iRec206[i] = 0;
		for (int i=0; i<3; i++) fVec207[i] = 0;
		for (int i=0; i<2; i++) fVec208[i] = 0;
		for (int i=0; i<2; i++) fRec203[i] = 0;
		for (int i=0; i<2; i++) fRec202[i] = 0;
		for (int i=0; i<2; i++) iRec209[i] = 0;
		for (int i=0; i<3; i++) fVec209[i] = 0;
		for (int i=0; i<2; i++) iRec210[i] = 0;
		for (int i=0; i<3; i++) fVec210[i] = 0;
		for (int i=0; i<2; i++) iRec211[i] = 0;
		for (int i=0; i<3; i++) fVec211[i] = 0;
		for (int i=0; i<2; i++) fVec212[i] = 0;
		for (int i=0; i<2; i++) fRec208[i] = 0;
		for (int i=0; i<2; i++) fRec207[i] = 0;
		for (int i=0; i<2; i++) iRec214[i] = 0;
		for (int i=0; i<3; i++) fVec213[i] = 0;
		for (int i=0; i<2; i++) iRec215[i] = 0;
		for (int i=0; i<3; i++) fVec214[i] = 0;
		for (int i=0; i<2; i++) iRec216[i] = 0;
		for (int i=0; i<3; i++) fVec215[i] = 0;
		for (int i=0; i<2; i++) fVec216[i] = 0;
		for (int i=0; i<2; i++) fRec213[i] = 0;
		for (int i=0; i<2; i++) fRec212[i] = 0;
		for (int i=0; i<2; i++) iRec219[i] = 0;
		for (int i=0; i<3; i++) fVec217[i] = 0;
		for (int i=0; i<2; i++) iRec220[i] = 0;
		for (int i=0; i<3; i++) fVec218[i] = 0;
		for (int i=0; i<2; i++) iRec221[i] = 0;
		for (int i=0; i<3; i++) fVec219[i] = 0;
		for (int i=0; i<2; i++) fVec220[i] = 0;
		for (int i=0; i<2; i++) fRec218[i] = 0;
		for (int i=0; i<2; i++) fRec217[i] = 0;
		for (int i=0; i<2; i++) iRec224[i] = 0;
		for (int i=0; i<3; i++) fVec221[i] = 0;
		for (int i=0; i<2; i++) iRec225[i] = 0;
		for (int i=0; i<3; i++) fVec222[i] = 0;
		for (int i=0; i<2; i++) fVec223[i] = 0;
		for (int i=0; i<2; i++) fRec223[i] = 0;
		for (int i=0; i<2; i++) fRec222[i] = 0;
		for (int i=0; i<2; i++) iRec228[i] = 0;
		for (int i=0; i<3; i++) fVec224[i] = 0;
		for (int i=0; i<2; i++) iRec229[i] = 0;
		for (int i=0; i<3; i++) fVec225[i] = 0;
		for (int i=0; i<2; i++) fVec226[i] = 0;
		fConst22 = (833.3333333333334f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec227[i] = 0;
		for (int i=0; i<2; i++) fRec226[i] = 0;
		for (int i=0; i<2; i++) iRec232[i] = 0;
		for (int i=0; i<3; i++) fVec227[i] = 0;
		for (int i=0; i<2; i++) iRec233[i] = 0;
		for (int i=0; i<3; i++) fVec228[i] = 0;
		for (int i=0; i<2; i++) fVec229[i] = 0;
		for (int i=0; i<2; i++) fRec231[i] = 0;
		for (int i=0; i<2; i++) fRec230[i] = 0;
		for (int i=0; i<2; i++) iRec236[i] = 0;
		for (int i=0; i<3; i++) fVec230[i] = 0;
		for (int i=0; i<2; i++) iRec237[i] = 0;
		for (int i=0; i<3; i++) fVec231[i] = 0;
		for (int i=0; i<2; i++) fVec232[i] = 0;
		for (int i=0; i<2; i++) fRec235[i] = 0;
		for (int i=0; i<2; i++) fRec234[i] = 0;
		for (int i=0; i<2; i++) iRec240[i] = 0;
		for (int i=0; i<3; i++) fVec233[i] = 0;
		for (int i=0; i<2; i++) iRec241[i] = 0;
		for (int i=0; i<3; i++) fVec234[i] = 0;
		for (int i=0; i<2; i++) fVec235[i] = 0;
		for (int i=0; i<2; i++) fRec239[i] = 0;
		for (int i=0; i<2; i++) fRec238[i] = 0;
		for (int i=0; i<2; i++) fVec236[i] = 0;
		for (int i=0; i<2; i++) fRec243[i] = 0;
		fConst23 = (0.00223066398390342f / (fConst3 + 0.00223066398390342f));
		for (int i=0; i<2; i++) fRec242[i] = 0;
		for (int i=0; i<2; i++) fVec237[i] = 0;
		for (int i=0; i<2; i++) fRec245[i] = 0;
		for (int i=0; i<2; i++) fRec244[i] = 0;
		for (int i=0; i<2; i++) fVec238[i] = 0;
		for (int i=0; i<2; i++) fRec247[i] = 0;
		for (int i=0; i<2; i++) fRec246[i] = 0;
		for (int i=0; i<2; i++) fVec239[i] = 0;
		for (int i=0; i<2; i++) fRec249[i] = 0;
		for (int i=0; i<2; i++) fRec248[i] = 0;
		for (int i=0; i<2; i++) fVec240[i] = 0;
		fConst24 = (1e+03f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec251[i] = 0;
		for (int i=0; i<2; i++) fRec250[i] = 0;
		for (int i=0; i<2; i++) fVec241[i] = 0;
		for (int i=0; i<2; i++) fRec253[i] = 0;
		for (int i=0; i<2; i++) fRec252[i] = 0;
		for (int i=0; i<2; i++) fVec242[i] = 0;
		for (int i=0; i<2; i++) fRec255[i] = 0;
		for (int i=0; i<2; i++) fRec254[i] = 0;
		for (int i=0; i<2; i++) fVec243[i] = 0;
		for (int i=0; i<2; i++) fRec257[i] = 0;
		for (int i=0; i<2; i++) fRec256[i] = 0;
		for (int i=0; i<2; i++) fVec244[i] = 0;
		fConst25 = (1219.5121951219512f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec259[i] = 0;
		for (int i=0; i<2; i++) fRec258[i] = 0;
		for (int i=0; i<2; i++) fVec245[i] = 0;
		for (int i=0; i<2; i++) fRec261[i] = 0;
		for (int i=0; i<2; i++) fRec260[i] = 0;
		for (int i=0; i<2; i++) fVec246[i] = 0;
		for (int i=0; i<2; i++) fRec263[i] = 0;
		for (int i=0; i<2; i++) fRec262[i] = 0;
		for (int i=0; i<2; i++) fVec247[i] = 0;
		for (int i=0; i<2; i++) fRec265[i] = 0;
		for (int i=0; i<2; i++) fRec264[i] = 0;
		for (int i=0; i<2; i++) fVec248[i] = 0;
		for (int i=0; i<2; i++) fRec267[i] = 0;
		for (int i=0; i<2; i++) fRec266[i] = 0;
		for (int i=0; i<2; i++) fVec249[i] = 0;
		for (int i=0; i<2; i++) fRec269[i] = 0;
		for (int i=0; i<2; i++) fRec268[i] = 0;
		for (int i=0; i<2; i++) fVec250[i] = 0;
		for (int i=0; i<2; i++) fRec271[i] = 0;
		for (int i=0; i<2; i++) fRec270[i] = 0;
		for (int i=0; i<2; i++) fVec251[i] = 0;
		for (int i=0; i<2; i++) fRec273[i] = 0;
		for (int i=0; i<2; i++) fRec272[i] = 0;
		for (int i=0; i<2; i++) fVec252[i] = 0;
		for (int i=0; i<2; i++) fRec275[i] = 0;
		for (int i=0; i<2; i++) fRec274[i] = 0;
		for (int i=0; i<2; i++) fVec253[i] = 0;
		for (int i=0; i<2; i++) fRec277[i] = 0;
		for (int i=0; i<2; i++) fRec276[i] = 0;
		for (int i=0; i<2; i++) fVec254[i] = 0;
		for (int i=0; i<2; i++) fRec279[i] = 0;
		for (int i=0; i<2; i++) fRec278[i] = 0;
		for (int i=0; i<2; i++) fVec255[i] = 0;
		for (int i=0; i<2; i++) fRec186[i] = 0;
		fConst26 = (36.243757712787264f / fConst0);
		fConst27 = (1.0f - fConst26);
		for (int i=0; i<2; i++) iRec285[i] = 0;
		iConst28 = int((0.02f * max(2.205e+04f, min(1.92e+05f, fConst0))));
		for (int i=0; i<2; i++) fRec282[i] = 0;
		for (int i=0; i<2; i++) iRec283[i] = 0;
		for (int i=0; i<2; i++) fRec284[i] = 0;
		fConst29 = (1.0f / iConst28);
		for (int i=0; i<2; i++) fVec256[i] = 0;
		for (int i=0; i<2; i++) fRec281[i] = 0;
		for (int i=0; i<2; i++) fRec280[i] = 0;
		fConst30 = (0.027590958087858178f * fConst0);
		for (int i=0; i<5; i++) fVec257[i] = 0;
		fslider5 = 1.0f;
		fslider6 = 1.0f;
		for (int i=0; i<2; i++) fRec286[i] = 0;
		fslider7 = 1.0f;
		fslider8 = 1.0f;
		fConst31 = (3968.253968253968f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec287[i] = 0;
		fslider9 = 1.0f;
		for (int i=0; i<2; i++) fVec258[i] = 0;
		fConst32 = (0.000858f / (fConst3 + 0.000858f));
		for (int i=0; i<2; i++) fRec289[i] = 0;
		for (int i=0; i<2; i++) fVec259[i] = 0;
		fConst33 = (0.000429f / (fConst3 + 0.000429f));
		for (int i=0; i<2; i++) fRec288[i] = 0;
		for (int i=0; i<2; i++) fVec260[i] = 0;
		for (int i=0; i<2; i++) fRec292[i] = 0;
		fslider10 = 1.0f;
		for (int i=0; i<2; i++) fVec261[i] = 0;
		fConst34 = (0.00039f / (fConst3 + 0.00039f));
		for (int i=0; i<2; i++) fRec291[i] = 0;
		for (int i=0; i<2; i++) fVec262[i] = 0;
		fConst35 = (0.000195f / (fConst3 + 0.000195f));
		for (int i=0; i<2; i++) fRec290[i] = 0;
		for (int i=0; i<2; i++) fRec295[i] = 0;
		fslider11 = 1.0f;
		for (int i=0; i<2; i++) fVec263[i] = 0;
		fConst36 = (0.0001833f / (fConst3 + 0.0001833f));
		for (int i=0; i<2; i++) fRec294[i] = 0;
		for (int i=0; i<2; i++) fVec264[i] = 0;
		fConst37 = (9.165e-05f / (fConst3 + 9.165e-05f));
		for (int i=0; i<2; i++) fRec293[i] = 0;
		for (int i=0; i<2; i++) fVec265[i] = 0;
		for (int i=0; i<2; i++) fRec298[i] = 0;
		fslider12 = 1.0f;
		for (int i=0; i<2; i++) fVec266[i] = 0;
		fConst38 = (0.00010530000000000001f / (fConst3 + 0.00010530000000000001f));
		for (int i=0; i<2; i++) fRec297[i] = 0;
		for (int i=0; i<2; i++) fVec267[i] = 0;
		fConst39 = (5.2650000000000006e-05f / (fConst3 + 5.2650000000000006e-05f));
		for (int i=0; i<2; i++) fRec296[i] = 0;
		fslider13 = 0.0f;
		for (int i=0; i<2; i++) fRec300[i] = 0;
		for (int i=0; i<2; i++) fRec299[i] = 0;
		for (int i=0; i<2; i++) fRec302[i] = 0;
		for (int i=0; i<2; i++) fRec301[i] = 0;
		for (int i=0; i<2; i++) fRec304[i] = 0;
		for (int i=0; i<2; i++) fRec303[i] = 0;
		for (int i=0; i<2; i++) fRec306[i] = 0;
		for (int i=0; i<2; i++) fRec305[i] = 0;
		fslider14 = 1.0f;
		fslider15 = 1.0f;
		fslider16 = 0.5f;
		fslider17 = 1.0f;
		fslider18 = 0.5f;
		fslider19 = 1.0f;
		for (int i=0; i<2; i++) fVec268[i] = 0;
		for (int i=0; i<2; i++) fRec307[i] = 0;
		fslider20 = 0.0f;
		fslider21 = 0.5f;
		fslider22 = 0.1f;
		for (int i=0; i<2; i++) fRec308[i] = 0;
	}
	virtual void init(int samplingFreq) {
		classInit(samplingFreq);
		instanceInit(samplingFreq);
	}
	virtual void buildUserInterface(UI* interface) {
		interface->openVerticalBox("yc20");
		interface->addButton("A0", &fbutton10);
		interface->addButton("A1", &fbutton22);
		interface->addButton("A2", &fbutton34);
		interface->addButton("A3", &fbutton46);
		interface->addButton("A4", &fbutton58);
		interface->addButton("C0", &fbutton1);
		interface->addButton("C1", &fbutton13);
		interface->addButton("C2", &fbutton25);
		interface->addButton("C3", &fbutton37);
		interface->addButton("C4", &fbutton49);
		interface->addButton("D0", &fbutton3);
		interface->addButton("D1", &fbutton15);
		interface->addButton("D2", &fbutton27);
		interface->addButton("D3", &fbutton39);
		interface->addButton("D4", &fbutton51);
		interface->addButton("F0", &fbutton6);
		interface->addButton("F1", &fbutton18);
		interface->addButton("F2", &fbutton30);
		interface->addButton("F3", &fbutton42);
		interface->addButton("F4", &fbutton54);
		interface->addButton("G0", &fbutton8);
		interface->addButton("G1", &fbutton20);
		interface->addButton("G2", &fbutton32);
		interface->addButton("G3", &fbutton44);
		interface->addButton("G4", &fbutton56);
		interface->openVerticalBox("[2]vibrato");
		interface->declare(&fslider3, "1", "");
		interface->addHorizontalSlider("depth", &fslider3, 0.0f, 0.0f, 1.0f, 0.2f);
		interface->declare(&fslider2, "2", "");
		interface->addHorizontalSlider("speed", &fslider2, 0.0f, 0.0f, 1.0f, 0.2f);
		interface->closeBox();
		interface->addButton("a0", &fbutton9);
		interface->addButton("a1", &fbutton21);
		interface->addButton("a2", &fbutton33);
		interface->addButton("a3", &fbutton45);
		interface->addButton("a4", &fbutton57);
		interface->addButton("b0", &fbutton11);
		interface->addButton("b1", &fbutton23);
		interface->addButton("b2", &fbutton35);
		interface->addButton("b3", &fbutton47);
		interface->addButton("b4", &fbutton59);
		interface->addHorizontalSlider("balance", &fslider14, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->openHorizontalBox("bass");
		interface->declare(&fslider8, "1", "");
		interface->addVerticalSlider("16' b", &fslider8, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider7, "2", "");
		interface->addVerticalSlider("8' b", &fslider7, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider4, "3", "");
		interface->addHorizontalSlider("bass manual", &fslider4, 0.0f, 0.0f, 1.0f, 1.0f);
		interface->declare(&fslider6, "3", "");
		interface->addVerticalSlider("bass volume", &fslider6, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->closeBox();
		interface->addButton("c0", &fbutton0);
		interface->addButton("c1", &fbutton12);
		interface->addButton("c2", &fbutton24);
		interface->addButton("c3", &fbutton36);
		interface->addButton("c4", &fbutton48);
		interface->addButton("c5", &fbutton60);
		interface->addButton("d0", &fbutton2);
		interface->addButton("d1", &fbutton14);
		interface->addButton("d2", &fbutton26);
		interface->addButton("d3", &fbutton38);
		interface->addButton("d4", &fbutton50);
		interface->addButton("e0", &fbutton4);
		interface->addButton("e1", &fbutton16);
		interface->addButton("e2", &fbutton28);
		interface->addButton("e3", &fbutton40);
		interface->addButton("e4", &fbutton52);
		interface->addButton("f0", &fbutton5);
		interface->addButton("f1", &fbutton17);
		interface->addButton("f2", &fbutton29);
		interface->addButton("f3", &fbutton41);
		interface->addButton("f4", &fbutton53);
		interface->addButton("g0", &fbutton7);
		interface->addButton("g1", &fbutton19);
		interface->addButton("g2", &fbutton31);
		interface->addButton("g3", &fbutton43);
		interface->addButton("g4", &fbutton55);
		interface->openHorizontalBox("i");
		interface->declare(&fslider16, "1", "");
		interface->addVerticalSlider("16' i", &fslider16, 0.5f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider15, "2", "");
		interface->addVerticalSlider("8' i", &fslider15, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider17, "3", "");
		interface->addVerticalSlider("4' i", &fslider17, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider18, "4", "");
		interface->addVerticalSlider("2 2/3' i", &fslider18, 0.5f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider19, "5", "");
		interface->addVerticalSlider("2' i", &fslider19, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider20, "6", "");
		interface->addVerticalSlider("1 3/5' i", &fslider20, 0.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider21, "7", "");
		interface->addVerticalSlider("1' i", &fslider21, 0.5f, 0.0f, 1.0f, 0.25f);
		interface->closeBox();
		interface->openHorizontalBox("ii");
		interface->declare(&fslider13, "1", "");
		interface->addVerticalSlider("bright", &fslider13, 0.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider9, "2", "");
		interface->addVerticalSlider("16' ii", &fslider9, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider10, "3", "");
		interface->addVerticalSlider("8' ii", &fslider10, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider11, "4", "");
		interface->addVerticalSlider("4' ii", &fslider11, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider12, "5", "");
		interface->addVerticalSlider("2' ii", &fslider12, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->closeBox();
		interface->addHorizontalSlider("percussive", &fslider5, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->addHorizontalSlider("pitch", &fslider1, 0.0f, -1.0f, 1.0f, 0.05f);
		interface->addHorizontalSlider("realism", &fslider0, 0.0f, 0.0f, 1.0f, 0.25f);
		interface->addHorizontalSlider("volume", &fslider22, 0.1f, 0.0f, 1.0f, 0.01f);
		interface->closeBox();
	}
	virtual void compute (int count, FAUSTFLOAT** input, FAUSTFLOAT** output) {
		float 	fSlow0 = fslider0;
		float 	fSlow1 = ((int((fSlow0 >= 0.8333333333333334f)))?1.0f:0.0f);
		float 	fSlow2 = fbutton0;
		int 	iSlow3 = int((fSlow0 > 0.16666666666666666f));
		float 	fSlow4 = ((iSlow3)?0.997294f:1.0f);
		float 	fSlow5 = (1 + (0.03f * fslider1));
		float 	fSlow6 = (fConst1 * float((5.0f + (3 * fslider2))));
		float 	fSlow7 = (0.0001f + (0.0149f * fslider3));
		float 	fSlow8 = fbutton1;
		float 	fSlow9 = ((iSlow3)?1.000562f:1.0f);
		float 	fSlow10 = fbutton2;
		float 	fSlow11 = ((iSlow3)?1.002464f:1.0f);
		float 	fSlow12 = fbutton3;
		float 	fSlow13 = ((iSlow3)?0.996945f:1.0f);
		float 	fSlow14 = fbutton4;
		float 	fSlow15 = ((iSlow3)?1.003118f:1.0f);
		float 	fSlow16 = fbutton5;
		float 	fSlow17 = ((iSlow3)?1.001383f:1.0f);
		float 	fSlow18 = fbutton6;
		float 	fSlow19 = ((iSlow3)?1.003796f:1.0f);
		float 	fSlow20 = fbutton7;
		float 	fSlow21 = ((iSlow3)?0.999484f:1.0f);
		float 	fSlow22 = fbutton8;
		float 	fSlow23 = ((iSlow3)?1.001135f:1.0f);
		float 	fSlow24 = fbutton9;
		float 	fSlow25 = ((iSlow3)?1.000064f:1.0f);
		float 	fSlow26 = fbutton10;
		float 	fSlow27 = ((iSlow3)?0.998889f:1.0f);
		float 	fSlow28 = fbutton11;
		float 	fSlow29 = ((iSlow3)?0.997199f:1.0f);
		float 	fSlow30 = fbutton12;
		float 	fSlow31 = fbutton13;
		float 	fSlow32 = fbutton14;
		float 	fSlow33 = fbutton15;
		float 	fSlow34 = fbutton16;
		float 	fSlow35 = fslider4;
		float 	fSlow36 = (1.0f - fSlow35);
		float 	fSlow37 = fbutton17;
		float 	fSlow38 = fbutton18;
		float 	fSlow39 = fbutton19;
		float 	fSlow40 = fbutton20;
		float 	fSlow41 = fbutton21;
		float 	fSlow42 = fbutton22;
		float 	fSlow43 = fbutton23;
		float 	fSlow44 = fbutton24;
		float 	fSlow45 = fbutton25;
		float 	fSlow46 = fbutton26;
		float 	fSlow47 = fbutton27;
		float 	fSlow48 = fbutton28;
		float 	fSlow49 = fbutton29;
		float 	fSlow50 = fbutton30;
		float 	fSlow51 = fbutton31;
		float 	fSlow52 = fbutton32;
		float 	fSlow53 = fbutton33;
		float 	fSlow54 = fbutton34;
		float 	fSlow55 = fbutton35;
		float 	fSlow56 = fbutton36;
		float 	fSlow57 = fbutton37;
		float 	fSlow58 = fbutton38;
		float 	fSlow59 = fbutton39;
		float 	fSlow60 = fbutton40;
		float 	fSlow61 = fbutton41;
		float 	fSlow62 = fbutton42;
		float 	fSlow63 = fbutton43;
		float 	fSlow64 = fbutton44;
		float 	fSlow65 = fbutton45;
		float 	fSlow66 = fbutton46;
		float 	fSlow67 = fbutton47;
		float 	fSlow68 = fbutton48;
		float 	fSlow69 = fbutton49;
		float 	fSlow70 = fbutton50;
		float 	fSlow71 = fbutton51;
		float 	fSlow72 = fbutton52;
		float 	fSlow73 = fbutton53;
		float 	fSlow74 = fbutton54;
		float 	fSlow75 = fbutton55;
		float 	fSlow76 = fbutton56;
		float 	fSlow77 = fbutton57;
		float 	fSlow78 = fbutton58;
		float 	fSlow79 = fbutton59;
		float 	fSlow80 = fbutton60;
		float 	fSlow81 = (0.5f * fSlow36);
		float 	fSlow82 = ((int((fSlow0 > 0.5f)))?0.01357f:0.0f);
		float 	fSlow83 = (4.5f * fslider5);
		float 	fSlow84 = (0.02f * fslider6);
		float 	fSlow85 = fslider7;
		float 	fSlow86 = (fSlow85 * (1 + (fSlow85 * ((2.81f * fSlow85) - 2.81f))));
		float 	fSlow87 = fslider8;
		float 	fSlow88 = (fSlow87 * (1 + (fSlow87 * ((2.81f * fSlow87) - 2.81f))));
		float 	fSlow89 = fslider9;
		float 	fSlow90 = (fSlow89 * (1 + (fSlow89 * ((2.81f * fSlow89) - 2.81f))));
		float 	fSlow91 = (0.4583333333333333f * fSlow90);
		float 	fSlow92 = fslider10;
		float 	fSlow93 = (fSlow92 * (1 + (fSlow92 * ((2.81f * fSlow92) - 2.81f))));
		float 	fSlow94 = (0.4583333333333333f * fSlow93);
		float 	fSlow95 = fslider11;
		float 	fSlow96 = (fSlow95 * (1 + (fSlow95 * ((2.81f * fSlow95) - 2.81f))));
		float 	fSlow97 = (0.4583333333333333f * fSlow96);
		float 	fSlow98 = fslider12;
		float 	fSlow99 = (fSlow98 * (1 + (fSlow98 * ((2.81f * fSlow98) - 2.81f))));
		float 	fSlow100 = (0.4583333333333333f * fSlow99);
		float 	fSlow101 = (0.9615384615384616f * fslider13);
		float 	fSlow102 = (0.019230769230769232f + fSlow101);
		float 	fSlow103 = (0.6f * (0.9807692307692307f - fSlow101));
		float 	fSlow104 = fslider14;
		float 	fSlow105 = (2.5f * fSlow104);
		float 	fSlow106 = fslider15;
		float 	fSlow107 = (fSlow106 * (1 + (fSlow106 * ((2.81f * fSlow106) - 2.81f))));
		float 	fSlow108 = fslider16;
		float 	fSlow109 = (fSlow108 * (1 + (fSlow108 * ((2.81f * fSlow108) - 2.81f))));
		float 	fSlow110 = fslider17;
		float 	fSlow111 = (fSlow110 * (1 + (fSlow110 * ((2.81f * fSlow110) - 2.81f))));
		float 	fSlow112 = fslider18;
		float 	fSlow113 = (fSlow112 * (1 + (fSlow112 * ((2.81f * fSlow112) - 2.81f))));
		float 	fSlow114 = fslider19;
		float 	fSlow115 = (fSlow114 * (1 + (fSlow114 * ((2.81f * fSlow114) - 2.81f))));
		float 	fSlow116 = fslider20;
		float 	fSlow117 = (fSlow116 * (1 + (fSlow116 * ((2.81f * fSlow116) - 2.81f))));
		float 	fSlow118 = fslider21;
		float 	fSlow119 = (fSlow118 * (1 + (fSlow118 * ((2.81f * fSlow118) - 2.81f))));
		float 	fSlow120 = (1 - fSlow104);
		float 	fSlow121 = (0.02f * fslider22);
		FAUSTFLOAT* output0 = output[0];
		FAUSTFLOAT* output1 = output[1];
		FAUSTFLOAT* output2 = output[2];
		for (int i=0; i<count; i++) {
			fVec0[0] = fSlow2;
			float fTemp0 = (fSlow2 + (fVec0[3] + (fVec0[1] + fVec0[2])));
			fRec5[0] = (((int((fRec5[1] > 1.0f)))?(fRec5[1] - 1.0f):fRec5[1]) + fSlow6);
			float fTemp1 = ((fSlow7 * sinf((6.283185307179586f * fRec5[0]))) + fSlow5);
			float fTemp2 = ((fConst1 * float((6271.926975707989f * (fTemp1 * fSlow4)))) + fRec4[1]);
			fRec4[0] = ((int((fTemp2 > 1.0f)))?(fTemp2 - 1.0f):fTemp2);
			float fTemp3 = (fRec4[0] - fRec4[1]);
			iRec3[0] = ((int((fTemp3 < 0)))?(1 - iRec3[1]):iRec3[1]);
			float fTemp4 = (fRec4[0] + iRec3[0]);
			fVec1[0] = fTemp4;
			float fTemp5 = (0.5f * fVec1[0]);
			float fTemp6 = (0.5f * fVec1[1]);
			float fTemp7 = (fTemp5 - fTemp6);
			iRec6[0] = ((int((fTemp7 < 0)))?(1 - iRec6[1]):iRec6[1]);
			float fTemp8 = (iRec6[0] + fTemp5);
			fVec2[0] = fTemp8;
			float fTemp9 = (0.5f * fVec2[0]);
			float fTemp10 = (0.5f * fVec2[1]);
			float fTemp11 = (fTemp9 - fTemp10);
			iRec7[0] = ((int((fTemp11 < 0)))?(1 - iRec7[1]):iRec7[1]);
			float fTemp12 = (iRec7[0] + fTemp9);
			fVec3[0] = fTemp12;
			float fTemp13 = (0.5f * fVec3[0]);
			float fTemp14 = (0.5f * fVec3[1]);
			float fTemp15 = (fTemp13 - fTemp14);
			iRec8[0] = ((int((fTemp15 < 0)))?(1 - iRec8[1]):iRec8[1]);
			float fTemp16 = (iRec8[0] + fTemp13);
			fVec4[0] = fTemp16;
			float fTemp17 = (0.5f * fVec4[0]);
			float fTemp18 = (0.5f * fVec4[1]);
			float fTemp19 = (fTemp17 - fTemp18);
			iRec9[0] = ((int((fTemp19 < 0)))?(1 - iRec9[1]):iRec9[1]);
			float fTemp20 = (iRec9[0] + fTemp17);
			fVec5[0] = fTemp20;
			float fTemp21 = (0.5f * fVec5[0]);
			float fTemp22 = (0.5f * fVec5[1]);
			float fTemp23 = ((1 + fTemp21) - fTemp22);
			float fTemp24 = (fTemp21 - fTemp22);
			fVec6[0] = square_wave(fTemp21);
			fRec2[0] = (fRec2[1] + (fConst2 * (square_polyblep_fast(fTemp21, fTemp22, (0.5f * fVec5[2]), ((int((fTemp23 > 1.0f)))?fTemp24:fTemp23), fVec6[1]) - fRec2[1])));
			fRec1[0] = (fConst4 * ((fRec2[0] - fRec2[1]) + fRec1[1]));
			fVec7[0] = fSlow8;
			float fTemp25 = (fSlow8 + (fVec7[3] + (fVec7[1] + fVec7[2])));
			float fTemp26 = ((fConst1 * float((6644.875161279122f * (fTemp1 * fSlow9)))) + fRec13[1]);
			fRec13[0] = ((int((fTemp26 > 1.0f)))?(fTemp26 - 1.0f):fTemp26);
			float fTemp27 = (fRec13[0] - fRec13[1]);
			iRec12[0] = ((int((fTemp27 < 0)))?(1 - iRec12[1]):iRec12[1]);
			float fTemp28 = (fRec13[0] + iRec12[0]);
			fVec8[0] = fTemp28;
			float fTemp29 = (0.5f * fVec8[0]);
			float fTemp30 = (0.5f * fVec8[1]);
			float fTemp31 = (fTemp29 - fTemp30);
			iRec14[0] = ((int((fTemp31 < 0)))?(1 - iRec14[1]):iRec14[1]);
			float fTemp32 = (iRec14[0] + fTemp29);
			fVec9[0] = fTemp32;
			float fTemp33 = (0.5f * fVec9[0]);
			float fTemp34 = (0.5f * fVec9[1]);
			float fTemp35 = (fTemp33 - fTemp34);
			iRec15[0] = ((int((fTemp35 < 0)))?(1 - iRec15[1]):iRec15[1]);
			float fTemp36 = (iRec15[0] + fTemp33);
			fVec10[0] = fTemp36;
			float fTemp37 = (0.5f * fVec10[0]);
			float fTemp38 = (0.5f * fVec10[1]);
			float fTemp39 = (fTemp37 - fTemp38);
			iRec16[0] = ((int((fTemp39 < 0)))?(1 - iRec16[1]):iRec16[1]);
			float fTemp40 = (iRec16[0] + fTemp37);
			fVec11[0] = fTemp40;
			float fTemp41 = (0.5f * fVec11[0]);
			float fTemp42 = (0.5f * fVec11[1]);
			float fTemp43 = (fTemp41 - fTemp42);
			iRec17[0] = ((int((fTemp43 < 0)))?(1 - iRec17[1]):iRec17[1]);
			float fTemp44 = (iRec17[0] + fTemp41);
			fVec12[0] = fTemp44;
			float fTemp45 = (0.5f * fVec12[0]);
			float fTemp46 = (0.5f * fVec12[1]);
			float fTemp47 = ((1 + fTemp45) - fTemp46);
			float fTemp48 = (fTemp45 - fTemp46);
			fVec13[0] = square_wave(fTemp45);
			fRec11[0] = (fRec11[1] + (fConst5 * (square_polyblep_fast(fTemp45, fTemp46, (0.5f * fVec12[2]), ((int((fTemp47 > 1.0f)))?fTemp48:fTemp47), fVec13[1]) - fRec11[1])));
			fRec10[0] = (fConst4 * ((fRec11[0] - fRec11[1]) + fRec10[1]));
			fVec14[0] = fSlow10;
			float fTemp49 = (fSlow10 + (fVec14[3] + (fVec14[1] + fVec14[2])));
			float fTemp50 = ((fConst1 * float((7.04e+03f * (fTemp1 * fSlow11)))) + fRec21[1]);
			fRec21[0] = ((int((fTemp50 > 1.0f)))?(fTemp50 - 1.0f):fTemp50);
			float fTemp51 = (fRec21[0] - fRec21[1]);
			iRec20[0] = ((int((fTemp51 < 0)))?(1 - iRec20[1]):iRec20[1]);
			float fTemp52 = (fRec21[0] + iRec20[0]);
			fVec15[0] = fTemp52;
			float fTemp53 = (0.5f * fVec15[0]);
			float fTemp54 = (0.5f * fVec15[1]);
			float fTemp55 = (fTemp53 - fTemp54);
			iRec22[0] = ((int((fTemp55 < 0)))?(1 - iRec22[1]):iRec22[1]);
			float fTemp56 = (iRec22[0] + fTemp53);
			fVec16[0] = fTemp56;
			float fTemp57 = (0.5f * fVec16[0]);
			float fTemp58 = (0.5f * fVec16[1]);
			float fTemp59 = (fTemp57 - fTemp58);
			iRec23[0] = ((int((fTemp59 < 0)))?(1 - iRec23[1]):iRec23[1]);
			float fTemp60 = (iRec23[0] + fTemp57);
			fVec17[0] = fTemp60;
			float fTemp61 = (0.5f * fVec17[0]);
			float fTemp62 = (0.5f * fVec17[1]);
			float fTemp63 = (fTemp61 - fTemp62);
			iRec24[0] = ((int((fTemp63 < 0)))?(1 - iRec24[1]):iRec24[1]);
			float fTemp64 = (iRec24[0] + fTemp61);
			fVec18[0] = fTemp64;
			float fTemp65 = (0.5f * fVec18[0]);
			float fTemp66 = (0.5f * fVec18[1]);
			float fTemp67 = (fTemp65 - fTemp66);
			iRec25[0] = ((int((fTemp67 < 0)))?(1 - iRec25[1]):iRec25[1]);
			float fTemp68 = (iRec25[0] + fTemp65);
			fVec19[0] = fTemp68;
			float fTemp69 = (0.5f * fVec19[0]);
			float fTemp70 = (0.5f * fVec19[1]);
			float fTemp71 = ((1 + fTemp69) - fTemp70);
			float fTemp72 = (fTemp69 - fTemp70);
			fVec20[0] = square_wave(fTemp69);
			fRec19[0] = (fRec19[1] + (fConst5 * (square_polyblep_fast(fTemp69, fTemp70, (0.5f * fVec19[2]), ((int((fTemp71 > 1.0f)))?fTemp72:fTemp71), fVec20[1]) - fRec19[1])));
			fRec18[0] = (fConst4 * ((fRec19[0] - fRec19[1]) + fRec18[1]));
			fVec21[0] = fSlow12;
			float fTemp73 = (fSlow12 + (fVec21[3] + (fVec21[1] + fVec21[2])));
			float fTemp74 = ((fConst1 * float((7458.620184289437f * (fTemp1 * fSlow13)))) + fRec29[1]);
			fRec29[0] = ((int((fTemp74 > 1.0f)))?(fTemp74 - 1.0f):fTemp74);
			float fTemp75 = (fRec29[0] - fRec29[1]);
			iRec28[0] = ((int((fTemp75 < 0)))?(1 - iRec28[1]):iRec28[1]);
			float fTemp76 = (fRec29[0] + iRec28[0]);
			fVec22[0] = fTemp76;
			float fTemp77 = (0.5f * fVec22[0]);
			float fTemp78 = (0.5f * fVec22[1]);
			float fTemp79 = (fTemp77 - fTemp78);
			iRec30[0] = ((int((fTemp79 < 0)))?(1 - iRec30[1]):iRec30[1]);
			float fTemp80 = (iRec30[0] + fTemp77);
			fVec23[0] = fTemp80;
			float fTemp81 = (0.5f * fVec23[0]);
			float fTemp82 = (0.5f * fVec23[1]);
			float fTemp83 = (fTemp81 - fTemp82);
			iRec31[0] = ((int((fTemp83 < 0)))?(1 - iRec31[1]):iRec31[1]);
			float fTemp84 = (iRec31[0] + fTemp81);
			fVec24[0] = fTemp84;
			float fTemp85 = (0.5f * fVec24[0]);
			float fTemp86 = (0.5f * fVec24[1]);
			float fTemp87 = (fTemp85 - fTemp86);
			iRec32[0] = ((int((fTemp87 < 0)))?(1 - iRec32[1]):iRec32[1]);
			float fTemp88 = (iRec32[0] + fTemp85);
			fVec25[0] = fTemp88;
			float fTemp89 = (0.5f * fVec25[0]);
			float fTemp90 = (0.5f * fVec25[1]);
			float fTemp91 = (fTemp89 - fTemp90);
			iRec33[0] = ((int((fTemp91 < 0)))?(1 - iRec33[1]):iRec33[1]);
			float fTemp92 = (iRec33[0] + fTemp89);
			fVec26[0] = fTemp92;
			float fTemp93 = (0.5f * fVec26[0]);
			float fTemp94 = (0.5f * fVec26[1]);
			float fTemp95 = ((1 + fTemp93) - fTemp94);
			float fTemp96 = (fTemp93 - fTemp94);
			fVec27[0] = square_wave(fTemp93);
			fRec27[0] = (fRec27[1] + (fConst5 * (square_polyblep_fast(fTemp93, fTemp94, (0.5f * fVec26[2]), ((int((fTemp95 > 1.0f)))?fTemp96:fTemp95), fVec27[1]) - fRec27[1])));
			fRec26[0] = (fConst4 * ((fRec27[0] - fRec27[1]) + fRec26[1]));
			fVec28[0] = fSlow14;
			float fTemp97 = (fSlow14 + (fVec28[3] + (fVec28[1] + fVec28[2])));
			float fTemp98 = ((fConst1 * float((7902.132820097988f * (fTemp1 * fSlow15)))) + fRec37[1]);
			fRec37[0] = ((int((fTemp98 > 1.0f)))?(fTemp98 - 1.0f):fTemp98);
			float fTemp99 = (fRec37[0] - fRec37[1]);
			iRec36[0] = ((int((fTemp99 < 0)))?(1 - iRec36[1]):iRec36[1]);
			float fTemp100 = (fRec37[0] + iRec36[0]);
			fVec29[0] = fTemp100;
			float fTemp101 = (0.5f * fVec29[0]);
			float fTemp102 = (0.5f * fVec29[1]);
			float fTemp103 = (fTemp101 - fTemp102);
			iRec38[0] = ((int((fTemp103 < 0)))?(1 - iRec38[1]):iRec38[1]);
			float fTemp104 = (iRec38[0] + fTemp101);
			fVec30[0] = fTemp104;
			float fTemp105 = (0.5f * fVec30[0]);
			float fTemp106 = (0.5f * fVec30[1]);
			float fTemp107 = (fTemp105 - fTemp106);
			iRec39[0] = ((int((fTemp107 < 0)))?(1 - iRec39[1]):iRec39[1]);
			float fTemp108 = (iRec39[0] + fTemp105);
			fVec31[0] = fTemp108;
			float fTemp109 = (0.5f * fVec31[0]);
			float fTemp110 = (0.5f * fVec31[1]);
			float fTemp111 = (fTemp109 - fTemp110);
			iRec40[0] = ((int((fTemp111 < 0)))?(1 - iRec40[1]):iRec40[1]);
			float fTemp112 = (iRec40[0] + fTemp109);
			fVec32[0] = fTemp112;
			float fTemp113 = (0.5f * fVec32[0]);
			float fTemp114 = (0.5f * fVec32[1]);
			float fTemp115 = (fTemp113 - fTemp114);
			iRec41[0] = ((int((fTemp115 < 0)))?(1 - iRec41[1]):iRec41[1]);
			float fTemp116 = (iRec41[0] + fTemp113);
			fVec33[0] = fTemp116;
			float fTemp117 = (0.5f * fVec33[0]);
			float fTemp118 = (0.5f * fVec33[1]);
			float fTemp119 = ((1 + fTemp117) - fTemp118);
			float fTemp120 = (fTemp117 - fTemp118);
			fVec34[0] = square_wave(fTemp117);
			fRec35[0] = (fRec35[1] + (fConst5 * (square_polyblep_fast(fTemp117, fTemp118, (0.5f * fVec33[2]), ((int((fTemp119 > 1.0f)))?fTemp120:fTemp119), fVec34[1]) - fRec35[1])));
			fRec34[0] = (fConst4 * ((fRec35[0] - fRec35[1]) + fRec34[1]));
			fVec35[0] = fSlow16;
			float fTemp121 = (fSlow16 + (fVec35[3] + (fVec35[1] + fVec35[2])));
			float fTemp122 = ((fConst1 * float((4186.009044809578f * (fTemp1 * fSlow17)))) + fRec45[1]);
			fRec45[0] = ((int((fTemp122 > 1.0f)))?(fTemp122 - 1.0f):fTemp122);
			float fTemp123 = (fRec45[0] - fRec45[1]);
			iRec44[0] = ((int((fTemp123 < 0)))?(1 - iRec44[1]):iRec44[1]);
			float fTemp124 = (fRec45[0] + iRec44[0]);
			fVec36[0] = fTemp124;
			float fTemp125 = (0.5f * fVec36[0]);
			float fTemp126 = (0.5f * fVec36[1]);
			float fTemp127 = (fTemp125 - fTemp126);
			iRec46[0] = ((int((fTemp127 < 0)))?(1 - iRec46[1]):iRec46[1]);
			float fTemp128 = (iRec46[0] + fTemp125);
			fVec37[0] = fTemp128;
			float fTemp129 = (0.5f * fVec37[0]);
			float fTemp130 = (0.5f * fVec37[1]);
			float fTemp131 = (fTemp129 - fTemp130);
			iRec47[0] = ((int((fTemp131 < 0)))?(1 - iRec47[1]):iRec47[1]);
			float fTemp132 = (iRec47[0] + fTemp129);
			fVec38[0] = fTemp132;
			float fTemp133 = (0.5f * fVec38[0]);
			float fTemp134 = (0.5f * fVec38[1]);
			float fTemp135 = (fTemp133 - fTemp134);
			iRec48[0] = ((int((fTemp135 < 0)))?(1 - iRec48[1]):iRec48[1]);
			float fTemp136 = (iRec48[0] + fTemp133);
			fVec39[0] = fTemp136;
			float fTemp137 = (0.5f * fVec39[0]);
			float fTemp138 = (0.5f * fVec39[1]);
			float fTemp139 = ((1 + fTemp137) - fTemp138);
			float fTemp140 = (fTemp137 - fTemp138);
			fVec40[0] = square_wave(fTemp137);
			fRec43[0] = (fRec43[1] + (fConst6 * (square_polyblep_fast(fTemp137, fTemp138, (0.5f * fVec39[2]), ((int((fTemp139 > 1.0f)))?fTemp140:fTemp139), fVec40[1]) - fRec43[1])));
			fRec42[0] = (fConst7 * ((fRec43[0] - fRec43[1]) + fRec42[1]));
			fVec41[0] = fSlow18;
			float fTemp141 = (fSlow18 + (fVec41[3] + (fVec41[1] + fVec41[2])));
			float fTemp142 = ((fConst1 * float((4434.922095629953f * (fTemp1 * fSlow19)))) + fRec52[1]);
			fRec52[0] = ((int((fTemp142 > 1.0f)))?(fTemp142 - 1.0f):fTemp142);
			float fTemp143 = (fRec52[0] - fRec52[1]);
			iRec51[0] = ((int((fTemp143 < 0)))?(1 - iRec51[1]):iRec51[1]);
			float fTemp144 = (fRec52[0] + iRec51[0]);
			fVec42[0] = fTemp144;
			float fTemp145 = (0.5f * fVec42[0]);
			float fTemp146 = (0.5f * fVec42[1]);
			float fTemp147 = (fTemp145 - fTemp146);
			iRec53[0] = ((int((fTemp147 < 0)))?(1 - iRec53[1]):iRec53[1]);
			float fTemp148 = (iRec53[0] + fTemp145);
			fVec43[0] = fTemp148;
			float fTemp149 = (0.5f * fVec43[0]);
			float fTemp150 = (0.5f * fVec43[1]);
			float fTemp151 = (fTemp149 - fTemp150);
			iRec54[0] = ((int((fTemp151 < 0)))?(1 - iRec54[1]):iRec54[1]);
			float fTemp152 = (iRec54[0] + fTemp149);
			fVec44[0] = fTemp152;
			float fTemp153 = (0.5f * fVec44[0]);
			float fTemp154 = (0.5f * fVec44[1]);
			float fTemp155 = (fTemp153 - fTemp154);
			iRec55[0] = ((int((fTemp155 < 0)))?(1 - iRec55[1]):iRec55[1]);
			float fTemp156 = (iRec55[0] + fTemp153);
			fVec45[0] = fTemp156;
			float fTemp157 = (0.5f * fVec45[0]);
			float fTemp158 = (0.5f * fVec45[1]);
			float fTemp159 = ((1 + fTemp157) - fTemp158);
			float fTemp160 = (fTemp157 - fTemp158);
			fVec46[0] = square_wave(fTemp157);
			fRec50[0] = (fRec50[1] + (fConst6 * (square_polyblep_fast(fTemp157, fTemp158, (0.5f * fVec45[2]), ((int((fTemp159 > 1.0f)))?fTemp160:fTemp159), fVec46[1]) - fRec50[1])));
			fRec49[0] = (fConst7 * ((fRec50[0] - fRec50[1]) + fRec49[1]));
			fVec47[0] = fSlow20;
			float fTemp161 = (fSlow20 + (fVec47[3] + (fVec47[1] + fVec47[2])));
			float fTemp162 = ((fConst1 * float((4698.63628667852f * (fTemp1 * fSlow21)))) + fRec59[1]);
			fRec59[0] = ((int((fTemp162 > 1.0f)))?(fTemp162 - 1.0f):fTemp162);
			float fTemp163 = (fRec59[0] - fRec59[1]);
			iRec58[0] = ((int((fTemp163 < 0)))?(1 - iRec58[1]):iRec58[1]);
			float fTemp164 = (fRec59[0] + iRec58[0]);
			fVec48[0] = fTemp164;
			float fTemp165 = (0.5f * fVec48[0]);
			float fTemp166 = (0.5f * fVec48[1]);
			float fTemp167 = (fTemp165 - fTemp166);
			iRec60[0] = ((int((fTemp167 < 0)))?(1 - iRec60[1]):iRec60[1]);
			float fTemp168 = (iRec60[0] + fTemp165);
			fVec49[0] = fTemp168;
			float fTemp169 = (0.5f * fVec49[0]);
			float fTemp170 = (0.5f * fVec49[1]);
			float fTemp171 = (fTemp169 - fTemp170);
			iRec61[0] = ((int((fTemp171 < 0)))?(1 - iRec61[1]):iRec61[1]);
			float fTemp172 = (iRec61[0] + fTemp169);
			fVec50[0] = fTemp172;
			float fTemp173 = (0.5f * fVec50[0]);
			float fTemp174 = (0.5f * fVec50[1]);
			float fTemp175 = (fTemp173 - fTemp174);
			iRec62[0] = ((int((fTemp175 < 0)))?(1 - iRec62[1]):iRec62[1]);
			float fTemp176 = (iRec62[0] + fTemp173);
			fVec51[0] = fTemp176;
			float fTemp177 = (0.5f * fVec51[0]);
			float fTemp178 = (0.5f * fVec51[1]);
			float fTemp179 = ((1 + fTemp177) - fTemp178);
			float fTemp180 = (fTemp177 - fTemp178);
			fVec52[0] = square_wave(fTemp177);
			fRec57[0] = (fRec57[1] + (fConst6 * (square_polyblep_fast(fTemp177, fTemp178, (0.5f * fVec51[2]), ((int((fTemp179 > 1.0f)))?fTemp180:fTemp179), fVec52[1]) - fRec57[1])));
			fRec56[0] = (fConst7 * ((fRec57[0] - fRec57[1]) + fRec56[1]));
			fVec53[0] = fSlow22;
			float fTemp181 = (fSlow22 + (fVec53[3] + (fVec53[1] + fVec53[2])));
			float fTemp182 = ((fConst1 * float((4978.031739553295f * (fTemp1 * fSlow23)))) + fRec66[1]);
			fRec66[0] = ((int((fTemp182 > 1.0f)))?(fTemp182 - 1.0f):fTemp182);
			float fTemp183 = (fRec66[0] - fRec66[1]);
			iRec65[0] = ((int((fTemp183 < 0)))?(1 - iRec65[1]):iRec65[1]);
			float fTemp184 = (fRec66[0] + iRec65[0]);
			fVec54[0] = fTemp184;
			float fTemp185 = (0.5f * fVec54[0]);
			float fTemp186 = (0.5f * fVec54[1]);
			float fTemp187 = (fTemp185 - fTemp186);
			iRec67[0] = ((int((fTemp187 < 0)))?(1 - iRec67[1]):iRec67[1]);
			float fTemp188 = (iRec67[0] + fTemp185);
			fVec55[0] = fTemp188;
			float fTemp189 = (0.5f * fVec55[0]);
			float fTemp190 = (0.5f * fVec55[1]);
			float fTemp191 = (fTemp189 - fTemp190);
			iRec68[0] = ((int((fTemp191 < 0)))?(1 - iRec68[1]):iRec68[1]);
			float fTemp192 = (iRec68[0] + fTemp189);
			fVec56[0] = fTemp192;
			float fTemp193 = (0.5f * fVec56[0]);
			float fTemp194 = (0.5f * fVec56[1]);
			float fTemp195 = (fTemp193 - fTemp194);
			iRec69[0] = ((int((fTemp195 < 0)))?(1 - iRec69[1]):iRec69[1]);
			float fTemp196 = (iRec69[0] + fTemp193);
			fVec57[0] = fTemp196;
			float fTemp197 = (0.5f * fVec57[0]);
			float fTemp198 = (0.5f * fVec57[1]);
			float fTemp199 = ((1 + fTemp197) - fTemp198);
			float fTemp200 = (fTemp197 - fTemp198);
			fVec58[0] = square_wave(fTemp197);
			fRec64[0] = (fRec64[1] + (fConst6 * (square_polyblep_fast(fTemp197, fTemp198, (0.5f * fVec57[2]), ((int((fTemp199 > 1.0f)))?fTemp200:fTemp199), fVec58[1]) - fRec64[1])));
			fRec63[0] = (fConst7 * ((fRec64[0] - fRec64[1]) + fRec63[1]));
			fVec59[0] = fSlow24;
			float fTemp201 = (fSlow24 + (fVec59[3] + (fVec59[1] + fVec59[2])));
			float fTemp202 = ((fConst1 * float((5274.04091060592f * (fSlow25 * fTemp1)))) + fRec73[1]);
			fRec73[0] = ((int((fTemp202 > 1.0f)))?(fTemp202 - 1.0f):fTemp202);
			float fTemp203 = (fRec73[0] - fRec73[1]);
			iRec72[0] = ((int((fTemp203 < 0)))?(1 - iRec72[1]):iRec72[1]);
			float fTemp204 = (fRec73[0] + iRec72[0]);
			fVec60[0] = fTemp204;
			float fTemp205 = (0.5f * fVec60[0]);
			float fTemp206 = (0.5f * fVec60[1]);
			float fTemp207 = (fTemp205 - fTemp206);
			iRec74[0] = ((int((fTemp207 < 0)))?(1 - iRec74[1]):iRec74[1]);
			float fTemp208 = (iRec74[0] + fTemp205);
			fVec61[0] = fTemp208;
			float fTemp209 = (0.5f * fVec61[0]);
			float fTemp210 = (0.5f * fVec61[1]);
			float fTemp211 = (fTemp209 - fTemp210);
			iRec75[0] = ((int((fTemp211 < 0)))?(1 - iRec75[1]):iRec75[1]);
			float fTemp212 = (iRec75[0] + fTemp209);
			fVec62[0] = fTemp212;
			float fTemp213 = (0.5f * fVec62[0]);
			float fTemp214 = (0.5f * fVec62[1]);
			float fTemp215 = (fTemp213 - fTemp214);
			iRec76[0] = ((int((fTemp215 < 0)))?(1 - iRec76[1]):iRec76[1]);
			float fTemp216 = (iRec76[0] + fTemp213);
			fVec63[0] = fTemp216;
			float fTemp217 = (0.5f * fVec63[0]);
			float fTemp218 = (0.5f * fVec63[1]);
			float fTemp219 = ((1 + fTemp217) - fTemp218);
			float fTemp220 = (fTemp217 - fTemp218);
			fVec64[0] = square_wave(fTemp217);
			fRec71[0] = (fRec71[1] + (fConst8 * (square_polyblep_fast(fTemp217, fTemp218, (0.5f * fVec63[2]), ((int((fTemp219 > 1.0f)))?fTemp220:fTemp219), fVec64[1]) - fRec71[1])));
			fRec70[0] = (fConst7 * ((fRec71[0] - fRec71[1]) + fRec70[1]));
			fVec65[0] = fSlow26;
			float fTemp221 = (fSlow26 + (fVec65[3] + (fVec65[1] + fVec65[2])));
			float fTemp222 = ((fConst1 * float((5587.651702928062f * (fTemp1 * fSlow27)))) + fRec80[1]);
			fRec80[0] = ((int((fTemp222 > 1.0f)))?(fTemp222 - 1.0f):fTemp222);
			float fTemp223 = (fRec80[0] - fRec80[1]);
			iRec79[0] = ((int((fTemp223 < 0)))?(1 - iRec79[1]):iRec79[1]);
			float fTemp224 = (fRec80[0] + iRec79[0]);
			fVec66[0] = fTemp224;
			float fTemp225 = (0.5f * fVec66[0]);
			float fTemp226 = (0.5f * fVec66[1]);
			float fTemp227 = (fTemp225 - fTemp226);
			iRec81[0] = ((int((fTemp227 < 0)))?(1 - iRec81[1]):iRec81[1]);
			float fTemp228 = (iRec81[0] + fTemp225);
			fVec67[0] = fTemp228;
			float fTemp229 = (0.5f * fVec67[0]);
			float fTemp230 = (0.5f * fVec67[1]);
			float fTemp231 = (fTemp229 - fTemp230);
			iRec82[0] = ((int((fTemp231 < 0)))?(1 - iRec82[1]):iRec82[1]);
			float fTemp232 = (iRec82[0] + fTemp229);
			fVec68[0] = fTemp232;
			float fTemp233 = (0.5f * fVec68[0]);
			float fTemp234 = (0.5f * fVec68[1]);
			float fTemp235 = (fTemp233 - fTemp234);
			iRec83[0] = ((int((fTemp235 < 0)))?(1 - iRec83[1]):iRec83[1]);
			float fTemp236 = (iRec83[0] + fTemp233);
			fVec69[0] = fTemp236;
			float fTemp237 = (0.5f * fVec69[0]);
			float fTemp238 = (0.5f * fVec69[1]);
			float fTemp239 = ((1 + fTemp237) - fTemp238);
			float fTemp240 = (fTemp237 - fTemp238);
			fVec70[0] = square_wave(fTemp237);
			fRec78[0] = (fRec78[1] + (fConst8 * (square_polyblep_fast(fTemp237, fTemp238, (0.5f * fVec69[2]), ((int((fTemp239 > 1.0f)))?fTemp240:fTemp239), fVec70[1]) - fRec78[1])));
			fRec77[0] = (fConst7 * ((fRec78[0] - fRec78[1]) + fRec77[1]));
			fVec71[0] = fSlow28;
			float fTemp241 = (fSlow28 + (fVec71[3] + (fVec71[1] + fVec71[2])));
			float fTemp242 = ((fConst1 * float((5919.91076338615f * (fTemp1 * fSlow29)))) + fRec87[1]);
			fRec87[0] = ((int((fTemp242 > 1.0f)))?(fTemp242 - 1.0f):fTemp242);
			float fTemp243 = (fRec87[0] - fRec87[1]);
			iRec86[0] = ((int((fTemp243 < 0)))?(1 - iRec86[1]):iRec86[1]);
			float fTemp244 = (fRec87[0] + iRec86[0]);
			fVec72[0] = fTemp244;
			float fTemp245 = (0.5f * fVec72[0]);
			float fTemp246 = (0.5f * fVec72[1]);
			float fTemp247 = (fTemp245 - fTemp246);
			iRec88[0] = ((int((fTemp247 < 0)))?(1 - iRec88[1]):iRec88[1]);
			float fTemp248 = (iRec88[0] + fTemp245);
			fVec73[0] = fTemp248;
			float fTemp249 = (0.5f * fVec73[0]);
			float fTemp250 = (0.5f * fVec73[1]);
			float fTemp251 = (fTemp249 - fTemp250);
			iRec89[0] = ((int((fTemp251 < 0)))?(1 - iRec89[1]):iRec89[1]);
			float fTemp252 = (iRec89[0] + fTemp249);
			fVec74[0] = fTemp252;
			float fTemp253 = (0.5f * fVec74[0]);
			float fTemp254 = (0.5f * fVec74[1]);
			float fTemp255 = (fTemp253 - fTemp254);
			iRec90[0] = ((int((fTemp255 < 0)))?(1 - iRec90[1]):iRec90[1]);
			float fTemp256 = (iRec90[0] + fTemp253);
			fVec75[0] = fTemp256;
			float fTemp257 = (0.5f * fVec75[0]);
			float fTemp258 = (0.5f * fVec75[1]);
			float fTemp259 = ((1 + fTemp257) - fTemp258);
			float fTemp260 = (fTemp257 - fTemp258);
			fVec76[0] = square_wave(fTemp257);
			fRec85[0] = (fRec85[1] + (fConst8 * (square_polyblep_fast(fTemp257, fTemp258, (0.5f * fVec75[2]), ((int((fTemp259 > 1.0f)))?fTemp260:fTemp259), fVec76[1]) - fRec85[1])));
			fRec84[0] = (fConst7 * ((fRec85[0] - fRec85[1]) + fRec84[1]));
			fVec77[0] = fSlow30;
			float fTemp261 = (fSlow30 + (fVec77[3] + (fVec77[1] + fVec77[2])));
			float fTemp262 = ((1 + fTemp17) - fTemp18);
			fVec78[0] = square_wave(fTemp17);
			fRec92[0] = (fRec92[1] + (fConst8 * (square_polyblep_fast(fTemp17, fTemp18, (0.5f * fVec4[2]), ((int((fTemp262 > 1.0f)))?fTemp19:fTemp262), fVec78[1]) - fRec92[1])));
			fRec91[0] = (fConst7 * ((fRec92[0] - fRec92[1]) + fRec91[1]));
			fVec79[0] = fSlow31;
			float fTemp263 = (fSlow31 + (fVec79[3] + (fVec79[1] + fVec79[2])));
			float fTemp264 = ((1 + fTemp41) - fTemp42);
			fVec80[0] = square_wave(fTemp41);
			fRec94[0] = (fRec94[1] + (fConst9 * (square_polyblep_fast(fTemp41, fTemp42, (0.5f * fVec11[2]), ((int((fTemp264 > 1.0f)))?fTemp43:fTemp264), fVec80[1]) - fRec94[1])));
			fRec93[0] = (fConst7 * ((fRec94[0] - fRec94[1]) + fRec93[1]));
			fVec81[0] = fSlow32;
			float fTemp265 = (fSlow32 + (fVec81[3] + (fVec81[1] + fVec81[2])));
			float fTemp266 = ((1 + fTemp65) - fTemp66);
			fVec82[0] = square_wave(fTemp65);
			fRec96[0] = (fRec96[1] + (fConst9 * (square_polyblep_fast(fTemp65, fTemp66, (0.5f * fVec18[2]), ((int((fTemp266 > 1.0f)))?fTemp67:fTemp266), fVec82[1]) - fRec96[1])));
			fRec95[0] = (fConst7 * ((fRec96[0] - fRec96[1]) + fRec95[1]));
			fVec83[0] = fSlow33;
			float fTemp267 = (fSlow33 + (fVec83[3] + (fVec83[1] + fVec83[2])));
			float fTemp268 = ((1 + fTemp89) - fTemp90);
			fVec84[0] = square_wave(fTemp89);
			fRec98[0] = (fRec98[1] + (fConst9 * (square_polyblep_fast(fTemp89, fTemp90, (0.5f * fVec25[2]), ((int((fTemp268 > 1.0f)))?fTemp91:fTemp268), fVec84[1]) - fRec98[1])));
			fRec97[0] = (fConst7 * ((fRec98[0] - fRec98[1]) + fRec97[1]));
			fVec85[0] = fSlow34;
			float fTemp269 = (fSlow34 + (fVec85[3] + (fVec85[1] + fVec85[2])));
			float fTemp270 = ((1 + fTemp113) - fTemp114);
			fVec86[0] = square_wave(fTemp113);
			fRec100[0] = (fRec100[1] + (fConst9 * (square_polyblep_fast(fTemp113, fTemp114, (0.5f * fVec32[2]), ((int((fTemp270 > 1.0f)))?fTemp115:fTemp270), fVec86[1]) - fRec100[1])));
			fRec99[0] = (fConst7 * ((fRec100[0] - fRec100[1]) + fRec99[1]));
			fVec87[0] = fSlow37;
			float fTemp271 = (fSlow37 + (fVec87[3] + (fVec87[1] + fVec87[2])));
			float fTemp272 = ((1 + fTemp133) - fTemp134);
			fVec88[0] = square_wave(fTemp133);
			fRec102[0] = (fRec102[1] + (fConst10 * (square_polyblep_fast(fTemp133, fTemp134, (0.5f * fVec38[2]), ((int((fTemp272 > 1.0f)))?fTemp135:fTemp272), fVec88[1]) - fRec102[1])));
			fRec101[0] = (fConst7 * ((fRec102[0] - fRec102[1]) + fRec101[1]));
			fVec89[0] = fSlow38;
			float fTemp273 = (fSlow38 + (fVec89[3] + (fVec89[1] + fVec89[2])));
			float fTemp274 = ((1 + fTemp153) - fTemp154);
			fVec90[0] = square_wave(fTemp153);
			fRec104[0] = (fRec104[1] + (fConst10 * (square_polyblep_fast(fTemp153, fTemp154, (0.5f * fVec44[2]), ((int((fTemp274 > 1.0f)))?fTemp155:fTemp274), fVec90[1]) - fRec104[1])));
			fRec103[0] = (fConst7 * ((fRec104[0] - fRec104[1]) + fRec103[1]));
			fVec91[0] = fSlow39;
			float fTemp275 = (fSlow39 + (fVec91[3] + (fVec91[1] + fVec91[2])));
			float fTemp276 = ((1 + fTemp173) - fTemp174);
			fVec92[0] = square_wave(fTemp173);
			fRec106[0] = (fRec106[1] + (fConst10 * (square_polyblep_fast(fTemp173, fTemp174, (0.5f * fVec50[2]), ((int((fTemp276 > 1.0f)))?fTemp175:fTemp276), fVec92[1]) - fRec106[1])));
			fRec105[0] = (fConst7 * ((fRec106[0] - fRec106[1]) + fRec105[1]));
			fVec93[0] = fSlow40;
			float fTemp277 = (fSlow40 + (fVec93[3] + (fVec93[1] + fVec93[2])));
			float fTemp278 = ((1 + fTemp193) - fTemp194);
			fVec94[0] = square_wave(fTemp193);
			fRec108[0] = (fRec108[1] + (fConst10 * (square_polyblep_fast(fTemp193, fTemp194, (0.5f * fVec56[2]), ((int((fTemp278 > 1.0f)))?fTemp195:fTemp278), fVec94[1]) - fRec108[1])));
			fRec107[0] = (fConst7 * ((fRec108[0] - fRec108[1]) + fRec107[1]));
			fVec95[0] = fSlow41;
			float fTemp279 = (fSlow41 + (fVec95[3] + (fVec95[1] + fVec95[2])));
			float fTemp280 = ((1 + fTemp213) - fTemp214);
			fVec96[0] = square_wave(fTemp213);
			fRec110[0] = (fRec110[1] + (fConst11 * (square_polyblep_fast(fTemp213, fTemp214, (0.5f * fVec62[2]), ((int((fTemp280 > 1.0f)))?fTemp215:fTemp280), fVec96[1]) - fRec110[1])));
			fRec109[0] = (fConst7 * ((fRec110[0] - fRec110[1]) + fRec109[1]));
			fVec97[0] = fSlow42;
			float fTemp281 = (fSlow42 + (fVec97[3] + (fVec97[1] + fVec97[2])));
			float fTemp282 = ((1 + fTemp233) - fTemp234);
			fVec98[0] = square_wave(fTemp233);
			fRec112[0] = (fRec112[1] + (fConst11 * (square_polyblep_fast(fTemp233, fTemp234, (0.5f * fVec68[2]), ((int((fTemp282 > 1.0f)))?fTemp235:fTemp282), fVec98[1]) - fRec112[1])));
			fRec111[0] = (fConst7 * ((fRec112[0] - fRec112[1]) + fRec111[1]));
			fVec99[0] = fSlow43;
			float fTemp283 = (fSlow43 + (fVec99[3] + (fVec99[1] + fVec99[2])));
			float fTemp284 = ((1 + fTemp253) - fTemp254);
			fVec100[0] = square_wave(fTemp253);
			fRec114[0] = (fRec114[1] + (fConst11 * (square_polyblep_fast(fTemp253, fTemp254, (0.5f * fVec74[2]), ((int((fTemp284 > 1.0f)))?fTemp255:fTemp284), fVec100[1]) - fRec114[1])));
			fRec113[0] = (fConst7 * ((fRec114[0] - fRec114[1]) + fRec113[1]));
			fVec101[0] = fSlow44;
			float fTemp285 = (fSlow44 + (fVec101[3] + (fVec101[1] + fVec101[2])));
			float fTemp286 = ((1 + fTemp13) - fTemp14);
			fVec102[0] = square_wave(fTemp13);
			fRec116[0] = (fRec116[1] + (fConst11 * (square_polyblep_fast(fTemp13, fTemp14, (0.5f * fVec3[2]), ((int((fTemp286 > 1.0f)))?fTemp15:fTemp286), fVec102[1]) - fRec116[1])));
			fRec115[0] = (fConst7 * ((fRec116[0] - fRec116[1]) + fRec115[1]));
			fVec103[0] = fSlow45;
			float fTemp287 = (fSlow45 + (fVec103[3] + (fVec103[1] + fVec103[2])));
			float fTemp288 = ((1 + fTemp37) - fTemp38);
			fVec104[0] = square_wave(fTemp37);
			fRec118[0] = (fRec118[1] + (fConst12 * (square_polyblep_fast(fTemp37, fTemp38, (0.5f * fVec10[2]), ((int((fTemp288 > 1.0f)))?fTemp39:fTemp288), fVec104[1]) - fRec118[1])));
			fRec117[0] = (fConst7 * ((fRec118[0] - fRec118[1]) + fRec117[1]));
			fVec105[0] = fSlow46;
			float fTemp289 = (fSlow46 + (fVec105[3] + (fVec105[1] + fVec105[2])));
			float fTemp290 = ((1 + fTemp61) - fTemp62);
			fVec106[0] = square_wave(fTemp61);
			fRec120[0] = (fRec120[1] + (fConst12 * (square_polyblep_fast(fTemp61, fTemp62, (0.5f * fVec17[2]), ((int((fTemp290 > 1.0f)))?fTemp63:fTemp290), fVec106[1]) - fRec120[1])));
			fRec119[0] = (fConst7 * ((fRec120[0] - fRec120[1]) + fRec119[1]));
			fVec107[0] = fSlow47;
			float fTemp291 = (fSlow47 + (fVec107[3] + (fVec107[1] + fVec107[2])));
			float fTemp292 = ((1 + fTemp85) - fTemp86);
			fVec108[0] = square_wave(fTemp85);
			fRec122[0] = (fRec122[1] + (fConst12 * (square_polyblep_fast(fTemp85, fTemp86, (0.5f * fVec24[2]), ((int((fTemp292 > 1.0f)))?fTemp87:fTemp292), fVec108[1]) - fRec122[1])));
			fRec121[0] = (fConst7 * ((fRec122[0] - fRec122[1]) + fRec121[1]));
			fVec109[0] = fSlow48;
			float fTemp293 = (fSlow48 + (fVec109[3] + (fVec109[1] + fVec109[2])));
			float fTemp294 = ((1 + fTemp109) - fTemp110);
			fVec110[0] = square_wave(fTemp109);
			fRec124[0] = (fRec124[1] + (fConst12 * (square_polyblep_fast(fTemp109, fTemp110, (0.5f * fVec31[2]), ((int((fTemp294 > 1.0f)))?fTemp111:fTemp294), fVec110[1]) - fRec124[1])));
			fRec123[0] = (fConst7 * ((fRec124[0] - fRec124[1]) + fRec123[1]));
			fVec111[0] = fSlow49;
			float fTemp295 = (fSlow49 + (fVec111[3] + (fVec111[1] + fVec111[2])));
			float fTemp296 = ((1 + fTemp129) - fTemp130);
			fVec112[0] = square_wave(fTemp129);
			fRec126[0] = (fRec126[1] + (fConst13 * (square_polyblep_fast(fTemp129, fTemp130, (0.5f * fVec37[2]), ((int((fTemp296 > 1.0f)))?fTemp131:fTemp296), fVec112[1]) - fRec126[1])));
			fRec125[0] = (fConst7 * ((fRec126[0] - fRec126[1]) + fRec125[1]));
			fVec113[0] = fSlow50;
			float fTemp297 = (fSlow50 + (fVec113[3] + (fVec113[1] + fVec113[2])));
			float fTemp298 = ((1 + fTemp149) - fTemp150);
			fVec114[0] = square_wave(fTemp149);
			fRec128[0] = (fRec128[1] + (fConst13 * (square_polyblep_fast(fTemp149, fTemp150, (0.5f * fVec43[2]), ((int((fTemp298 > 1.0f)))?fTemp151:fTemp298), fVec114[1]) - fRec128[1])));
			fRec127[0] = (fConst7 * ((fRec128[0] - fRec128[1]) + fRec127[1]));
			fVec115[0] = fSlow51;
			float fTemp299 = (fSlow51 + (fVec115[3] + (fVec115[1] + fVec115[2])));
			float fTemp300 = ((1 + fTemp169) - fTemp170);
			fVec116[0] = square_wave(fTemp169);
			fRec130[0] = (fRec130[1] + (fConst13 * (square_polyblep_fast(fTemp169, fTemp170, (0.5f * fVec49[2]), ((int((fTemp300 > 1.0f)))?fTemp171:fTemp300), fVec116[1]) - fRec130[1])));
			fRec129[0] = (fConst7 * ((fRec130[0] - fRec130[1]) + fRec129[1]));
			fVec117[0] = fSlow52;
			float fTemp301 = (fSlow52 + (fVec117[3] + (fVec117[1] + fVec117[2])));
			float fTemp302 = ((1 + fTemp189) - fTemp190);
			fVec118[0] = square_wave(fTemp189);
			fRec132[0] = (fRec132[1] + (fConst13 * (square_polyblep_fast(fTemp189, fTemp190, (0.5f * fVec55[2]), ((int((fTemp302 > 1.0f)))?fTemp191:fTemp302), fVec118[1]) - fRec132[1])));
			fRec131[0] = (fConst7 * ((fRec132[0] - fRec132[1]) + fRec131[1]));
			fVec119[0] = fSlow53;
			float fTemp303 = (fSlow53 + (fVec119[3] + (fVec119[1] + fVec119[2])));
			float fTemp304 = ((1 + fTemp209) - fTemp210);
			fVec120[0] = square_wave(fTemp209);
			fRec134[0] = (fRec134[1] + (fConst14 * (square_polyblep_fast(fTemp209, fTemp210, (0.5f * fVec61[2]), ((int((fTemp304 > 1.0f)))?fTemp211:fTemp304), fVec120[1]) - fRec134[1])));
			fRec133[0] = (fConst7 * ((fRec134[0] - fRec134[1]) + fRec133[1]));
			fVec121[0] = fSlow54;
			float fTemp305 = (fSlow54 + (fVec121[3] + (fVec121[1] + fVec121[2])));
			float fTemp306 = ((1 + fTemp229) - fTemp230);
			fVec122[0] = square_wave(fTemp229);
			fRec136[0] = (fRec136[1] + (fConst14 * (square_polyblep_fast(fTemp229, fTemp230, (0.5f * fVec67[2]), ((int((fTemp306 > 1.0f)))?fTemp231:fTemp306), fVec122[1]) - fRec136[1])));
			fRec135[0] = (fConst7 * ((fRec136[0] - fRec136[1]) + fRec135[1]));
			fVec123[0] = fSlow55;
			float fTemp307 = (fSlow55 + (fVec123[3] + (fVec123[1] + fVec123[2])));
			float fTemp308 = ((1 + fTemp249) - fTemp250);
			fVec124[0] = square_wave(fTemp249);
			fRec138[0] = (fRec138[1] + (fConst14 * (square_polyblep_fast(fTemp249, fTemp250, (0.5f * fVec73[2]), ((int((fTemp308 > 1.0f)))?fTemp251:fTemp308), fVec124[1]) - fRec138[1])));
			fRec137[0] = (fConst7 * ((fRec138[0] - fRec138[1]) + fRec137[1]));
			fVec125[0] = fSlow56;
			float fTemp309 = (fSlow56 + (fVec125[3] + (fVec125[1] + fVec125[2])));
			float fTemp310 = ((1 + fTemp9) - fTemp10);
			fVec126[0] = square_wave(fTemp9);
			fRec140[0] = (fRec140[1] + (fConst14 * (square_polyblep_fast(fTemp9, fTemp10, (0.5f * fVec2[2]), ((int((fTemp310 > 1.0f)))?fTemp11:fTemp310), fVec126[1]) - fRec140[1])));
			fRec139[0] = (fConst7 * ((fRec140[0] - fRec140[1]) + fRec139[1]));
			fVec127[0] = fSlow57;
			float fTemp311 = (fSlow57 + (fVec127[3] + (fVec127[1] + fVec127[2])));
			float fTemp312 = ((1 + fTemp33) - fTemp34);
			fVec128[0] = square_wave(fTemp33);
			fRec142[0] = (fRec142[1] + (fConst15 * (square_polyblep_fast(fTemp33, fTemp34, (0.5f * fVec9[2]), ((int((fTemp312 > 1.0f)))?fTemp35:fTemp312), fVec128[1]) - fRec142[1])));
			fRec141[0] = (fConst7 * ((fRec142[0] - fRec142[1]) + fRec141[1]));
			fVec129[0] = fSlow58;
			float fTemp313 = (fSlow58 + (fVec129[3] + (fVec129[1] + fVec129[2])));
			float fTemp314 = ((1 + fTemp57) - fTemp58);
			fVec130[0] = square_wave(fTemp57);
			fRec144[0] = (fRec144[1] + (fConst15 * (square_polyblep_fast(fTemp57, fTemp58, (0.5f * fVec16[2]), ((int((fTemp314 > 1.0f)))?fTemp59:fTemp314), fVec130[1]) - fRec144[1])));
			fRec143[0] = (fConst7 * ((fRec144[0] - fRec144[1]) + fRec143[1]));
			fVec131[0] = fSlow59;
			float fTemp315 = (fSlow59 + (fVec131[3] + (fVec131[1] + fVec131[2])));
			float fTemp316 = ((1 + fTemp81) - fTemp82);
			fVec132[0] = square_wave(fTemp81);
			fRec146[0] = (fRec146[1] + (fConst15 * (square_polyblep_fast(fTemp81, fTemp82, (0.5f * fVec23[2]), ((int((fTemp316 > 1.0f)))?fTemp83:fTemp316), fVec132[1]) - fRec146[1])));
			fRec145[0] = (fConst7 * ((fRec146[0] - fRec146[1]) + fRec145[1]));
			fVec133[0] = fSlow60;
			float fTemp317 = (fSlow60 + (fVec133[3] + (fVec133[1] + fVec133[2])));
			float fTemp318 = ((1 + fTemp105) - fTemp106);
			fVec134[0] = square_wave(fTemp105);
			fRec148[0] = (fRec148[1] + (fConst15 * (square_polyblep_fast(fTemp105, fTemp106, (0.5f * fVec30[2]), ((int((fTemp318 > 1.0f)))?fTemp107:fTemp318), fVec134[1]) - fRec148[1])));
			fRec147[0] = (fConst7 * ((fRec148[0] - fRec148[1]) + fRec147[1]));
			fVec135[0] = fSlow61;
			float fTemp319 = (fSlow61 + (fVec135[3] + (fVec135[1] + fVec135[2])));
			float fTemp320 = ((1 + fTemp125) - fTemp126);
			fVec136[0] = square_wave(fTemp125);
			fRec150[0] = (fRec150[1] + (fConst16 * (square_polyblep_fast(fTemp125, fTemp126, (0.5f * fVec36[2]), ((int((fTemp320 > 1.0f)))?fTemp127:fTemp320), fVec136[1]) - fRec150[1])));
			fRec149[0] = (fConst7 * ((fRec150[0] - fRec150[1]) + fRec149[1]));
			fVec137[0] = fSlow62;
			float fTemp321 = (fSlow62 + (fVec137[3] + (fVec137[1] + fVec137[2])));
			float fTemp322 = ((1 + fTemp145) - fTemp146);
			fVec138[0] = square_wave(fTemp145);
			fRec152[0] = (fRec152[1] + (fConst16 * (square_polyblep_fast(fTemp145, fTemp146, (0.5f * fVec42[2]), ((int((fTemp322 > 1.0f)))?fTemp147:fTemp322), fVec138[1]) - fRec152[1])));
			fRec151[0] = (fConst7 * ((fRec152[0] - fRec152[1]) + fRec151[1]));
			fVec139[0] = fSlow63;
			float fTemp323 = (fSlow63 + (fVec139[3] + (fVec139[1] + fVec139[2])));
			float fTemp324 = ((1 + fTemp165) - fTemp166);
			fVec140[0] = square_wave(fTemp165);
			fRec154[0] = (fRec154[1] + (fConst16 * (square_polyblep_fast(fTemp165, fTemp166, (0.5f * fVec48[2]), ((int((fTemp324 > 1.0f)))?fTemp167:fTemp324), fVec140[1]) - fRec154[1])));
			fRec153[0] = (fConst7 * ((fRec154[0] - fRec154[1]) + fRec153[1]));
			fVec141[0] = fSlow64;
			float fTemp325 = (fSlow64 + (fVec141[3] + (fVec141[1] + fVec141[2])));
			float fTemp326 = ((1 + fTemp185) - fTemp186);
			fVec142[0] = square_wave(fTemp185);
			fRec156[0] = (fRec156[1] + (fConst16 * (square_polyblep_fast(fTemp185, fTemp186, (0.5f * fVec54[2]), ((int((fTemp326 > 1.0f)))?fTemp187:fTemp326), fVec142[1]) - fRec156[1])));
			fRec155[0] = (fConst7 * ((fRec156[0] - fRec156[1]) + fRec155[1]));
			fVec143[0] = fSlow65;
			float fTemp327 = (fSlow65 + (fVec143[3] + (fVec143[1] + fVec143[2])));
			float fTemp328 = ((1 + fTemp205) - fTemp206);
			fVec144[0] = square_wave(fTemp205);
			fRec158[0] = (fRec158[1] + (fConst17 * (square_polyblep_fast(fTemp205, fTemp206, (0.5f * fVec60[2]), ((int((fTemp328 > 1.0f)))?fTemp207:fTemp328), fVec144[1]) - fRec158[1])));
			fRec157[0] = (fConst7 * ((fRec158[0] - fRec158[1]) + fRec157[1]));
			fVec145[0] = fSlow66;
			float fTemp329 = (fSlow66 + (fVec145[3] + (fVec145[1] + fVec145[2])));
			float fTemp330 = ((1 + fTemp225) - fTemp226);
			fVec146[0] = square_wave(fTemp225);
			fRec160[0] = (fRec160[1] + (fConst17 * (square_polyblep_fast(fTemp225, fTemp226, (0.5f * fVec66[2]), ((int((fTemp330 > 1.0f)))?fTemp227:fTemp330), fVec146[1]) - fRec160[1])));
			fRec159[0] = (fConst7 * ((fRec160[0] - fRec160[1]) + fRec159[1]));
			fVec147[0] = fSlow67;
			float fTemp331 = (fSlow67 + (fVec147[3] + (fVec147[1] + fVec147[2])));
			float fTemp332 = ((1 + fTemp245) - fTemp246);
			fVec148[0] = square_wave(fTemp245);
			fRec162[0] = (fRec162[1] + (fConst17 * (square_polyblep_fast(fTemp245, fTemp246, (0.5f * fVec72[2]), ((int((fTemp332 > 1.0f)))?fTemp247:fTemp332), fVec148[1]) - fRec162[1])));
			fRec161[0] = (fConst7 * ((fRec162[0] - fRec162[1]) + fRec161[1]));
			fVec149[0] = fSlow68;
			float fTemp333 = (fSlow68 + (fVec149[3] + (fVec149[1] + fVec149[2])));
			float fTemp334 = ((1 + fTemp5) - fTemp6);
			fVec150[0] = square_wave(fTemp5);
			fRec164[0] = (fRec164[1] + (fConst17 * (square_polyblep_fast(fTemp5, fTemp6, (0.5f * fVec1[2]), ((int((fTemp334 > 1.0f)))?fTemp7:fTemp334), fVec150[1]) - fRec164[1])));
			fRec163[0] = (fConst7 * ((fRec164[0] - fRec164[1]) + fRec163[1]));
			fVec151[0] = fSlow69;
			float fTemp335 = (fSlow69 + (fVec151[3] + (fVec151[1] + fVec151[2])));
			float fTemp336 = ((1 + fTemp29) - fTemp30);
			fVec152[0] = square_wave(fTemp29);
			fRec166[0] = (fRec166[1] + (fConst18 * (square_polyblep_fast(fTemp29, fTemp30, (0.5f * fVec8[2]), ((int((fTemp336 > 1.0f)))?fTemp31:fTemp336), fVec152[1]) - fRec166[1])));
			fRec165[0] = (fConst7 * ((fRec166[0] - fRec166[1]) + fRec165[1]));
			fVec153[0] = fSlow70;
			float fTemp337 = (fSlow70 + (fVec153[3] + (fVec153[1] + fVec153[2])));
			float fTemp338 = ((1 + fTemp53) - fTemp54);
			fVec154[0] = square_wave(fTemp53);
			fRec168[0] = (fRec168[1] + (fConst18 * (square_polyblep_fast(fTemp53, fTemp54, (0.5f * fVec15[2]), ((int((fTemp338 > 1.0f)))?fTemp55:fTemp338), fVec154[1]) - fRec168[1])));
			fRec167[0] = (fConst7 * ((fRec168[0] - fRec168[1]) + fRec167[1]));
			fVec155[0] = fSlow71;
			float fTemp339 = (fSlow71 + (fVec155[3] + (fVec155[1] + fVec155[2])));
			float fTemp340 = ((1 + fTemp77) - fTemp78);
			fVec156[0] = square_wave(fTemp77);
			fRec170[0] = (fRec170[1] + (fConst18 * (square_polyblep_fast(fTemp77, fTemp78, (0.5f * fVec22[2]), ((int((fTemp340 > 1.0f)))?fTemp79:fTemp340), fVec156[1]) - fRec170[1])));
			fRec169[0] = (fConst7 * ((fRec170[0] - fRec170[1]) + fRec169[1]));
			fVec157[0] = fSlow72;
			float fTemp341 = (fSlow72 + (fVec157[3] + (fVec157[1] + fVec157[2])));
			float fTemp342 = ((1 + fTemp101) - fTemp102);
			fVec158[0] = square_wave(fTemp101);
			fRec172[0] = (fRec172[1] + (fConst18 * (square_polyblep_fast(fTemp101, fTemp102, (0.5f * fVec29[2]), ((int((fTemp342 > 1.0f)))?fTemp103:fTemp342), fVec158[1]) - fRec172[1])));
			fRec171[0] = (fConst7 * ((fRec172[0] - fRec172[1]) + fRec171[1]));
			fVec159[0] = fSlow73;
			float fTemp343 = (fSlow73 + (fVec159[3] + (fVec159[1] + fVec159[2])));
			float fTemp344 = ((1 + fRec45[0]) - fRec45[1]);
			fVec160[0] = (0 - (2 * (fRec45[0] - 0.5f)));
			float fTemp345 = saw_polyblep_fast(fRec45[0], fRec45[1], fRec45[2], ((int((fTemp344 > 1.0f)))?fTemp123:fTemp344), fVec160[1]);
			fVec161[0] = fTemp345;
			fRec173[0] = (fConst7 * (((1.95f * fVec161[0]) - (1.95f * fVec161[1])) + fRec173[1]));
			fVec162[0] = fSlow74;
			float fTemp346 = (fSlow74 + (fVec162[3] + (fVec162[1] + fVec162[2])));
			float fTemp347 = ((1 + fRec52[0]) - fRec52[1]);
			fVec163[0] = (0 - (2 * (fRec52[0] - 0.5f)));
			float fTemp348 = saw_polyblep_fast(fRec52[0], fRec52[1], fRec52[2], ((int((fTemp347 > 1.0f)))?fTemp143:fTemp347), fVec163[1]);
			fVec164[0] = fTemp348;
			fRec174[0] = (fConst7 * (((1.95f * fVec164[0]) - (1.95f * fVec164[1])) + fRec174[1]));
			fVec165[0] = fSlow75;
			float fTemp349 = (fSlow75 + (fVec165[3] + (fVec165[1] + fVec165[2])));
			float fTemp350 = ((1 + fRec59[0]) - fRec59[1]);
			fVec166[0] = (0 - (2 * (fRec59[0] - 0.5f)));
			float fTemp351 = saw_polyblep_fast(fRec59[0], fRec59[1], fRec59[2], ((int((fTemp350 > 1.0f)))?fTemp163:fTemp350), fVec166[1]);
			fVec167[0] = fTemp351;
			fRec175[0] = (fConst7 * (((1.95f * fVec167[0]) - (1.95f * fVec167[1])) + fRec175[1]));
			fVec168[0] = fSlow76;
			float fTemp352 = (fSlow76 + (fVec168[3] + (fVec168[1] + fVec168[2])));
			float fTemp353 = ((1 + fRec66[0]) - fRec66[1]);
			fVec169[0] = (0 - (2 * (fRec66[0] - 0.5f)));
			float fTemp354 = saw_polyblep_fast(fRec66[0], fRec66[1], fRec66[2], ((int((fTemp353 > 1.0f)))?fTemp183:fTemp353), fVec169[1]);
			fVec170[0] = fTemp354;
			fRec176[0] = (fConst7 * (((1.95f * fVec170[0]) - (1.95f * fVec170[1])) + fRec176[1]));
			fVec171[0] = fSlow77;
			float fTemp355 = (fSlow77 + (fVec171[3] + (fVec171[1] + fVec171[2])));
			float fTemp356 = ((1 + fRec73[0]) - fRec73[1]);
			fVec172[0] = (0 - (2 * (fRec73[0] - 0.5f)));
			float fTemp357 = saw_polyblep_fast(fRec73[0], fRec73[1], fRec73[2], ((int((fTemp356 > 1.0f)))?fTemp203:fTemp356), fVec172[1]);
			fVec173[0] = fTemp357;
			fRec177[0] = (fConst7 * (((1.95f * fVec173[0]) - (1.95f * fVec173[1])) + fRec177[1]));
			fVec174[0] = fSlow78;
			float fTemp358 = (fSlow78 + (fVec174[3] + (fVec174[1] + fVec174[2])));
			float fTemp359 = ((1 + fRec80[0]) - fRec80[1]);
			fVec175[0] = (0 - (2 * (fRec80[0] - 0.5f)));
			float fTemp360 = saw_polyblep_fast(fRec80[0], fRec80[1], fRec80[2], ((int((fTemp359 > 1.0f)))?fTemp223:fTemp359), fVec175[1]);
			fVec176[0] = fTemp360;
			fRec178[0] = (fConst7 * (((1.95f * fVec176[0]) - (1.95f * fVec176[1])) + fRec178[1]));
			fVec177[0] = fSlow79;
			float fTemp361 = (fSlow79 + (fVec177[3] + (fVec177[1] + fVec177[2])));
			float fTemp362 = ((1 + fRec87[0]) - fRec87[1]);
			fVec178[0] = (0 - (2 * (fRec87[0] - 0.5f)));
			float fTemp363 = saw_polyblep_fast(fRec87[0], fRec87[1], fRec87[2], ((int((fTemp362 > 1.0f)))?fTemp243:fTemp362), fVec178[1]);
			fVec179[0] = fTemp363;
			fRec179[0] = (fConst7 * (((1.95f * fVec179[0]) - (1.95f * fVec179[1])) + fRec179[1]));
			fVec180[0] = fSlow80;
			float fTemp364 = (fSlow80 + (fVec180[3] + (fVec180[1] + fVec180[2])));
			float fTemp365 = ((1 + fRec4[0]) - fRec4[1]);
			fVec181[0] = (0 - (2 * (fRec4[0] - 0.5f)));
			float fTemp366 = saw_polyblep_fast(fRec4[0], fRec4[1], fRec4[2], ((int((fTemp365 > 1.0f)))?fTemp3:fTemp365), fVec181[1]);
			fVec182[0] = fTemp366;
			fRec180[0] = (fConst7 * (((1.95f * fVec182[0]) - (1.95f * fVec182[1])) + fRec180[1]));
			float fTemp367 = ((fRec180[0] * fTemp364) + ((fRec179[0] * fTemp361) + ((fRec178[0] * fTemp358) + ((fRec177[0] * fTemp355) + ((fRec176[0] * fTemp352) + ((fRec175[0] * fTemp349) + ((fRec174[0] * fTemp346) + ((fRec173[0] * fTemp343) + ((fRec171[0] * fTemp341) + ((fRec169[0] * fTemp339) + ((fRec167[0] * fTemp337) + ((fRec165[0] * fTemp335) + ((fRec163[0] * fTemp333) + ((fRec161[0] * fTemp331) + ((fRec159[0] * fTemp329) + ((fRec157[0] * fTemp327) + ((fRec155[0] * fTemp325) + ((fRec153[0] * fTemp323) + ((fRec151[0] * fTemp321) + ((fRec149[0] * fTemp319) + ((fRec147[0] * fTemp317) + ((fRec145[0] * fTemp315) + ((fRec143[0] * fTemp313) + ((fRec141[0] * fTemp311) + ((fRec139[0] * fTemp309) + ((fRec137[0] * fTemp307) + ((fRec135[0] * fTemp305) + ((fRec133[0] * fTemp303) + ((fRec131[0] * fTemp301) + ((fRec129[0] * fTemp299) + ((fRec127[0] * fTemp297) + ((fRec125[0] * fTemp295) + ((fRec123[0] * fTemp293) + ((fRec121[0] * fTemp291) + ((fRec119[0] * fTemp289) + ((fRec117[0] * fTemp287) + ((fRec115[0] * fTemp285) + ((fRec113[0] * fTemp283) + ((fRec111[0] * fTemp281) + ((fRec109[0] * fTemp279) + ((fRec107[0] * fTemp277) + ((fRec105[0] * fTemp275) + ((fRec103[0] * fTemp273) + ((fRec101[0] * fTemp271) + (fSlow36 * ((fRec99[0] * fTemp269) + ((fRec97[0] * fTemp267) + ((fRec95[0] * fTemp265) + ((fRec93[0] * fTemp263) + ((fRec91[0] * fTemp261) + ((fRec84[0] * fTemp241) + ((fRec77[0] * fTemp221) + ((fRec70[0] * fTemp201) + ((fRec63[0] * fTemp181) + ((fRec56[0] * fTemp161) + ((fRec49[0] * fTemp141) + ((fRec42[0] * fTemp121) + ((fRec34[0] * fTemp97) + ((fRec26[0] * fTemp73) + ((fRec18[0] * fTemp49) + ((fRec10[0] * fTemp25) + (fRec1[0] * fTemp0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp368 = (0.25f * fTemp367);
			float fTemp369 = (fRec109[0] + (fRec107[0] + (fRec105[0] + (fRec101[0] + fRec103[0]))));
			float fTemp370 = (fRec117[0] + (fRec115[0] + (fRec113[0] + (fRec111[0] + fTemp369))));
			float fTemp371 = (fRec125[0] + (fRec123[0] + (fRec121[0] + (fRec119[0] + fTemp370))));
			float fTemp372 = (fRec133[0] + (fRec131[0] + (fRec129[0] + (fRec127[0] + fTemp371))));
			float fTemp373 = (fRec149[0] + (fRec147[0] + (fRec145[0] + (fRec143[0] + (fRec141[0] + (fRec139[0] + (fRec137[0] + (fRec135[0] + fTemp372))))))));
			float fTemp374 = ((fSlow36 * (fRec34[0] + (fRec26[0] + (fRec18[0] + (fRec10[0] + (fRec1[0] + (fRec63[0] + (fRec56[0] + (fRec49[0] + (fRec42[0] + (fRec99[0] + (fRec97[0] + (fRec95[0] + (fRec93[0] + (fRec91[0] + (fRec84[0] + (fRec70[0] + fRec77[0]))))))))))))))))) + (fRec180[0] + (fRec179[0] + (fRec178[0] + (fRec177[0] + (fRec176[0] + (fRec175[0] + (fRec174[0] + (fRec173[0] + (fRec171[0] + (fRec169[0] + (fRec167[0] + (fRec165[0] + (fRec163[0] + (fRec161[0] + (fRec159[0] + (fRec157[0] + (fRec155[0] + (fRec153[0] + (fRec151[0] + fTemp373))))))))))))))))))));
			fVec183[0] = (fTemp374 - fTemp368);
			fRec0[0] = (fConst19 * ((fTemp374 - (fTemp368 + fVec183[1])) + fRec0[1]));
			float fTemp375 = (fRec0[0] * fSlow1);
			float fTemp376 = ((1 + fRec13[0]) - fRec13[1]);
			fVec184[0] = (0 - (2 * (fRec13[0] - 0.5f)));
			float fTemp377 = saw_polyblep_fast(fRec13[0], fRec13[1], fRec13[2], ((int((fTemp376 > 1.0f)))?fTemp27:fTemp376), fVec184[1]);
			fVec185[0] = fTemp377;
			fRec182[0] = (fConst7 * (((1.95f * fVec185[0]) - (1.95f * fVec185[1])) + fRec182[1]));
			float fTemp378 = ((1 + fRec21[0]) - fRec21[1]);
			fVec186[0] = (0 - (2 * (fRec21[0] - 0.5f)));
			float fTemp379 = saw_polyblep_fast(fRec21[0], fRec21[1], fRec21[2], ((int((fTemp378 > 1.0f)))?fTemp51:fTemp378), fVec186[1]);
			fVec187[0] = fTemp379;
			fRec183[0] = (fConst7 * (((1.95f * fVec187[0]) - (1.95f * fVec187[1])) + fRec183[1]));
			float fTemp380 = ((1 + fRec29[0]) - fRec29[1]);
			fVec188[0] = (0 - (2 * (fRec29[0] - 0.5f)));
			float fTemp381 = saw_polyblep_fast(fRec29[0], fRec29[1], fRec29[2], ((int((fTemp380 > 1.0f)))?fTemp75:fTemp380), fVec188[1]);
			fVec189[0] = fTemp381;
			fRec184[0] = (fConst7 * (((1.95f * fVec189[0]) - (1.95f * fVec189[1])) + fRec184[1]));
			float fTemp382 = ((1 + fRec37[0]) - fRec37[1]);
			fVec190[0] = (0 - (2 * (fRec37[0] - 0.5f)));
			float fTemp383 = saw_polyblep_fast(fRec37[0], fRec37[1], fRec37[2], ((int((fTemp382 > 1.0f)))?fTemp99:fTemp382), fVec190[1]);
			fVec191[0] = fTemp383;
			fRec185[0] = (fConst7 * (((1.95f * fVec191[0]) - (1.95f * fVec191[1])) + fRec185[1]));
			float fTemp384 = (fRec173[0] * fTemp333);
			float fTemp385 = (fRec174[0] * fTemp335);
			float fTemp386 = (fRec175[0] * fTemp337);
			float fTemp387 = (fRec176[0] * fTemp339);
			float fTemp388 = (fRec177[0] * fTemp341);
			float fTemp389 = (fRec178[0] * fTemp343);
			float fTemp390 = (fRec179[0] * fTemp346);
			float fTemp391 = (fRec180[0] * fTemp349);
			float fTemp392 = (fRec182[0] * fTemp352);
			float fTemp393 = (fRec183[0] * fTemp355);
			float fTemp394 = (fRec184[0] * fTemp358);
			float fTemp395 = (fRec185[0] * fTemp361);
			float fTemp396 = (fRec173[0] * fTemp364);
			float fTemp397 = (0.25f * (fTemp396 + (fTemp395 + (fTemp394 + (fTemp393 + (fTemp392 + (fTemp391 + (fTemp390 + (fTemp389 + (fTemp388 + (fTemp387 + (fTemp386 + (fTemp385 + (fTemp384 + ((fRec185[0] * fTemp331) + ((fRec184[0] * fTemp329) + ((fRec183[0] * fTemp327) + ((fRec182[0] * fTemp325) + ((fRec180[0] * fTemp323) + ((fRec179[0] * fTemp321) + ((fRec178[0] * fTemp319) + ((fRec177[0] * fTemp317) + ((fRec176[0] * fTemp315) + ((fRec175[0] * fTemp313) + ((fRec174[0] * fTemp311) + ((fRec173[0] * fTemp309) + ((fRec171[0] * fTemp307) + ((fRec169[0] * fTemp305) + ((fRec167[0] * fTemp303) + ((fRec165[0] * fTemp301) + ((fRec163[0] * fTemp299) + ((fRec161[0] * fTemp297) + ((fRec159[0] * fTemp295) + ((fRec157[0] * fTemp293) + ((fRec155[0] * fTemp291) + ((fRec153[0] * fTemp289) + ((fRec151[0] * fTemp287) + ((fRec149[0] * fTemp285) + ((fRec147[0] * fTemp283) + ((fRec145[0] * fTemp281) + ((fRec143[0] * fTemp279) + ((fRec141[0] * fTemp277) + ((fRec139[0] * fTemp275) + ((fRec137[0] * fTemp273) + ((fRec135[0] * fTemp271) + (fSlow36 * ((fRec133[0] * fTemp269) + ((fRec131[0] * fTemp267) + ((fRec129[0] * fTemp265) + ((fRec127[0] * fTemp263) + ((fRec125[0] * fTemp261) + ((fRec123[0] * fTemp241) + ((fRec121[0] * fTemp221) + ((fRec119[0] * fTemp201) + ((fRec117[0] * fTemp181) + ((fRec115[0] * fTemp161) + ((fRec113[0] * fTemp141) + ((fRec111[0] * fTemp121) + ((fRec109[0] * fTemp97) + ((fRec107[0] * fTemp73) + ((fRec105[0] * fTemp49) + ((fRec103[0] * fTemp25) + (fRec101[0] * fTemp0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp398 = (0.5f * fRec185[0]);
			float fTemp399 = (0.5f * fRec184[0]);
			float fTemp400 = (0.5f * fRec183[0]);
			float fTemp401 = (0.5f * fRec182[0]);
			float fTemp402 = (0.5f * fRec180[0]);
			float fTemp403 = (0.5f * fRec179[0]);
			float fTemp404 = (0.5f * fRec178[0]);
			float fTemp405 = (0.5f * fRec177[0]);
			float fTemp406 = (0.5f * fRec176[0]);
			float fTemp407 = (0.5f * fRec175[0]);
			float fTemp408 = (0.5f * fRec171[0]);
			float fTemp409 = (0.5f * fRec169[0]);
			float fTemp410 = (0.5f * fRec167[0]);
			float fTemp411 = (0.5f * fRec165[0]);
			float fTemp412 = (0.5f * fRec163[0]);
			float fTemp413 = (0.5f * fRec161[0]);
			float fTemp414 = (0.5f * fRec159[0]);
			float fTemp415 = (0.5f * fRec157[0]);
			float fTemp416 = (0.5f * fRec155[0]);
			float fTemp417 = (0.5f * fRec153[0]);
			float fTemp418 = (0.5f * fRec151[0]);
			float fTemp419 = (0.5f * fRec149[0]);
			float fTemp420 = (0.5f * fRec147[0]);
			float fTemp421 = (0.5f * fRec145[0]);
			float fTemp422 = (0.5f * fRec143[0]);
			float fTemp423 = (0.5f * fRec141[0]);
			float fTemp424 = (0.5f * fRec139[0]);
			float fTemp425 = (0.5f * fRec137[0]);
			float fTemp426 = (0.5f * fRec135[0]);
			float fTemp427 = ((2 * ((((((((((((fRec174[0] + (fRec173[0] + ((((((((((((((((((fTemp426 + fTemp425) + fTemp424) + fTemp423) + fTemp422) + fTemp421) + fTemp420) + fTemp419) + fTemp418) + fTemp417) + fTemp416) + fTemp415) + fTemp414) + fTemp413) + fTemp412) + fTemp411) + fTemp410) + fTemp409) + fTemp408))) + fTemp407) + fTemp406) + fTemp405) + fTemp404) + fTemp403) + fTemp402) + fTemp401) + fTemp400) + fTemp399) + fTemp398) + (fSlow81 * fTemp372))) + (fRec185[0] + (fRec184[0] + (fRec183[0] + (fRec182[0] + (fRec180[0] + (fRec179[0] + (fRec178[0] + (fRec177[0] + (fRec176[0] + (fRec173[0] + fRec175[0])))))))))));
			fVec192[0] = (fTemp427 - fTemp397);
			fRec181[0] = (fConst19 * ((fTemp427 - (fTemp397 + fVec192[1])) + fRec181[1]));
			float fTemp428 = (0.002f * (fRec181[0] * fSlow1));
			float fTemp429 = (fTemp397 + fTemp428);
			iRec189[0] = ((int((fTemp140 < 0)))?(1 - iRec189[1]):iRec189[1]);
			float fTemp430 = (iRec189[0] + fTemp137);
			fVec193[0] = fTemp430;
			float fTemp431 = (0.5f * fVec193[0]);
			float fTemp432 = (0.5f * fVec193[1]);
			float fTemp433 = (fTemp431 - fTemp432);
			iRec190[0] = ((int((fTemp433 < 0)))?(1 - iRec190[1]):iRec190[1]);
			float fTemp434 = (iRec190[0] + fTemp431);
			fVec194[0] = fTemp434;
			float fTemp435 = (0.5f * fVec194[0]);
			float fTemp436 = (0.5f * fVec194[1]);
			float fTemp437 = (fTemp435 - fTemp436);
			iRec191[0] = ((int((fTemp437 < 0)))?(1 - iRec191[1]):iRec191[1]);
			float fTemp438 = (iRec191[0] + fTemp435);
			fVec195[0] = fTemp438;
			float fTemp439 = (0.5f * fVec195[0]);
			float fTemp440 = (0.5f * fVec195[1]);
			float fTemp441 = ((1 + fTemp439) - fTemp440);
			fVec196[0] = square_wave(fTemp439);
			fRec188[0] = (fRec188[1] + (fConst20 * (square_polyblep_fast(fTemp439, fTemp440, (0.5f * fVec195[2]), ((int((fTemp441 > 1.0f)))?(fTemp439 - fTemp440):fTemp441), fVec196[1]) - fRec188[1])));
			fRec187[0] = (fConst21 * ((fRec188[0] - fRec188[1]) + fRec187[1]));
			iRec194[0] = ((int((fTemp160 < 0)))?(1 - iRec194[1]):iRec194[1]);
			float fTemp442 = (iRec194[0] + fTemp157);
			fVec197[0] = fTemp442;
			float fTemp443 = (0.5f * fVec197[0]);
			float fTemp444 = (0.5f * fVec197[1]);
			float fTemp445 = (fTemp443 - fTemp444);
			iRec195[0] = ((int((fTemp445 < 0)))?(1 - iRec195[1]):iRec195[1]);
			float fTemp446 = (iRec195[0] + fTemp443);
			fVec198[0] = fTemp446;
			float fTemp447 = (0.5f * fVec198[0]);
			float fTemp448 = (0.5f * fVec198[1]);
			float fTemp449 = (fTemp447 - fTemp448);
			iRec196[0] = ((int((fTemp449 < 0)))?(1 - iRec196[1]):iRec196[1]);
			float fTemp450 = (iRec196[0] + fTemp447);
			fVec199[0] = fTemp450;
			float fTemp451 = (0.5f * fVec199[0]);
			float fTemp452 = (0.5f * fVec199[1]);
			float fTemp453 = ((1 + fTemp451) - fTemp452);
			fVec200[0] = square_wave(fTemp451);
			fRec193[0] = (fRec193[1] + (fConst20 * (square_polyblep_fast(fTemp451, fTemp452, (0.5f * fVec199[2]), ((int((fTemp453 > 1.0f)))?(fTemp451 - fTemp452):fTemp453), fVec200[1]) - fRec193[1])));
			fRec192[0] = (fConst21 * ((fRec193[0] - fRec193[1]) + fRec192[1]));
			iRec199[0] = ((int((fTemp180 < 0)))?(1 - iRec199[1]):iRec199[1]);
			float fTemp454 = (iRec199[0] + fTemp177);
			fVec201[0] = fTemp454;
			float fTemp455 = (0.5f * fVec201[0]);
			float fTemp456 = (0.5f * fVec201[1]);
			float fTemp457 = (fTemp455 - fTemp456);
			iRec200[0] = ((int((fTemp457 < 0)))?(1 - iRec200[1]):iRec200[1]);
			float fTemp458 = (iRec200[0] + fTemp455);
			fVec202[0] = fTemp458;
			float fTemp459 = (0.5f * fVec202[0]);
			float fTemp460 = (0.5f * fVec202[1]);
			float fTemp461 = (fTemp459 - fTemp460);
			iRec201[0] = ((int((fTemp461 < 0)))?(1 - iRec201[1]):iRec201[1]);
			float fTemp462 = (iRec201[0] + fTemp459);
			fVec203[0] = fTemp462;
			float fTemp463 = (0.5f * fVec203[0]);
			float fTemp464 = (0.5f * fVec203[1]);
			float fTemp465 = ((1 + fTemp463) - fTemp464);
			fVec204[0] = square_wave(fTemp463);
			fRec198[0] = (fRec198[1] + (fConst20 * (square_polyblep_fast(fTemp463, fTemp464, (0.5f * fVec203[2]), ((int((fTemp465 > 1.0f)))?(fTemp463 - fTemp464):fTemp465), fVec204[1]) - fRec198[1])));
			fRec197[0] = (fConst21 * ((fRec198[0] - fRec198[1]) + fRec197[1]));
			iRec204[0] = ((int((fTemp200 < 0)))?(1 - iRec204[1]):iRec204[1]);
			float fTemp466 = (iRec204[0] + fTemp197);
			fVec205[0] = fTemp466;
			float fTemp467 = (0.5f * fVec205[0]);
			float fTemp468 = (0.5f * fVec205[1]);
			float fTemp469 = (fTemp467 - fTemp468);
			iRec205[0] = ((int((fTemp469 < 0)))?(1 - iRec205[1]):iRec205[1]);
			float fTemp470 = (iRec205[0] + fTemp467);
			fVec206[0] = fTemp470;
			float fTemp471 = (0.5f * fVec206[0]);
			float fTemp472 = (0.5f * fVec206[1]);
			float fTemp473 = (fTemp471 - fTemp472);
			iRec206[0] = ((int((fTemp473 < 0)))?(1 - iRec206[1]):iRec206[1]);
			float fTemp474 = (iRec206[0] + fTemp471);
			fVec207[0] = fTemp474;
			float fTemp475 = (0.5f * fVec207[0]);
			float fTemp476 = (0.5f * fVec207[1]);
			float fTemp477 = ((1 + fTemp475) - fTemp476);
			fVec208[0] = square_wave(fTemp475);
			fRec203[0] = (fRec203[1] + (fConst20 * (square_polyblep_fast(fTemp475, fTemp476, (0.5f * fVec207[2]), ((int((fTemp477 > 1.0f)))?(fTemp475 - fTemp476):fTemp477), fVec208[1]) - fRec203[1])));
			fRec202[0] = (fConst21 * ((fRec203[0] - fRec203[1]) + fRec202[1]));
			iRec209[0] = ((int((fTemp220 < 0)))?(1 - iRec209[1]):iRec209[1]);
			float fTemp478 = (iRec209[0] + fTemp217);
			fVec209[0] = fTemp478;
			float fTemp479 = (0.5f * fVec209[0]);
			float fTemp480 = (0.5f * fVec209[1]);
			float fTemp481 = (fTemp479 - fTemp480);
			iRec210[0] = ((int((fTemp481 < 0)))?(1 - iRec210[1]):iRec210[1]);
			float fTemp482 = (iRec210[0] + fTemp479);
			fVec210[0] = fTemp482;
			float fTemp483 = (0.5f * fVec210[0]);
			float fTemp484 = (0.5f * fVec210[1]);
			float fTemp485 = (fTemp483 - fTemp484);
			iRec211[0] = ((int((fTemp485 < 0)))?(1 - iRec211[1]):iRec211[1]);
			float fTemp486 = (iRec211[0] + fTemp483);
			fVec211[0] = fTemp486;
			float fTemp487 = (0.5f * fVec211[0]);
			float fTemp488 = (0.5f * fVec211[1]);
			float fTemp489 = ((1 + fTemp487) - fTemp488);
			fVec212[0] = square_wave(fTemp487);
			fRec208[0] = (fRec208[1] + (fConst20 * (square_polyblep_fast(fTemp487, fTemp488, (0.5f * fVec211[2]), ((int((fTemp489 > 1.0f)))?(fTemp487 - fTemp488):fTemp489), fVec212[1]) - fRec208[1])));
			fRec207[0] = (fConst21 * ((fRec208[0] - fRec208[1]) + fRec207[1]));
			iRec214[0] = ((int((fTemp240 < 0)))?(1 - iRec214[1]):iRec214[1]);
			float fTemp490 = (iRec214[0] + fTemp237);
			fVec213[0] = fTemp490;
			float fTemp491 = (0.5f * fVec213[0]);
			float fTemp492 = (0.5f * fVec213[1]);
			float fTemp493 = (fTemp491 - fTemp492);
			iRec215[0] = ((int((fTemp493 < 0)))?(1 - iRec215[1]):iRec215[1]);
			float fTemp494 = (iRec215[0] + fTemp491);
			fVec214[0] = fTemp494;
			float fTemp495 = (0.5f * fVec214[0]);
			float fTemp496 = (0.5f * fVec214[1]);
			float fTemp497 = (fTemp495 - fTemp496);
			iRec216[0] = ((int((fTemp497 < 0)))?(1 - iRec216[1]):iRec216[1]);
			float fTemp498 = (iRec216[0] + fTemp495);
			fVec215[0] = fTemp498;
			float fTemp499 = (0.5f * fVec215[0]);
			float fTemp500 = (0.5f * fVec215[1]);
			float fTemp501 = ((1 + fTemp499) - fTemp500);
			fVec216[0] = square_wave(fTemp499);
			fRec213[0] = (fRec213[1] + (fConst20 * (square_polyblep_fast(fTemp499, fTemp500, (0.5f * fVec215[2]), ((int((fTemp501 > 1.0f)))?(fTemp499 - fTemp500):fTemp501), fVec216[1]) - fRec213[1])));
			fRec212[0] = (fConst21 * ((fRec213[0] - fRec213[1]) + fRec212[1]));
			iRec219[0] = ((int((fTemp260 < 0)))?(1 - iRec219[1]):iRec219[1]);
			float fTemp502 = (iRec219[0] + fTemp257);
			fVec217[0] = fTemp502;
			float fTemp503 = (0.5f * fVec217[0]);
			float fTemp504 = (0.5f * fVec217[1]);
			float fTemp505 = (fTemp503 - fTemp504);
			iRec220[0] = ((int((fTemp505 < 0)))?(1 - iRec220[1]):iRec220[1]);
			float fTemp506 = (iRec220[0] + fTemp503);
			fVec218[0] = fTemp506;
			float fTemp507 = (0.5f * fVec218[0]);
			float fTemp508 = (0.5f * fVec218[1]);
			float fTemp509 = (fTemp507 - fTemp508);
			iRec221[0] = ((int((fTemp509 < 0)))?(1 - iRec221[1]):iRec221[1]);
			float fTemp510 = (iRec221[0] + fTemp507);
			fVec219[0] = fTemp510;
			float fTemp511 = (0.5f * fVec219[0]);
			float fTemp512 = (0.5f * fVec219[1]);
			float fTemp513 = ((1 + fTemp511) - fTemp512);
			fVec220[0] = square_wave(fTemp511);
			fRec218[0] = (fRec218[1] + (fConst20 * (square_polyblep_fast(fTemp511, fTemp512, (0.5f * fVec219[2]), ((int((fTemp513 > 1.0f)))?(fTemp511 - fTemp512):fTemp513), fVec220[1]) - fRec218[1])));
			fRec217[0] = (fConst21 * ((fRec218[0] - fRec218[1]) + fRec217[1]));
			iRec224[0] = ((int((fTemp24 < 0)))?(1 - iRec224[1]):iRec224[1]);
			float fTemp514 = (iRec224[0] + fTemp21);
			fVec221[0] = fTemp514;
			float fTemp515 = (0.5f * fVec221[0]);
			float fTemp516 = (0.5f * fVec221[1]);
			float fTemp517 = (fTemp515 - fTemp516);
			iRec225[0] = ((int((fTemp517 < 0)))?(1 - iRec225[1]):iRec225[1]);
			float fTemp518 = (iRec225[0] + fTemp515);
			fVec222[0] = fTemp518;
			float fTemp519 = (0.5f * fVec222[0]);
			float fTemp520 = (0.5f * fVec222[1]);
			float fTemp521 = ((1 + fTemp519) - fTemp520);
			fVec223[0] = square_wave(fTemp519);
			fRec223[0] = (fRec223[1] + (fConst20 * (square_polyblep_fast(fTemp519, fTemp520, (0.5f * fVec222[2]), ((int((fTemp521 > 1.0f)))?(fTemp519 - fTemp520):fTemp521), fVec223[1]) - fRec223[1])));
			fRec222[0] = (fConst21 * ((fRec223[0] - fRec223[1]) + fRec222[1]));
			iRec228[0] = ((int((fTemp48 < 0)))?(1 - iRec228[1]):iRec228[1]);
			float fTemp522 = (iRec228[0] + fTemp45);
			fVec224[0] = fTemp522;
			float fTemp523 = (0.5f * fVec224[0]);
			float fTemp524 = (0.5f * fVec224[1]);
			float fTemp525 = (fTemp523 - fTemp524);
			iRec229[0] = ((int((fTemp525 < 0)))?(1 - iRec229[1]):iRec229[1]);
			float fTemp526 = (iRec229[0] + fTemp523);
			fVec225[0] = fTemp526;
			float fTemp527 = (0.5f * fVec225[0]);
			float fTemp528 = (0.5f * fVec225[1]);
			float fTemp529 = ((1 + fTemp527) - fTemp528);
			fVec226[0] = square_wave(fTemp527);
			fRec227[0] = (fRec227[1] + (fConst22 * (square_polyblep_fast(fTemp527, fTemp528, (0.5f * fVec225[2]), ((int((fTemp529 > 1.0f)))?(fTemp527 - fTemp528):fTemp529), fVec226[1]) - fRec227[1])));
			fRec226[0] = (fConst21 * ((fRec227[0] - fRec227[1]) + fRec226[1]));
			iRec232[0] = ((int((fTemp72 < 0)))?(1 - iRec232[1]):iRec232[1]);
			float fTemp530 = (iRec232[0] + fTemp69);
			fVec227[0] = fTemp530;
			float fTemp531 = (0.5f * fVec227[0]);
			float fTemp532 = (0.5f * fVec227[1]);
			float fTemp533 = (fTemp531 - fTemp532);
			iRec233[0] = ((int((fTemp533 < 0)))?(1 - iRec233[1]):iRec233[1]);
			float fTemp534 = (iRec233[0] + fTemp531);
			fVec228[0] = fTemp534;
			float fTemp535 = (0.5f * fVec228[0]);
			float fTemp536 = (0.5f * fVec228[1]);
			float fTemp537 = ((1 + fTemp535) - fTemp536);
			fVec229[0] = square_wave(fTemp535);
			fRec231[0] = (fRec231[1] + (fConst22 * (square_polyblep_fast(fTemp535, fTemp536, (0.5f * fVec228[2]), ((int((fTemp537 > 1.0f)))?(fTemp535 - fTemp536):fTemp537), fVec229[1]) - fRec231[1])));
			fRec230[0] = (fConst21 * ((fRec231[0] - fRec231[1]) + fRec230[1]));
			iRec236[0] = ((int((fTemp96 < 0)))?(1 - iRec236[1]):iRec236[1]);
			float fTemp538 = (iRec236[0] + fTemp93);
			fVec230[0] = fTemp538;
			float fTemp539 = (0.5f * fVec230[0]);
			float fTemp540 = (0.5f * fVec230[1]);
			float fTemp541 = (fTemp539 - fTemp540);
			iRec237[0] = ((int((fTemp541 < 0)))?(1 - iRec237[1]):iRec237[1]);
			float fTemp542 = (iRec237[0] + fTemp539);
			fVec231[0] = fTemp542;
			float fTemp543 = (0.5f * fVec231[0]);
			float fTemp544 = (0.5f * fVec231[1]);
			float fTemp545 = ((1 + fTemp543) - fTemp544);
			fVec232[0] = square_wave(fTemp543);
			fRec235[0] = (fRec235[1] + (fConst22 * (square_polyblep_fast(fTemp543, fTemp544, (0.5f * fVec231[2]), ((int((fTemp545 > 1.0f)))?(fTemp543 - fTemp544):fTemp545), fVec232[1]) - fRec235[1])));
			fRec234[0] = (fConst21 * ((fRec235[0] - fRec235[1]) + fRec234[1]));
			iRec240[0] = ((int((fTemp120 < 0)))?(1 - iRec240[1]):iRec240[1]);
			float fTemp546 = (iRec240[0] + fTemp117);
			fVec233[0] = fTemp546;
			float fTemp547 = (0.5f * fVec233[0]);
			float fTemp548 = (0.5f * fVec233[1]);
			float fTemp549 = (fTemp547 - fTemp548);
			iRec241[0] = ((int((fTemp549 < 0)))?(1 - iRec241[1]):iRec241[1]);
			float fTemp550 = (iRec241[0] + fTemp547);
			fVec234[0] = fTemp550;
			float fTemp551 = (0.5f * fVec234[0]);
			float fTemp552 = (0.5f * fVec234[1]);
			float fTemp553 = ((1 + fTemp551) - fTemp552);
			fVec235[0] = square_wave(fTemp551);
			fRec239[0] = (fRec239[1] + (fConst22 * (square_polyblep_fast(fTemp551, fTemp552, (0.5f * fVec234[2]), ((int((fTemp553 > 1.0f)))?(fTemp551 - fTemp552):fTemp553), fVec235[1]) - fRec239[1])));
			fRec238[0] = (fConst21 * ((fRec239[0] - fRec239[1]) + fRec238[1]));
			float fTemp554 = ((1 + fTemp435) - fTemp436);
			fVec236[0] = square_wave(fTemp435);
			fRec243[0] = (fRec243[1] + (fConst22 * (square_polyblep_fast(fTemp435, fTemp436, (0.5f * fVec194[2]), ((int((fTemp554 > 1.0f)))?fTemp437:fTemp554), fVec236[1]) - fRec243[1])));
			fRec242[0] = (fConst23 * ((fRec243[0] - fRec243[1]) + fRec242[1]));
			float fTemp555 = ((1 + fTemp447) - fTemp448);
			fVec237[0] = square_wave(fTemp447);
			fRec245[0] = (fRec245[1] + (fConst22 * (square_polyblep_fast(fTemp447, fTemp448, (0.5f * fVec198[2]), ((int((fTemp555 > 1.0f)))?fTemp449:fTemp555), fVec237[1]) - fRec245[1])));
			fRec244[0] = (fConst23 * ((fRec245[0] - fRec245[1]) + fRec244[1]));
			float fTemp556 = ((1 + fTemp459) - fTemp460);
			fVec238[0] = square_wave(fTemp459);
			fRec247[0] = (fRec247[1] + (fConst22 * (square_polyblep_fast(fTemp459, fTemp460, (0.5f * fVec202[2]), ((int((fTemp556 > 1.0f)))?fTemp461:fTemp556), fVec238[1]) - fRec247[1])));
			fRec246[0] = (fConst23 * ((fRec247[0] - fRec247[1]) + fRec246[1]));
			float fTemp557 = ((1 + fTemp471) - fTemp472);
			fVec239[0] = square_wave(fTemp471);
			fRec249[0] = (fRec249[1] + (fConst22 * (square_polyblep_fast(fTemp471, fTemp472, (0.5f * fVec206[2]), ((int((fTemp557 > 1.0f)))?fTemp473:fTemp557), fVec239[1]) - fRec249[1])));
			fRec248[0] = (fConst23 * ((fRec249[0] - fRec249[1]) + fRec248[1]));
			float fTemp558 = ((1 + fTemp483) - fTemp484);
			fVec240[0] = square_wave(fTemp483);
			fRec251[0] = (fRec251[1] + (fConst24 * (square_polyblep_fast(fTemp483, fTemp484, (0.5f * fVec210[2]), ((int((fTemp558 > 1.0f)))?fTemp485:fTemp558), fVec240[1]) - fRec251[1])));
			fRec250[0] = (fConst23 * ((fRec251[0] - fRec251[1]) + fRec250[1]));
			float fTemp559 = ((fRec250[0] * fTemp269) + ((fRec248[0] * fTemp267) + ((fRec246[0] * fTemp265) + ((fRec244[0] * fTemp263) + ((fRec242[0] * fTemp261) + ((fRec238[0] * fTemp241) + ((fRec234[0] * fTemp221) + ((fRec230[0] * fTemp201) + ((fRec226[0] * fTemp181) + ((fRec222[0] * fTemp161) + ((fRec217[0] * fTemp141) + ((fRec212[0] * fTemp121) + ((fRec207[0] * fTemp97) + ((fRec202[0] * fTemp73) + ((fRec197[0] * fTemp49) + ((fRec192[0] * fTemp25) + (fRec187[0] * fTemp0)))))))))))))))));
			float fTemp560 = ((1 + fTemp495) - fTemp496);
			fVec241[0] = square_wave(fTemp495);
			fRec253[0] = (fRec253[1] + (fConst24 * (square_polyblep_fast(fTemp495, fTemp496, (0.5f * fVec214[2]), ((int((fTemp560 > 1.0f)))?fTemp497:fTemp560), fVec241[1]) - fRec253[1])));
			fRec252[0] = (fConst23 * ((fRec253[0] - fRec253[1]) + fRec252[1]));
			float fTemp561 = ((1 + fTemp507) - fTemp508);
			fVec242[0] = square_wave(fTemp507);
			fRec255[0] = (fRec255[1] + (fConst24 * (square_polyblep_fast(fTemp507, fTemp508, (0.5f * fVec218[2]), ((int((fTemp561 > 1.0f)))?fTemp509:fTemp561), fVec242[1]) - fRec255[1])));
			fRec254[0] = (fConst23 * ((fRec255[0] - fRec255[1]) + fRec254[1]));
			float fTemp562 = ((1 + fTemp515) - fTemp516);
			fVec243[0] = square_wave(fTemp515);
			fRec257[0] = (fRec257[1] + (fConst24 * (square_polyblep_fast(fTemp515, fTemp516, (0.5f * fVec221[2]), ((int((fTemp562 > 1.0f)))?fTemp517:fTemp562), fVec243[1]) - fRec257[1])));
			fRec256[0] = (fConst23 * ((fRec257[0] - fRec257[1]) + fRec256[1]));
			float fTemp563 = ((1 + fTemp523) - fTemp524);
			fVec244[0] = square_wave(fTemp523);
			fRec259[0] = (fRec259[1] + (fConst25 * (square_polyblep_fast(fTemp523, fTemp524, (0.5f * fVec224[2]), ((int((fTemp563 > 1.0f)))?fTemp525:fTemp563), fVec244[1]) - fRec259[1])));
			fRec258[0] = (fConst23 * ((fRec259[0] - fRec259[1]) + fRec258[1]));
			float fTemp564 = ((1 + fTemp531) - fTemp532);
			fVec245[0] = square_wave(fTemp531);
			fRec261[0] = (fRec261[1] + (fConst25 * (square_polyblep_fast(fTemp531, fTemp532, (0.5f * fVec227[2]), ((int((fTemp564 > 1.0f)))?fTemp533:fTemp564), fVec245[1]) - fRec261[1])));
			fRec260[0] = (fConst23 * ((fRec261[0] - fRec261[1]) + fRec260[1]));
			float fTemp565 = ((1 + fTemp539) - fTemp540);
			fVec246[0] = square_wave(fTemp539);
			fRec263[0] = (fRec263[1] + (fConst25 * (square_polyblep_fast(fTemp539, fTemp540, (0.5f * fVec230[2]), ((int((fTemp565 > 1.0f)))?fTemp541:fTemp565), fVec246[1]) - fRec263[1])));
			fRec262[0] = (fConst23 * ((fRec263[0] - fRec263[1]) + fRec262[1]));
			float fTemp566 = ((1 + fTemp547) - fTemp548);
			fVec247[0] = square_wave(fTemp547);
			fRec265[0] = (fRec265[1] + (fConst25 * (square_polyblep_fast(fTemp547, fTemp548, (0.5f * fVec233[2]), ((int((fTemp566 > 1.0f)))?fTemp549:fTemp566), fVec247[1]) - fRec265[1])));
			fRec264[0] = (fConst23 * ((fRec265[0] - fRec265[1]) + fRec264[1]));
			float fTemp567 = ((1 + fTemp431) - fTemp432);
			fVec248[0] = square_wave(fTemp431);
			fRec267[0] = (fRec267[1] + (fConst25 * (square_polyblep_fast(fTemp431, fTemp432, (0.5f * fVec193[2]), ((int((fTemp567 > 1.0f)))?fTemp433:fTemp567), fVec248[1]) - fRec267[1])));
			fRec266[0] = (fConst4 * ((fRec267[0] - fRec267[1]) + fRec266[1]));
			float fTemp568 = ((1 + fTemp443) - fTemp444);
			fVec249[0] = square_wave(fTemp443);
			fRec269[0] = (fRec269[1] + (fConst25 * (square_polyblep_fast(fTemp443, fTemp444, (0.5f * fVec197[2]), ((int((fTemp568 > 1.0f)))?fTemp445:fTemp568), fVec249[1]) - fRec269[1])));
			fRec268[0] = (fConst4 * ((fRec269[0] - fRec269[1]) + fRec268[1]));
			float fTemp569 = ((1 + fTemp455) - fTemp456);
			fVec250[0] = square_wave(fTemp455);
			fRec271[0] = (fRec271[1] + (fConst25 * (square_polyblep_fast(fTemp455, fTemp456, (0.5f * fVec201[2]), ((int((fTemp569 > 1.0f)))?fTemp457:fTemp569), fVec250[1]) - fRec271[1])));
			fRec270[0] = (fConst4 * ((fRec271[0] - fRec271[1]) + fRec270[1]));
			float fTemp570 = ((1 + fTemp467) - fTemp468);
			fVec251[0] = square_wave(fTemp467);
			fRec273[0] = (fRec273[1] + (fConst25 * (square_polyblep_fast(fTemp467, fTemp468, (0.5f * fVec205[2]), ((int((fTemp570 > 1.0f)))?fTemp469:fTemp570), fVec251[1]) - fRec273[1])));
			fRec272[0] = (fConst4 * ((fRec273[0] - fRec273[1]) + fRec272[1]));
			float fTemp571 = ((1 + fTemp479) - fTemp480);
			fVec252[0] = square_wave(fTemp479);
			fRec275[0] = (fRec275[1] + (fConst2 * (square_polyblep_fast(fTemp479, fTemp480, (0.5f * fVec209[2]), ((int((fTemp571 > 1.0f)))?fTemp481:fTemp571), fVec252[1]) - fRec275[1])));
			fRec274[0] = (fConst4 * ((fRec275[0] - fRec275[1]) + fRec274[1]));
			float fTemp572 = ((1 + fTemp491) - fTemp492);
			fVec253[0] = square_wave(fTemp491);
			fRec277[0] = (fRec277[1] + (fConst2 * (square_polyblep_fast(fTemp491, fTemp492, (0.5f * fVec213[2]), ((int((fTemp572 > 1.0f)))?fTemp493:fTemp572), fVec253[1]) - fRec277[1])));
			fRec276[0] = (fConst4 * ((fRec277[0] - fRec277[1]) + fRec276[1]));
			float fTemp573 = ((1 + fTemp503) - fTemp504);
			fVec254[0] = square_wave(fTemp503);
			fRec279[0] = (fRec279[1] + (fConst2 * (square_polyblep_fast(fTemp503, fTemp504, (0.5f * fVec217[2]), ((int((fTemp573 > 1.0f)))?fTemp505:fTemp573), fVec254[1]) - fRec279[1])));
			fRec278[0] = (fConst4 * ((fRec279[0] - fRec279[1]) + fRec278[1]));
			float fTemp574 = (0.41975f * ((fRec125[0] * fTemp364) + ((fRec123[0] * fTemp361) + ((fRec121[0] * fTemp358) + ((fRec119[0] * fTemp355) + ((fRec117[0] * fTemp352) + ((fRec115[0] * fTemp349) + ((fRec113[0] * fTemp346) + ((fRec111[0] * fTemp343) + ((fRec109[0] * fTemp341) + ((fRec107[0] * fTemp339) + ((fRec105[0] * fTemp337) + ((fRec103[0] * fTemp335) + ((fRec101[0] * fTemp333) + ((fRec99[0] * fTemp331) + ((fRec97[0] * fTemp329) + ((fRec95[0] * fTemp327) + ((fRec93[0] * fTemp325) + ((fRec91[0] * fTemp323) + ((fRec84[0] * fTemp321) + ((fRec77[0] * fTemp319) + ((fRec70[0] * fTemp317) + ((fRec63[0] * fTemp315) + ((fRec56[0] * fTemp313) + ((fRec49[0] * fTemp311) + ((fRec42[0] * fTemp309) + ((fRec34[0] * fTemp307) + ((fRec26[0] * fTemp305) + ((fRec18[0] * fTemp303) + ((fRec10[0] * fTemp301) + ((fRec1[0] * fTemp299) + ((fRec278[0] * fTemp297) + ((fRec276[0] * fTemp295) + ((fRec274[0] * fTemp293) + ((fRec272[0] * fTemp291) + ((fRec270[0] * fTemp289) + ((fRec268[0] * fTemp287) + ((fRec266[0] * fTemp285) + ((fRec264[0] * fTemp283) + ((fRec262[0] * fTemp281) + ((fRec260[0] * fTemp279) + ((fRec258[0] * fTemp277) + ((fRec256[0] * fTemp275) + ((fRec254[0] * fTemp273) + ((fRec252[0] * fTemp271) + (fSlow36 * fTemp559))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp575 = (1.679f * ((fSlow36 * (fRec238[0] + (fRec234[0] + (fRec230[0] + (fRec226[0] + (fRec222[0] + (fRec217[0] + (fRec212[0] + (fRec207[0] + (fRec202[0] + (fRec197[0] + (fRec192[0] + (fRec187[0] + (fRec250[0] + (fRec248[0] + (fRec246[0] + (fRec242[0] + fRec244[0]))))))))))))))))) + (fRec264[0] + (fRec262[0] + (fRec260[0] + (fRec258[0] + (fRec256[0] + (fRec254[0] + (fRec252[0] + (fRec278[0] + (fRec276[0] + (fRec274[0] + (fRec272[0] + (fRec270[0] + (fRec268[0] + (fRec266[0] + (fRec34[0] + (fRec26[0] + (fRec18[0] + (fRec10[0] + (fRec1[0] + (fRec63[0] + (fRec56[0] + (fRec49[0] + (fRec42[0] + (fRec99[0] + (fRec97[0] + (fRec95[0] + (fRec93[0] + (fRec91[0] + (fRec84[0] + (fRec77[0] + (fRec70[0] + fTemp371)))))))))))))))))))))))))))))))));
			fVec255[0] = (fTemp575 - fTemp574);
			fRec186[0] = (fConst19 * ((fTemp575 - (fTemp574 + fVec255[1])) + fRec186[1]));
			float fTemp576 = (fTemp574 + (0.002f * (fRec186[0] * fSlow1)));
			iRec285[0] = (12345 + (1103515245 * iRec285[1]));
			float fTemp577 = faustpower<2>(float(min(1.0f, max(-1.0f, (fTemp428 + ((4.656612875245796e-16f * iRec285[0]) + fTemp397))))));
			int iTemp578 = int((iRec283[1] < iConst28));
			fRec282[0] = ((iTemp578)?(fRec282[1] + fTemp577):fTemp577);
			iRec283[0] = ((iTemp578)?(1 + iRec283[1]):1);
			fRec284[0] = ((iTemp578)?fRec284[1]:fRec282[1]);
			float fTemp579 = log10f(sqrtf((fConst29 * fRec284[0])));
			fVec256[0] = fTemp579;
			float fTemp580 = (2e+01f * fVec256[0]);
			float fTemp581 = (2e+01f * fVec256[1]);
			fRec281[0] = min(1.0f, max(0.0f, ((((int((fTemp580 > -25.0f)))?((int((fTemp581 < -25.0f)))?1.0f:0.0f):0.0f) + fRec281[1]) - ((int((fTemp581 > -35.0f)))?((int((fTemp580 < -35.0f)))?1.0f:0.0f):0.0f))));
			fRec280[0] = ((fConst26 * ((int((fRec281[0] > 0.5f)))?((int((fRec281[1] < 0.5f)))?1.0f:0.0f):0.0f)) + (fConst27 * fRec280[1]));
			float fTemp582 = min(1.0f, (fConst30 * fRec280[0]));
			fVec257[0] = fTemp582;
			float fTemp583 = (fSlow83 * (max(fSlow82, (0.25f * (fVec257[4] + (fVec257[3] + (fVec257[0] + fVec257[2]))))) * ((0.5f * fTemp576) + (0.25f * ((fTemp429 + fTemp367) + (0.008f * fTemp375))))));
			fRec286[0] = (fSlow84 + (0.98f * fRec286[1]));
			float fTemp584 = ((fRec70[0] * fTemp269) + ((fRec63[0] * fTemp267) + ((fRec56[0] * fTemp265) + ((fRec49[0] * fTemp263) + ((fRec42[0] * fTemp261) + ((fRec34[0] * fTemp241) + ((fRec26[0] * fTemp221) + ((fRec18[0] * fTemp201) + ((fRec10[0] * fTemp181) + ((fRec1[0] * fTemp161) + ((fRec278[0] * fTemp141) + ((fRec276[0] * fTemp121) + ((fRec274[0] * fTemp97) + ((fRec272[0] * fTemp73) + ((fRec270[0] * fTemp49) + ((fRec268[0] * fTemp25) + (fRec266[0] * fTemp0)))))))))))))))));
			float fTemp585 = ((fRec274[0] * fTemp269) + ((fRec272[0] * fTemp267) + ((fRec270[0] * fTemp265) + ((fRec268[0] * fTemp263) + ((fRec266[0] * fTemp261) + ((fRec264[0] * fTemp241) + ((fRec262[0] * fTemp221) + ((fRec260[0] * fTemp201) + ((fRec258[0] * fTemp181) + ((fRec256[0] * fTemp161) + ((fRec254[0] * fTemp141) + ((fRec252[0] * fTemp121) + ((fRec250[0] * fTemp97) + ((fRec248[0] * fTemp73) + ((fRec246[0] * fTemp49) + ((fRec244[0] * fTemp25) + (fRec242[0] * fTemp0)))))))))))))))));
			fRec287[0] = (fRec287[1] + (fConst31 * ((fSlow35 * ((fSlow88 * (((0.25f * fTemp559) + (0.125f * fTemp585)) + (0.0625f * fTemp584))) + (fSlow86 * ((0.25f * fTemp585) + (0.125f * fTemp584))))) - fRec287[1])));
			float fTemp586 = (fRec287[0] * (0.5f + (4.5f * fRec286[0])));
			float fTemp587 = (fSlow90 * fTemp576);
			fVec258[0] = fTemp587;
			fRec289[0] = (fConst32 * ((fVec258[0] - fVec258[1]) + fRec289[1]));
			float fTemp588 = ((fSlow91 * fTemp576) + (0.5416666666666667f * fRec289[0]));
			fVec259[0] = fTemp588;
			fRec288[0] = (fConst33 * ((fVec259[0] - fVec259[1]) + fRec288[1]));
			float fTemp589 = (0.25f * ((fRec149[0] * fTemp364) + ((fRec147[0] * fTemp361) + ((fRec145[0] * fTemp358) + ((fRec143[0] * fTemp355) + ((fRec141[0] * fTemp352) + ((fRec139[0] * fTemp349) + ((fRec137[0] * fTemp346) + ((fRec135[0] * fTemp343) + ((fRec133[0] * fTemp341) + ((fRec131[0] * fTemp339) + ((fRec129[0] * fTemp337) + ((fRec127[0] * fTemp335) + ((fRec125[0] * fTemp333) + ((fRec123[0] * fTemp331) + ((fRec121[0] * fTemp329) + ((fRec119[0] * fTemp327) + ((fRec117[0] * fTemp325) + ((fRec115[0] * fTemp323) + ((fRec113[0] * fTemp321) + ((fRec111[0] * fTemp319) + ((fRec109[0] * fTemp317) + ((fRec107[0] * fTemp315) + ((fRec105[0] * fTemp313) + ((fRec103[0] * fTemp311) + ((fRec101[0] * fTemp309) + ((fRec99[0] * fTemp307) + ((fRec97[0] * fTemp305) + ((fRec95[0] * fTemp303) + ((fRec93[0] * fTemp301) + ((fRec91[0] * fTemp299) + ((fRec84[0] * fTemp297) + ((fRec77[0] * fTemp295) + ((fRec70[0] * fTemp293) + ((fRec63[0] * fTemp291) + ((fRec56[0] * fTemp289) + ((fRec49[0] * fTemp287) + ((fRec42[0] * fTemp285) + ((fRec34[0] * fTemp283) + ((fRec26[0] * fTemp281) + ((fRec18[0] * fTemp279) + ((fRec10[0] * fTemp277) + ((fRec1[0] * fTemp275) + ((fRec278[0] * fTemp273) + ((fRec276[0] * fTemp271) + (fSlow36 * fTemp585))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp590 = ((fSlow36 * (fRec264[0] + (fRec262[0] + (fRec260[0] + (fRec258[0] + (fRec256[0] + (fRec254[0] + (fRec252[0] + (fRec250[0] + (fRec248[0] + (fRec246[0] + (fRec244[0] + (fRec242[0] + (fRec274[0] + (fRec272[0] + (fRec270[0] + (fRec266[0] + fRec268[0]))))))))))))))))) + (fRec278[0] + (fRec276[0] + (fRec34[0] + (fRec26[0] + (fRec18[0] + (fRec10[0] + (fRec1[0] + (fRec63[0] + (fRec56[0] + (fRec49[0] + (fRec42[0] + (fRec99[0] + (fRec97[0] + (fRec95[0] + (fRec93[0] + (fRec91[0] + (fRec84[0] + (fRec77[0] + (fRec70[0] + fTemp373))))))))))))))))))));
			fVec260[0] = (fTemp590 - fTemp589);
			fRec292[0] = (fConst19 * ((fTemp590 - (fTemp589 + fVec260[1])) + fRec292[1]));
			float fTemp591 = (fTemp589 + (0.002f * (fRec292[0] * fSlow1)));
			float fTemp592 = (fSlow93 * fTemp591);
			fVec261[0] = fTemp592;
			fRec291[0] = (fConst34 * ((fVec261[0] - fVec261[1]) + fRec291[1]));
			float fTemp593 = ((fSlow94 * fTemp591) + (0.5416666666666667f * fRec291[0]));
			fVec262[0] = fTemp593;
			fRec290[0] = (fConst35 * ((fVec262[0] - fVec262[1]) + fRec290[1]));
			fRec295[0] = (fConst19 * fRec295[1]);
			float fTemp594 = ((0.002f * (fRec295[0] * fSlow1)) + (0.25f * (fTemp396 + ((fRec171[0] * fTemp361) + ((fRec169[0] * fTemp358) + ((fRec167[0] * fTemp355) + ((fRec165[0] * fTemp352) + ((fRec163[0] * fTemp349) + ((fRec161[0] * fTemp346) + ((fRec159[0] * fTemp343) + ((fRec157[0] * fTemp341) + ((fRec155[0] * fTemp339) + ((fRec153[0] * fTemp337) + ((fRec151[0] * fTemp335) + ((fRec149[0] * fTemp333) + ((fRec147[0] * fTemp331) + ((fRec145[0] * fTemp329) + ((fRec143[0] * fTemp327) + ((fRec141[0] * fTemp325) + ((fRec139[0] * fTemp323) + ((fRec137[0] * fTemp321) + ((fRec135[0] * fTemp319) + ((fRec133[0] * fTemp317) + ((fRec131[0] * fTemp315) + ((fRec129[0] * fTemp313) + ((fRec127[0] * fTemp311) + ((fRec125[0] * fTemp309) + ((fRec123[0] * fTemp307) + ((fRec121[0] * fTemp305) + ((fRec119[0] * fTemp303) + ((fRec117[0] * fTemp301) + ((fRec115[0] * fTemp299) + ((fRec113[0] * fTemp297) + ((fRec111[0] * fTemp295) + ((fRec109[0] * fTemp293) + ((fRec107[0] * fTemp291) + ((fRec105[0] * fTemp289) + ((fRec103[0] * fTemp287) + ((fRec101[0] * fTemp285) + ((fRec99[0] * fTemp283) + ((fRec97[0] * fTemp281) + ((fRec95[0] * fTemp279) + ((fRec93[0] * fTemp277) + ((fRec91[0] * fTemp275) + ((fRec84[0] * fTemp273) + ((fRec77[0] * fTemp271) + (fSlow36 * fTemp584)))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp595 = (fSlow96 * fTemp594);
			fVec263[0] = fTemp595;
			fRec294[0] = (fConst36 * ((fVec263[0] - fVec263[1]) + fRec294[1]));
			float fTemp596 = ((fSlow97 * fTemp594) + (0.5416666666666667f * fRec294[0]));
			fVec264[0] = fTemp596;
			fRec293[0] = (fConst37 * ((fVec264[0] - fVec264[1]) + fRec293[1]));
			float fTemp597 = (0.25f * (fTemp396 + (fTemp395 + (fTemp394 + (fTemp393 + (fTemp392 + (fTemp391 + (fTemp390 + (fTemp389 + (fTemp388 + (fTemp387 + (fTemp386 + (fTemp385 + (fTemp384 + ((fRec171[0] * fTemp331) + ((fRec169[0] * fTemp329) + ((fRec167[0] * fTemp327) + ((fRec165[0] * fTemp325) + ((fRec163[0] * fTemp323) + ((fRec161[0] * fTemp321) + ((fRec159[0] * fTemp319) + ((fRec157[0] * fTemp317) + ((fRec155[0] * fTemp315) + ((fRec153[0] * fTemp313) + ((fRec151[0] * fTemp311) + ((fRec149[0] * fTemp309) + ((fRec147[0] * fTemp307) + ((fRec145[0] * fTemp305) + ((fRec143[0] * fTemp303) + ((fRec141[0] * fTemp301) + ((fRec139[0] * fTemp299) + ((fRec137[0] * fTemp297) + ((fRec135[0] * fTemp295) + ((fRec133[0] * fTemp293) + ((fRec131[0] * fTemp291) + ((fRec129[0] * fTemp289) + ((fRec127[0] * fTemp287) + ((fRec125[0] * fTemp285) + ((fRec123[0] * fTemp283) + ((fRec121[0] * fTemp281) + ((fRec119[0] * fTemp279) + ((fRec117[0] * fTemp277) + ((fRec115[0] * fTemp275) + ((fRec113[0] * fTemp273) + ((fRec111[0] * fTemp271) + (fSlow36 * ((fRec109[0] * fTemp269) + ((fRec107[0] * fTemp267) + ((fRec105[0] * fTemp265) + ((fRec103[0] * fTemp263) + ((fRec101[0] * fTemp261) + ((fRec99[0] * fTemp241) + ((fRec97[0] * fTemp221) + ((fRec95[0] * fTemp201) + ((fRec93[0] * fTemp181) + ((fRec91[0] * fTemp161) + ((fRec84[0] * fTemp141) + ((fRec77[0] * fTemp121) + ((fRec70[0] * fTemp97) + ((fRec63[0] * fTemp73) + ((fRec56[0] * fTemp49) + ((fRec49[0] * fTemp25) + (fRec42[0] * fTemp0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp598 = ((fSlow36 * (fRec63[0] + (fRec56[0] + (fRec49[0] + (fRec42[0] + (fRec99[0] + (fRec97[0] + (fRec95[0] + (fRec93[0] + (fRec91[0] + (fRec84[0] + (fRec77[0] + (fRec70[0] + fTemp369))))))))))))) + (fRec185[0] + (fRec184[0] + (fRec183[0] + (fRec182[0] + (fRec180[0] + (fRec179[0] + (fRec178[0] + (fRec177[0] + (fRec176[0] + (fRec175[0] + (fRec174[0] + ((2 * fRec173[0]) + (fRec171[0] + (fRec169[0] + (fRec167[0] + (fRec165[0] + (fRec163[0] + (fRec161[0] + (fRec159[0] + (fRec157[0] + (fRec155[0] + (fRec153[0] + (fRec151[0] + (fRec149[0] + (fRec147[0] + (fRec145[0] + (fRec143[0] + (fRec141[0] + (fRec139[0] + (fRec137[0] + (fRec135[0] + (fRec133[0] + (fRec131[0] + (fRec129[0] + (fRec127[0] + (fRec125[0] + (fRec123[0] + (fRec121[0] + (fRec119[0] + (fRec117[0] + (fRec115[0] + (fRec111[0] + fRec113[0])))))))))))))))))))))))))))))))))))))))))));
			fVec265[0] = (fTemp598 - fTemp597);
			fRec298[0] = (fConst19 * ((fTemp598 - (fTemp597 + fVec265[1])) + fRec298[1]));
			float fTemp599 = (fTemp597 + (0.002f * (fRec298[0] * fSlow1)));
			float fTemp600 = (fSlow99 * fTemp599);
			fVec266[0] = fTemp600;
			fRec297[0] = (fConst38 * ((fVec266[0] - fVec266[1]) + fRec297[1]));
			float fTemp601 = ((fSlow100 * fTemp599) + (0.5416666666666667f * fRec297[0]));
			fVec267[0] = fTemp601;
			fRec296[0] = (fConst39 * ((fVec267[0] - fVec267[1]) + fRec296[1]));
			fRec300[0] = (fRec300[1] + (fConst8 * (fVec258[0] - fRec300[1])));
			fRec299[0] = (fRec299[1] + (fConst8 * (fRec300[0] - fRec299[1])));
			fRec302[0] = (fRec302[1] + (fConst10 * (fVec261[0] - fRec302[1])));
			fRec301[0] = (fRec301[1] + (fConst10 * (fRec302[0] - fRec301[1])));
			fRec304[0] = (fRec304[1] + (fConst13 * (fVec263[0] - fRec304[1])));
			fRec303[0] = (fRec303[1] + (fConst13 * (fRec304[0] - fRec303[1])));
			fRec306[0] = (fRec306[1] + (fConst16 * (fVec266[0] - fRec306[1])));
			fRec305[0] = (fRec305[1] + (fConst16 * (fRec306[0] - fRec305[1])));
			float fTemp602 = (fSlow105 * ((fSlow103 * (((fRec305[0] + fRec303[0]) + fRec301[0]) + fRec299[0])) + (fSlow102 * (((fRec296[0] + fRec293[0]) + fRec290[0]) + fRec288[0]))));
			float fTemp603 = (0.25f * ((fRec177[0] * fTemp364) + ((fRec176[0] * fTemp361) + ((fRec175[0] * fTemp358) + ((fRec174[0] * fTemp355) + ((fRec173[0] * fTemp352) + ((fRec185[0] * fTemp349) + ((fRec184[0] * fTemp346) + ((fRec183[0] * fTemp343) + ((fRec182[0] * fTemp341) + ((fRec180[0] * fTemp339) + ((fRec179[0] * fTemp337) + ((fRec178[0] * fTemp335) + ((fRec177[0] * fTemp333) + ((fRec176[0] * fTemp331) + ((fRec175[0] * fTemp329) + ((fRec174[0] * fTemp327) + ((fRec173[0] * fTemp325) + ((fRec171[0] * fTemp323) + ((fRec169[0] * fTemp321) + ((fRec167[0] * fTemp319) + ((fRec165[0] * fTemp317) + ((fRec163[0] * fTemp315) + ((fRec161[0] * fTemp313) + ((fRec159[0] * fTemp311) + ((fRec157[0] * fTemp309) + ((fRec155[0] * fTemp307) + ((fRec153[0] * fTemp305) + ((fRec151[0] * fTemp303) + ((fRec149[0] * fTemp301) + ((fRec147[0] * fTemp299) + ((fRec145[0] * fTemp297) + ((fRec143[0] * fTemp295) + ((fRec141[0] * fTemp293) + ((fRec139[0] * fTemp291) + ((fRec137[0] * fTemp289) + ((fRec135[0] * fTemp287) + ((fRec133[0] * fTemp285) + ((fRec131[0] * fTemp283) + ((fRec129[0] * fTemp281) + ((fRec127[0] * fTemp279) + ((fRec125[0] * fTemp277) + ((fRec123[0] * fTemp275) + ((fRec121[0] * fTemp273) + ((fRec119[0] * fTemp271) + (fSlow36 * ((fRec117[0] * fTemp269) + ((fRec115[0] * fTemp267) + ((fRec113[0] * fTemp265) + ((fRec111[0] * fTemp263) + ((fRec109[0] * fTemp261) + ((fRec107[0] * fTemp241) + ((fRec105[0] * fTemp221) + ((fRec103[0] * fTemp201) + ((fRec101[0] * fTemp181) + ((fRec99[0] * fTemp161) + ((fRec97[0] * fTemp141) + ((fRec95[0] * fTemp121) + ((fRec93[0] * fTemp97) + ((fRec91[0] * fTemp73) + ((fRec84[0] * fTemp49) + ((fRec77[0] * fTemp25) + (fRec70[0] * fTemp0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp604 = ((fRec177[0] + (fRec175[0] + fRec176[0])) + (2 * ((fTemp398 + (fTemp399 + (fTemp400 + (fTemp401 + (fTemp402 + (fTemp403 + (fTemp404 + (fTemp405 + (fTemp406 + (fTemp407 + (fRec174[0] + (fRec173[0] + (fTemp408 + (fTemp409 + (fTemp410 + (fTemp411 + (fTemp412 + (fTemp413 + (fTemp414 + (fTemp415 + (fTemp416 + (fTemp417 + (fTemp418 + (fTemp419 + (fTemp420 + (fTemp421 + (fTemp422 + (fTemp423 + (fTemp424 + (fTemp425 + (fTemp426 + ((((((((0.5f * fRec119[0]) + (0.5f * fRec121[0])) + (0.5f * fRec123[0])) + (0.5f * fRec125[0])) + (0.5f * fRec127[0])) + (0.5f * fRec129[0])) + (0.5f * fRec131[0])) + (0.5f * fRec133[0]))))))))))))))))))))))))))))))))) + (fSlow81 * (fRec99[0] + (fRec97[0] + (fRec95[0] + (fRec93[0] + (fRec91[0] + (fRec84[0] + (fRec77[0] + (fRec70[0] + fTemp370))))))))))));
			fVec268[0] = (fTemp604 - fTemp603);
			fRec307[0] = (fConst19 * ((fTemp604 - (fTemp603 + fVec268[1])) + fRec307[1]));
			float fTemp605 = (fSlow120 * ((fSlow119 * fTemp429) + ((fSlow117 * (fTemp603 + (0.002f * (fRec307[0] * fSlow1)))) + ((fSlow115 * fTemp599) + ((fSlow113 * (fTemp368 + (0.002f * fTemp375))) + ((fSlow111 * fTemp594) + ((fSlow109 * fTemp576) + (fSlow107 * fTemp591))))))));
			fRec308[0] = (fSlow121 + (0.98f * fRec308[1]));
			float fTemp606 = (0.001f + (0.05f * fRec308[0]));
			output0[i] = (FAUSTFLOAT)(fTemp606 * (fTemp605 + (fTemp602 + (fTemp586 + fTemp583))));
			output1[i] = (FAUSTFLOAT)(fTemp606 * (fTemp605 + (fTemp583 + fTemp602)));
			output2[i] = (FAUSTFLOAT)(fTemp586 * fTemp606);
			// post processing
			fRec308[1] = fRec308[0];
			fRec307[1] = fRec307[0];
			fVec268[1] = fVec268[0];
			fRec305[1] = fRec305[0];
			fRec306[1] = fRec306[0];
			fRec303[1] = fRec303[0];
			fRec304[1] = fRec304[0];
			fRec301[1] = fRec301[0];
			fRec302[1] = fRec302[0];
			fRec299[1] = fRec299[0];
			fRec300[1] = fRec300[0];
			fRec296[1] = fRec296[0];
			fVec267[1] = fVec267[0];
			fRec297[1] = fRec297[0];
			fVec266[1] = fVec266[0];
			fRec298[1] = fRec298[0];
			fVec265[1] = fVec265[0];
			fRec293[1] = fRec293[0];
			fVec264[1] = fVec264[0];
			fRec294[1] = fRec294[0];
			fVec263[1] = fVec263[0];
			fRec295[1] = fRec295[0];
			fRec290[1] = fRec290[0];
			fVec262[1] = fVec262[0];
			fRec291[1] = fRec291[0];
			fVec261[1] = fVec261[0];
			fRec292[1] = fRec292[0];
			fVec260[1] = fVec260[0];
			fRec288[1] = fRec288[0];
			fVec259[1] = fVec259[0];
			fRec289[1] = fRec289[0];
			fVec258[1] = fVec258[0];
			fRec287[1] = fRec287[0];
			fRec286[1] = fRec286[0];
			for (int i=4; i>0; i--) fVec257[i] = fVec257[i-1];
			fRec280[1] = fRec280[0];
			fRec281[1] = fRec281[0];
			fVec256[1] = fVec256[0];
			fRec284[1] = fRec284[0];
			iRec283[1] = iRec283[0];
			fRec282[1] = fRec282[0];
			iRec285[1] = iRec285[0];
			fRec186[1] = fRec186[0];
			fVec255[1] = fVec255[0];
			fRec278[1] = fRec278[0];
			fRec279[1] = fRec279[0];
			fVec254[1] = fVec254[0];
			fRec276[1] = fRec276[0];
			fRec277[1] = fRec277[0];
			fVec253[1] = fVec253[0];
			fRec274[1] = fRec274[0];
			fRec275[1] = fRec275[0];
			fVec252[1] = fVec252[0];
			fRec272[1] = fRec272[0];
			fRec273[1] = fRec273[0];
			fVec251[1] = fVec251[0];
			fRec270[1] = fRec270[0];
			fRec271[1] = fRec271[0];
			fVec250[1] = fVec250[0];
			fRec268[1] = fRec268[0];
			fRec269[1] = fRec269[0];
			fVec249[1] = fVec249[0];
			fRec266[1] = fRec266[0];
			fRec267[1] = fRec267[0];
			fVec248[1] = fVec248[0];
			fRec264[1] = fRec264[0];
			fRec265[1] = fRec265[0];
			fVec247[1] = fVec247[0];
			fRec262[1] = fRec262[0];
			fRec263[1] = fRec263[0];
			fVec246[1] = fVec246[0];
			fRec260[1] = fRec260[0];
			fRec261[1] = fRec261[0];
			fVec245[1] = fVec245[0];
			fRec258[1] = fRec258[0];
			fRec259[1] = fRec259[0];
			fVec244[1] = fVec244[0];
			fRec256[1] = fRec256[0];
			fRec257[1] = fRec257[0];
			fVec243[1] = fVec243[0];
			fRec254[1] = fRec254[0];
			fRec255[1] = fRec255[0];
			fVec242[1] = fVec242[0];
			fRec252[1] = fRec252[0];
			fRec253[1] = fRec253[0];
			fVec241[1] = fVec241[0];
			fRec250[1] = fRec250[0];
			fRec251[1] = fRec251[0];
			fVec240[1] = fVec240[0];
			fRec248[1] = fRec248[0];
			fRec249[1] = fRec249[0];
			fVec239[1] = fVec239[0];
			fRec246[1] = fRec246[0];
			fRec247[1] = fRec247[0];
			fVec238[1] = fVec238[0];
			fRec244[1] = fRec244[0];
			fRec245[1] = fRec245[0];
			fVec237[1] = fVec237[0];
			fRec242[1] = fRec242[0];
			fRec243[1] = fRec243[0];
			fVec236[1] = fVec236[0];
			fRec238[1] = fRec238[0];
			fRec239[1] = fRec239[0];
			fVec235[1] = fVec235[0];
			fVec234[2] = fVec234[1]; fVec234[1] = fVec234[0];
			iRec241[1] = iRec241[0];
			fVec233[2] = fVec233[1]; fVec233[1] = fVec233[0];
			iRec240[1] = iRec240[0];
			fRec234[1] = fRec234[0];
			fRec235[1] = fRec235[0];
			fVec232[1] = fVec232[0];
			fVec231[2] = fVec231[1]; fVec231[1] = fVec231[0];
			iRec237[1] = iRec237[0];
			fVec230[2] = fVec230[1]; fVec230[1] = fVec230[0];
			iRec236[1] = iRec236[0];
			fRec230[1] = fRec230[0];
			fRec231[1] = fRec231[0];
			fVec229[1] = fVec229[0];
			fVec228[2] = fVec228[1]; fVec228[1] = fVec228[0];
			iRec233[1] = iRec233[0];
			fVec227[2] = fVec227[1]; fVec227[1] = fVec227[0];
			iRec232[1] = iRec232[0];
			fRec226[1] = fRec226[0];
			fRec227[1] = fRec227[0];
			fVec226[1] = fVec226[0];
			fVec225[2] = fVec225[1]; fVec225[1] = fVec225[0];
			iRec229[1] = iRec229[0];
			fVec224[2] = fVec224[1]; fVec224[1] = fVec224[0];
			iRec228[1] = iRec228[0];
			fRec222[1] = fRec222[0];
			fRec223[1] = fRec223[0];
			fVec223[1] = fVec223[0];
			fVec222[2] = fVec222[1]; fVec222[1] = fVec222[0];
			iRec225[1] = iRec225[0];
			fVec221[2] = fVec221[1]; fVec221[1] = fVec221[0];
			iRec224[1] = iRec224[0];
			fRec217[1] = fRec217[0];
			fRec218[1] = fRec218[0];
			fVec220[1] = fVec220[0];
			fVec219[2] = fVec219[1]; fVec219[1] = fVec219[0];
			iRec221[1] = iRec221[0];
			fVec218[2] = fVec218[1]; fVec218[1] = fVec218[0];
			iRec220[1] = iRec220[0];
			fVec217[2] = fVec217[1]; fVec217[1] = fVec217[0];
			iRec219[1] = iRec219[0];
			fRec212[1] = fRec212[0];
			fRec213[1] = fRec213[0];
			fVec216[1] = fVec216[0];
			fVec215[2] = fVec215[1]; fVec215[1] = fVec215[0];
			iRec216[1] = iRec216[0];
			fVec214[2] = fVec214[1]; fVec214[1] = fVec214[0];
			iRec215[1] = iRec215[0];
			fVec213[2] = fVec213[1]; fVec213[1] = fVec213[0];
			iRec214[1] = iRec214[0];
			fRec207[1] = fRec207[0];
			fRec208[1] = fRec208[0];
			fVec212[1] = fVec212[0];
			fVec211[2] = fVec211[1]; fVec211[1] = fVec211[0];
			iRec211[1] = iRec211[0];
			fVec210[2] = fVec210[1]; fVec210[1] = fVec210[0];
			iRec210[1] = iRec210[0];
			fVec209[2] = fVec209[1]; fVec209[1] = fVec209[0];
			iRec209[1] = iRec209[0];
			fRec202[1] = fRec202[0];
			fRec203[1] = fRec203[0];
			fVec208[1] = fVec208[0];
			fVec207[2] = fVec207[1]; fVec207[1] = fVec207[0];
			iRec206[1] = iRec206[0];
			fVec206[2] = fVec206[1]; fVec206[1] = fVec206[0];
			iRec205[1] = iRec205[0];
			fVec205[2] = fVec205[1]; fVec205[1] = fVec205[0];
			iRec204[1] = iRec204[0];
			fRec197[1] = fRec197[0];
			fRec198[1] = fRec198[0];
			fVec204[1] = fVec204[0];
			fVec203[2] = fVec203[1]; fVec203[1] = fVec203[0];
			iRec201[1] = iRec201[0];
			fVec202[2] = fVec202[1]; fVec202[1] = fVec202[0];
			iRec200[1] = iRec200[0];
			fVec201[2] = fVec201[1]; fVec201[1] = fVec201[0];
			iRec199[1] = iRec199[0];
			fRec192[1] = fRec192[0];
			fRec193[1] = fRec193[0];
			fVec200[1] = fVec200[0];
			fVec199[2] = fVec199[1]; fVec199[1] = fVec199[0];
			iRec196[1] = iRec196[0];
			fVec198[2] = fVec198[1]; fVec198[1] = fVec198[0];
			iRec195[1] = iRec195[0];
			fVec197[2] = fVec197[1]; fVec197[1] = fVec197[0];
			iRec194[1] = iRec194[0];
			fRec187[1] = fRec187[0];
			fRec188[1] = fRec188[0];
			fVec196[1] = fVec196[0];
			fVec195[2] = fVec195[1]; fVec195[1] = fVec195[0];
			iRec191[1] = iRec191[0];
			fVec194[2] = fVec194[1]; fVec194[1] = fVec194[0];
			iRec190[1] = iRec190[0];
			fVec193[2] = fVec193[1]; fVec193[1] = fVec193[0];
			iRec189[1] = iRec189[0];
			fRec181[1] = fRec181[0];
			fVec192[1] = fVec192[0];
			fRec185[1] = fRec185[0];
			fVec191[1] = fVec191[0];
			fVec190[1] = fVec190[0];
			fRec184[1] = fRec184[0];
			fVec189[1] = fVec189[0];
			fVec188[1] = fVec188[0];
			fRec183[1] = fRec183[0];
			fVec187[1] = fVec187[0];
			fVec186[1] = fVec186[0];
			fRec182[1] = fRec182[0];
			fVec185[1] = fVec185[0];
			fVec184[1] = fVec184[0];
			fRec0[1] = fRec0[0];
			fVec183[1] = fVec183[0];
			fRec180[1] = fRec180[0];
			fVec182[1] = fVec182[0];
			fVec181[1] = fVec181[0];
			for (int i=3; i>0; i--) fVec180[i] = fVec180[i-1];
			fRec179[1] = fRec179[0];
			fVec179[1] = fVec179[0];
			fVec178[1] = fVec178[0];
			for (int i=3; i>0; i--) fVec177[i] = fVec177[i-1];
			fRec178[1] = fRec178[0];
			fVec176[1] = fVec176[0];
			fVec175[1] = fVec175[0];
			for (int i=3; i>0; i--) fVec174[i] = fVec174[i-1];
			fRec177[1] = fRec177[0];
			fVec173[1] = fVec173[0];
			fVec172[1] = fVec172[0];
			for (int i=3; i>0; i--) fVec171[i] = fVec171[i-1];
			fRec176[1] = fRec176[0];
			fVec170[1] = fVec170[0];
			fVec169[1] = fVec169[0];
			for (int i=3; i>0; i--) fVec168[i] = fVec168[i-1];
			fRec175[1] = fRec175[0];
			fVec167[1] = fVec167[0];
			fVec166[1] = fVec166[0];
			for (int i=3; i>0; i--) fVec165[i] = fVec165[i-1];
			fRec174[1] = fRec174[0];
			fVec164[1] = fVec164[0];
			fVec163[1] = fVec163[0];
			for (int i=3; i>0; i--) fVec162[i] = fVec162[i-1];
			fRec173[1] = fRec173[0];
			fVec161[1] = fVec161[0];
			fVec160[1] = fVec160[0];
			for (int i=3; i>0; i--) fVec159[i] = fVec159[i-1];
			fRec171[1] = fRec171[0];
			fRec172[1] = fRec172[0];
			fVec158[1] = fVec158[0];
			for (int i=3; i>0; i--) fVec157[i] = fVec157[i-1];
			fRec169[1] = fRec169[0];
			fRec170[1] = fRec170[0];
			fVec156[1] = fVec156[0];
			for (int i=3; i>0; i--) fVec155[i] = fVec155[i-1];
			fRec167[1] = fRec167[0];
			fRec168[1] = fRec168[0];
			fVec154[1] = fVec154[0];
			for (int i=3; i>0; i--) fVec153[i] = fVec153[i-1];
			fRec165[1] = fRec165[0];
			fRec166[1] = fRec166[0];
			fVec152[1] = fVec152[0];
			for (int i=3; i>0; i--) fVec151[i] = fVec151[i-1];
			fRec163[1] = fRec163[0];
			fRec164[1] = fRec164[0];
			fVec150[1] = fVec150[0];
			for (int i=3; i>0; i--) fVec149[i] = fVec149[i-1];
			fRec161[1] = fRec161[0];
			fRec162[1] = fRec162[0];
			fVec148[1] = fVec148[0];
			for (int i=3; i>0; i--) fVec147[i] = fVec147[i-1];
			fRec159[1] = fRec159[0];
			fRec160[1] = fRec160[0];
			fVec146[1] = fVec146[0];
			for (int i=3; i>0; i--) fVec145[i] = fVec145[i-1];
			fRec157[1] = fRec157[0];
			fRec158[1] = fRec158[0];
			fVec144[1] = fVec144[0];
			for (int i=3; i>0; i--) fVec143[i] = fVec143[i-1];
			fRec155[1] = fRec155[0];
			fRec156[1] = fRec156[0];
			fVec142[1] = fVec142[0];
			for (int i=3; i>0; i--) fVec141[i] = fVec141[i-1];
			fRec153[1] = fRec153[0];
			fRec154[1] = fRec154[0];
			fVec140[1] = fVec140[0];
			for (int i=3; i>0; i--) fVec139[i] = fVec139[i-1];
			fRec151[1] = fRec151[0];
			fRec152[1] = fRec152[0];
			fVec138[1] = fVec138[0];
			for (int i=3; i>0; i--) fVec137[i] = fVec137[i-1];
			fRec149[1] = fRec149[0];
			fRec150[1] = fRec150[0];
			fVec136[1] = fVec136[0];
			for (int i=3; i>0; i--) fVec135[i] = fVec135[i-1];
			fRec147[1] = fRec147[0];
			fRec148[1] = fRec148[0];
			fVec134[1] = fVec134[0];
			for (int i=3; i>0; i--) fVec133[i] = fVec133[i-1];
			fRec145[1] = fRec145[0];
			fRec146[1] = fRec146[0];
			fVec132[1] = fVec132[0];
			for (int i=3; i>0; i--) fVec131[i] = fVec131[i-1];
			fRec143[1] = fRec143[0];
			fRec144[1] = fRec144[0];
			fVec130[1] = fVec130[0];
			for (int i=3; i>0; i--) fVec129[i] = fVec129[i-1];
			fRec141[1] = fRec141[0];
			fRec142[1] = fRec142[0];
			fVec128[1] = fVec128[0];
			for (int i=3; i>0; i--) fVec127[i] = fVec127[i-1];
			fRec139[1] = fRec139[0];
			fRec140[1] = fRec140[0];
			fVec126[1] = fVec126[0];
			for (int i=3; i>0; i--) fVec125[i] = fVec125[i-1];
			fRec137[1] = fRec137[0];
			fRec138[1] = fRec138[0];
			fVec124[1] = fVec124[0];
			for (int i=3; i>0; i--) fVec123[i] = fVec123[i-1];
			fRec135[1] = fRec135[0];
			fRec136[1] = fRec136[0];
			fVec122[1] = fVec122[0];
			for (int i=3; i>0; i--) fVec121[i] = fVec121[i-1];
			fRec133[1] = fRec133[0];
			fRec134[1] = fRec134[0];
			fVec120[1] = fVec120[0];
			for (int i=3; i>0; i--) fVec119[i] = fVec119[i-1];
			fRec131[1] = fRec131[0];
			fRec132[1] = fRec132[0];
			fVec118[1] = fVec118[0];
			for (int i=3; i>0; i--) fVec117[i] = fVec117[i-1];
			fRec129[1] = fRec129[0];
			fRec130[1] = fRec130[0];
			fVec116[1] = fVec116[0];
			for (int i=3; i>0; i--) fVec115[i] = fVec115[i-1];
			fRec127[1] = fRec127[0];
			fRec128[1] = fRec128[0];
			fVec114[1] = fVec114[0];
			for (int i=3; i>0; i--) fVec113[i] = fVec113[i-1];
			fRec125[1] = fRec125[0];
			fRec126[1] = fRec126[0];
			fVec112[1] = fVec112[0];
			for (int i=3; i>0; i--) fVec111[i] = fVec111[i-1];
			fRec123[1] = fRec123[0];
			fRec124[1] = fRec124[0];
			fVec110[1] = fVec110[0];
			for (int i=3; i>0; i--) fVec109[i] = fVec109[i-1];
			fRec121[1] = fRec121[0];
			fRec122[1] = fRec122[0];
			fVec108[1] = fVec108[0];
			for (int i=3; i>0; i--) fVec107[i] = fVec107[i-1];
			fRec119[1] = fRec119[0];
			fRec120[1] = fRec120[0];
			fVec106[1] = fVec106[0];
			for (int i=3; i>0; i--) fVec105[i] = fVec105[i-1];
			fRec117[1] = fRec117[0];
			fRec118[1] = fRec118[0];
			fVec104[1] = fVec104[0];
			for (int i=3; i>0; i--) fVec103[i] = fVec103[i-1];
			fRec115[1] = fRec115[0];
			fRec116[1] = fRec116[0];
			fVec102[1] = fVec102[0];
			for (int i=3; i>0; i--) fVec101[i] = fVec101[i-1];
			fRec113[1] = fRec113[0];
			fRec114[1] = fRec114[0];
			fVec100[1] = fVec100[0];
			for (int i=3; i>0; i--) fVec99[i] = fVec99[i-1];
			fRec111[1] = fRec111[0];
			fRec112[1] = fRec112[0];
			fVec98[1] = fVec98[0];
			for (int i=3; i>0; i--) fVec97[i] = fVec97[i-1];
			fRec109[1] = fRec109[0];
			fRec110[1] = fRec110[0];
			fVec96[1] = fVec96[0];
			for (int i=3; i>0; i--) fVec95[i] = fVec95[i-1];
			fRec107[1] = fRec107[0];
			fRec108[1] = fRec108[0];
			fVec94[1] = fVec94[0];
			for (int i=3; i>0; i--) fVec93[i] = fVec93[i-1];
			fRec105[1] = fRec105[0];
			fRec106[1] = fRec106[0];
			fVec92[1] = fVec92[0];
			for (int i=3; i>0; i--) fVec91[i] = fVec91[i-1];
			fRec103[1] = fRec103[0];
			fRec104[1] = fRec104[0];
			fVec90[1] = fVec90[0];
			for (int i=3; i>0; i--) fVec89[i] = fVec89[i-1];
			fRec101[1] = fRec101[0];
			fRec102[1] = fRec102[0];
			fVec88[1] = fVec88[0];
			for (int i=3; i>0; i--) fVec87[i] = fVec87[i-1];
			fRec99[1] = fRec99[0];
			fRec100[1] = fRec100[0];
			fVec86[1] = fVec86[0];
			for (int i=3; i>0; i--) fVec85[i] = fVec85[i-1];
			fRec97[1] = fRec97[0];
			fRec98[1] = fRec98[0];
			fVec84[1] = fVec84[0];
			for (int i=3; i>0; i--) fVec83[i] = fVec83[i-1];
			fRec95[1] = fRec95[0];
			fRec96[1] = fRec96[0];
			fVec82[1] = fVec82[0];
			for (int i=3; i>0; i--) fVec81[i] = fVec81[i-1];
			fRec93[1] = fRec93[0];
			fRec94[1] = fRec94[0];
			fVec80[1] = fVec80[0];
			for (int i=3; i>0; i--) fVec79[i] = fVec79[i-1];
			fRec91[1] = fRec91[0];
			fRec92[1] = fRec92[0];
			fVec78[1] = fVec78[0];
			for (int i=3; i>0; i--) fVec77[i] = fVec77[i-1];
			fRec84[1] = fRec84[0];
			fRec85[1] = fRec85[0];
			fVec76[1] = fVec76[0];
			fVec75[2] = fVec75[1]; fVec75[1] = fVec75[0];
			iRec90[1] = iRec90[0];
			fVec74[2] = fVec74[1]; fVec74[1] = fVec74[0];
			iRec89[1] = iRec89[0];
			fVec73[2] = fVec73[1]; fVec73[1] = fVec73[0];
			iRec88[1] = iRec88[0];
			fVec72[2] = fVec72[1]; fVec72[1] = fVec72[0];
			iRec86[1] = iRec86[0];
			fRec87[2] = fRec87[1]; fRec87[1] = fRec87[0];
			for (int i=3; i>0; i--) fVec71[i] = fVec71[i-1];
			fRec77[1] = fRec77[0];
			fRec78[1] = fRec78[0];
			fVec70[1] = fVec70[0];
			fVec69[2] = fVec69[1]; fVec69[1] = fVec69[0];
			iRec83[1] = iRec83[0];
			fVec68[2] = fVec68[1]; fVec68[1] = fVec68[0];
			iRec82[1] = iRec82[0];
			fVec67[2] = fVec67[1]; fVec67[1] = fVec67[0];
			iRec81[1] = iRec81[0];
			fVec66[2] = fVec66[1]; fVec66[1] = fVec66[0];
			iRec79[1] = iRec79[0];
			fRec80[2] = fRec80[1]; fRec80[1] = fRec80[0];
			for (int i=3; i>0; i--) fVec65[i] = fVec65[i-1];
			fRec70[1] = fRec70[0];
			fRec71[1] = fRec71[0];
			fVec64[1] = fVec64[0];
			fVec63[2] = fVec63[1]; fVec63[1] = fVec63[0];
			iRec76[1] = iRec76[0];
			fVec62[2] = fVec62[1]; fVec62[1] = fVec62[0];
			iRec75[1] = iRec75[0];
			fVec61[2] = fVec61[1]; fVec61[1] = fVec61[0];
			iRec74[1] = iRec74[0];
			fVec60[2] = fVec60[1]; fVec60[1] = fVec60[0];
			iRec72[1] = iRec72[0];
			fRec73[2] = fRec73[1]; fRec73[1] = fRec73[0];
			for (int i=3; i>0; i--) fVec59[i] = fVec59[i-1];
			fRec63[1] = fRec63[0];
			fRec64[1] = fRec64[0];
			fVec58[1] = fVec58[0];
			fVec57[2] = fVec57[1]; fVec57[1] = fVec57[0];
			iRec69[1] = iRec69[0];
			fVec56[2] = fVec56[1]; fVec56[1] = fVec56[0];
			iRec68[1] = iRec68[0];
			fVec55[2] = fVec55[1]; fVec55[1] = fVec55[0];
			iRec67[1] = iRec67[0];
			fVec54[2] = fVec54[1]; fVec54[1] = fVec54[0];
			iRec65[1] = iRec65[0];
			fRec66[2] = fRec66[1]; fRec66[1] = fRec66[0];
			for (int i=3; i>0; i--) fVec53[i] = fVec53[i-1];
			fRec56[1] = fRec56[0];
			fRec57[1] = fRec57[0];
			fVec52[1] = fVec52[0];
			fVec51[2] = fVec51[1]; fVec51[1] = fVec51[0];
			iRec62[1] = iRec62[0];
			fVec50[2] = fVec50[1]; fVec50[1] = fVec50[0];
			iRec61[1] = iRec61[0];
			fVec49[2] = fVec49[1]; fVec49[1] = fVec49[0];
			iRec60[1] = iRec60[0];
			fVec48[2] = fVec48[1]; fVec48[1] = fVec48[0];
			iRec58[1] = iRec58[0];
			fRec59[2] = fRec59[1]; fRec59[1] = fRec59[0];
			for (int i=3; i>0; i--) fVec47[i] = fVec47[i-1];
			fRec49[1] = fRec49[0];
			fRec50[1] = fRec50[0];
			fVec46[1] = fVec46[0];
			fVec45[2] = fVec45[1]; fVec45[1] = fVec45[0];
			iRec55[1] = iRec55[0];
			fVec44[2] = fVec44[1]; fVec44[1] = fVec44[0];
			iRec54[1] = iRec54[0];
			fVec43[2] = fVec43[1]; fVec43[1] = fVec43[0];
			iRec53[1] = iRec53[0];
			fVec42[2] = fVec42[1]; fVec42[1] = fVec42[0];
			iRec51[1] = iRec51[0];
			fRec52[2] = fRec52[1]; fRec52[1] = fRec52[0];
			for (int i=3; i>0; i--) fVec41[i] = fVec41[i-1];
			fRec42[1] = fRec42[0];
			fRec43[1] = fRec43[0];
			fVec40[1] = fVec40[0];
			fVec39[2] = fVec39[1]; fVec39[1] = fVec39[0];
			iRec48[1] = iRec48[0];
			fVec38[2] = fVec38[1]; fVec38[1] = fVec38[0];
			iRec47[1] = iRec47[0];
			fVec37[2] = fVec37[1]; fVec37[1] = fVec37[0];
			iRec46[1] = iRec46[0];
			fVec36[2] = fVec36[1]; fVec36[1] = fVec36[0];
			iRec44[1] = iRec44[0];
			fRec45[2] = fRec45[1]; fRec45[1] = fRec45[0];
			for (int i=3; i>0; i--) fVec35[i] = fVec35[i-1];
			fRec34[1] = fRec34[0];
			fRec35[1] = fRec35[0];
			fVec34[1] = fVec34[0];
			fVec33[2] = fVec33[1]; fVec33[1] = fVec33[0];
			iRec41[1] = iRec41[0];
			fVec32[2] = fVec32[1]; fVec32[1] = fVec32[0];
			iRec40[1] = iRec40[0];
			fVec31[2] = fVec31[1]; fVec31[1] = fVec31[0];
			iRec39[1] = iRec39[0];
			fVec30[2] = fVec30[1]; fVec30[1] = fVec30[0];
			iRec38[1] = iRec38[0];
			fVec29[2] = fVec29[1]; fVec29[1] = fVec29[0];
			iRec36[1] = iRec36[0];
			fRec37[2] = fRec37[1]; fRec37[1] = fRec37[0];
			for (int i=3; i>0; i--) fVec28[i] = fVec28[i-1];
			fRec26[1] = fRec26[0];
			fRec27[1] = fRec27[0];
			fVec27[1] = fVec27[0];
			fVec26[2] = fVec26[1]; fVec26[1] = fVec26[0];
			iRec33[1] = iRec33[0];
			fVec25[2] = fVec25[1]; fVec25[1] = fVec25[0];
			iRec32[1] = iRec32[0];
			fVec24[2] = fVec24[1]; fVec24[1] = fVec24[0];
			iRec31[1] = iRec31[0];
			fVec23[2] = fVec23[1]; fVec23[1] = fVec23[0];
			iRec30[1] = iRec30[0];
			fVec22[2] = fVec22[1]; fVec22[1] = fVec22[0];
			iRec28[1] = iRec28[0];
			fRec29[2] = fRec29[1]; fRec29[1] = fRec29[0];
			for (int i=3; i>0; i--) fVec21[i] = fVec21[i-1];
			fRec18[1] = fRec18[0];
			fRec19[1] = fRec19[0];
			fVec20[1] = fVec20[0];
			fVec19[2] = fVec19[1]; fVec19[1] = fVec19[0];
			iRec25[1] = iRec25[0];
			fVec18[2] = fVec18[1]; fVec18[1] = fVec18[0];
			iRec24[1] = iRec24[0];
			fVec17[2] = fVec17[1]; fVec17[1] = fVec17[0];
			iRec23[1] = iRec23[0];
			fVec16[2] = fVec16[1]; fVec16[1] = fVec16[0];
			iRec22[1] = iRec22[0];
			fVec15[2] = fVec15[1]; fVec15[1] = fVec15[0];
			iRec20[1] = iRec20[0];
			fRec21[2] = fRec21[1]; fRec21[1] = fRec21[0];
			for (int i=3; i>0; i--) fVec14[i] = fVec14[i-1];
			fRec10[1] = fRec10[0];
			fRec11[1] = fRec11[0];
			fVec13[1] = fVec13[0];
			fVec12[2] = fVec12[1]; fVec12[1] = fVec12[0];
			iRec17[1] = iRec17[0];
			fVec11[2] = fVec11[1]; fVec11[1] = fVec11[0];
			iRec16[1] = iRec16[0];
			fVec10[2] = fVec10[1]; fVec10[1] = fVec10[0];
			iRec15[1] = iRec15[0];
			fVec9[2] = fVec9[1]; fVec9[1] = fVec9[0];
			iRec14[1] = iRec14[0];
			fVec8[2] = fVec8[1]; fVec8[1] = fVec8[0];
			iRec12[1] = iRec12[0];
			fRec13[2] = fRec13[1]; fRec13[1] = fRec13[0];
			for (int i=3; i>0; i--) fVec7[i] = fVec7[i-1];
			fRec1[1] = fRec1[0];
			fRec2[1] = fRec2[0];
			fVec6[1] = fVec6[0];
			fVec5[2] = fVec5[1]; fVec5[1] = fVec5[0];
			iRec9[1] = iRec9[0];
			fVec4[2] = fVec4[1]; fVec4[1] = fVec4[0];
			iRec8[1] = iRec8[0];
			fVec3[2] = fVec3[1]; fVec3[1] = fVec3[0];
			iRec7[1] = iRec7[0];
			fVec2[2] = fVec2[1]; fVec2[1] = fVec2[0];
			iRec6[1] = iRec6[0];
			fVec1[2] = fVec1[1]; fVec1[1] = fVec1[0];
			iRec3[1] = iRec3[0];
			fRec4[2] = fRec4[1]; fRec4[1] = fRec4[0];
			fRec5[1] = fRec5[0];
			for (int i=3; i>0; i--) fVec0[i] = fVec0[i-1];
		}
	}
};


