//-----------------------------------------------------
// name: "Foo YC-20 simulation"
// author: "Sampo Savolainen"
// license: "GPL"
// copyright: "(c)Sampo Savolainen 2009"
//
// Code generated with Faust 0.9.20 (http://faust.grame.fr)
//-----------------------------------------------------
/* link with : "" */
#include "polyblep.cpp"
#include <math.h>
#include <cmath>
template <int N> inline float faustpower(float x) 		{ return powf(x,N); } 
template <int N> inline double faustpower(double x) 	{ return pow(x,N); }
template <int N> inline int faustpower(int x) 			{ return faustpower<N/2>(x) * faustpower<N-N/2>(x); } 
template <> 	 inline int faustpower<0>(int x) 		{ return 1; }
template <> 	 inline int faustpower<1>(int x) 		{ return x; }
#include <cmath>
// abs is now predefined
//template<typename T> T abs (T a)			{ return (a<T(0)) ? -a : a; }


inline int		lsr (int x, int n)			{ return int(((unsigned int)x) >> n); }

/******************************************************************************
*******************************************************************************

							       VECTOR INTRINSICS

*******************************************************************************
*******************************************************************************/

//inline void *aligned_calloc(size_t nmemb, size_t size) { return (void*)((unsigned)(calloc((nmemb*size)+15,sizeof(char)))+15 & 0xfffffff0); }
//inline void *aligned_calloc(size_t nmemb, size_t size) { return (void*)((size_t)(calloc((nmemb*size)+15,sizeof(char)))+15 & ~15); }


/******************************************************************************
*******************************************************************************

			ABSTRACT USER INTERFACE

*******************************************************************************
*******************************************************************************/

struct Meta 
{
    void declare (const char*, const char*) {  }
};

//----------------------------------------------------------------
//  abstract definition of a user interface
//----------------------------------------------------------------
            

class UI
{
	bool	fStopped;
public:
		
	UI() : fStopped(false) {}
	virtual ~UI() {}
	
	virtual void addButton(const char* label, float* zone) = 0;
	virtual void addToggleButton(const char* label, float* zone) = 0;
	virtual void addCheckButton(const char* label, float* zone) = 0;
	virtual void addVerticalSlider(const char* label, float* zone, float init, float min, float max, float step) = 0;
	virtual void addHorizontalSlider(const char* label, float* zone, float init, float min, float max, float step) = 0;
	virtual void addNumEntry(const char* label, float* zone, float init, float min, float max, float step) = 0;
	
	virtual void openFrameBox(const char* label) = 0;
	virtual void openTabBox(const char* label) = 0;
	virtual void openHorizontalBox(const char* label) = 0;
	virtual void openVerticalBox(const char* label) = 0;
	virtual void closeBox() = 0;

    virtual void declare(float* zone, const char* key, const char* value) = 0;
};




/******************************************************************************
*******************************************************************************

			    FAUST DSP

*******************************************************************************
*******************************************************************************/



//----------------------------------------------------------------
//  abstract definition of a signal processor
//----------------------------------------------------------------
			
class dsp {
 protected:
	int fSamplingFreq;
 public:
	dsp() {}
	virtual ~dsp() {}

	virtual int getNumInputs() 						= 0;
	virtual int getNumOutputs() 					= 0;
	virtual void buildUserInterface(UI* interface) 	= 0;
	virtual void init(int samplingRate) 			= 0;
 	virtual void compute(int len, float** inputs, float** outputs) 	= 0;
};
		

//----------------------------------------------------------------------------
//  FAUST generated signal processor
//----------------------------------------------------------------------------
		

#ifndef FAUSTFLOAT
#define FAUSTFLOAT float
#endif  

typedef long double quad;

class mydsp : public dsp{
  private:
	FAUSTFLOAT 	fslider0;
	FAUSTFLOAT 	fslider1;
	FAUSTFLOAT 	fslider2;
	float 	fConst0;
	float 	fConst1;
	float 	fRec5[2];
	FAUSTFLOAT 	fslider3;
	float 	fRec4[2];
	float 	fRec2[2];
	float 	fRec3[2];
	float 	fConst2;
	float 	fConst3;
	float 	fRec1[2];
	FAUSTFLOAT 	fbutton0;
	FAUSTFLOAT 	fbutton1;
	FAUSTFLOAT 	fbutton2;
	float 	fRec11[2];
	int 	iRec10[2];
	float 	fVec0[2];
	int 	iRec12[2];
	float 	fVec1[2];
	int 	iRec13[2];
	float 	fVec2[2];
	float 	fRec8[2];
	float 	fConst4;
	float 	fRec7[2];
	float 	fRec6[2];
	int 	iRec18[2];
	float 	fVec3[2];
	int 	iRec19[2];
	float 	fVec4[2];
	int 	iRec20[2];
	float 	fVec5[2];
	float 	fRec16[2];
	float 	fRec15[2];
	float 	fRec14[2];
	float 	fRec26[2];
	int 	iRec25[2];
	float 	fVec6[2];
	int 	iRec27[2];
	float 	fVec7[2];
	int 	iRec28[2];
	float 	fVec8[2];
	float 	fRec23[2];
	float 	fRec22[2];
	float 	fRec21[2];
	float 	fRec34[2];
	int 	iRec33[2];
	float 	fVec9[2];
	int 	iRec35[2];
	float 	fVec10[2];
	int 	iRec36[2];
	float 	fVec11[2];
	float 	fRec31[2];
	float 	fRec30[2];
	float 	fRec29[2];
	float 	fRec42[2];
	int 	iRec41[2];
	float 	fVec12[2];
	int 	iRec43[2];
	float 	fVec13[2];
	int 	iRec44[2];
	float 	fVec14[2];
	float 	fRec39[2];
	float 	fConst5;
	float 	fRec38[2];
	float 	fRec37[2];
	float 	fRec50[2];
	int 	iRec49[2];
	float 	fVec15[2];
	int 	iRec51[2];
	float 	fVec16[2];
	int 	iRec52[2];
	float 	fVec17[2];
	float 	fRec47[2];
	float 	fRec46[2];
	float 	fRec45[2];
	float 	fRec58[2];
	int 	iRec57[2];
	float 	fVec18[2];
	int 	iRec59[2];
	float 	fVec19[2];
	int 	iRec60[2];
	float 	fVec20[2];
	float 	fRec55[2];
	float 	fRec54[2];
	float 	fRec53[2];
	float 	fRec66[2];
	int 	iRec65[2];
	float 	fVec21[2];
	int 	iRec67[2];
	float 	fVec22[2];
	int 	iRec68[2];
	float 	fVec23[2];
	float 	fRec63[2];
	float 	fRec62[2];
	float 	fRec61[2];
	float 	fRec74[2];
	int 	iRec73[2];
	float 	fVec24[2];
	int 	iRec75[2];
	float 	fVec25[2];
	int 	iRec76[2];
	float 	fVec26[2];
	float 	fRec71[2];
	float 	fConst6;
	float 	fRec70[2];
	float 	fRec69[2];
	float 	fRec82[2];
	int 	iRec81[2];
	float 	fVec27[2];
	int 	iRec83[2];
	float 	fVec28[2];
	int 	iRec84[2];
	float 	fVec29[2];
	float 	fRec79[2];
	float 	fRec78[2];
	float 	fRec77[2];
	float 	fRec90[2];
	int 	iRec89[2];
	float 	fVec30[2];
	int 	iRec91[2];
	float 	fVec31[2];
	int 	iRec92[2];
	float 	fVec32[2];
	float 	fRec87[2];
	float 	fRec86[2];
	float 	fRec85[2];
	float 	fRec98[2];
	int 	iRec97[2];
	float 	fVec33[2];
	int 	iRec99[2];
	float 	fVec34[2];
	int 	iRec100[2];
	float 	fVec35[2];
	float 	fRec95[2];
	float 	fRec94[2];
	float 	fRec93[2];
	float 	fRec103[2];
	float 	fConst7;
	float 	fRec102[2];
	float 	fRec101[2];
	float 	fRec107[2];
	float 	fRec106[2];
	float 	fRec105[2];
	float 	fRec111[2];
	float 	fRec110[2];
	float 	fRec109[2];
	float 	fRec115[2];
	float 	fRec114[2];
	float 	fRec113[2];
	float 	fRec119[2];
	float 	fConst8;
	float 	fRec118[2];
	float 	fRec117[2];
	FAUSTFLOAT 	fslider4;
	float 	fRec122[2];
	float 	fRec123[2];
	float 	fRec121[2];
	float 	fRec125[2];
	float 	fRec126[2];
	float 	fRec124[2];
	float 	fRec128[2];
	float 	fRec129[2];
	float 	fRec127[2];
	float 	fRec131[2];
	float 	fRec132[2];
	float 	fRec130[2];
	float 	fRec134[2];
	float 	fRec135[2];
	float 	fRec133[2];
	float 	fRec137[2];
	float 	fRec138[2];
	float 	fRec136[2];
	float 	fRec140[2];
	float 	fRec141[2];
	float 	fRec139[2];
	float 	fRec143[2];
	float 	fRec144[2];
	float 	fRec142[2];
	float 	fRec146[2];
	float 	fRec147[2];
	float 	fRec145[2];
	float 	fRec149[2];
	float 	fRec150[2];
	float 	fRec148[2];
	float 	fRec153[2];
	float 	fConst9;
	float 	fRec152[2];
	float 	fRec151[2];
	float 	fRec157[2];
	float 	fRec156[2];
	float 	fRec155[2];
	float 	fRec161[2];
	float 	fRec160[2];
	float 	fRec159[2];
	float 	fRec165[2];
	float 	fRec164[2];
	float 	fRec163[2];
	float 	fRec169[2];
	float 	fConst10;
	float 	fRec168[2];
	float 	fRec167[2];
	float 	fRec173[2];
	float 	fRec172[2];
	float 	fRec171[2];
	float 	fRec177[2];
	float 	fRec176[2];
	float 	fRec175[2];
	float 	fRec181[2];
	float 	fRec180[2];
	float 	fRec179[2];
	float 	fRec185[2];
	float 	fConst11;
	float 	fRec184[2];
	float 	fRec183[2];
	float 	fRec189[2];
	float 	fRec188[2];
	float 	fRec187[2];
	float 	fRec193[2];
	float 	fRec192[2];
	float 	fRec191[2];
	float 	fRec197[2];
	float 	fRec196[2];
	float 	fRec195[2];
	float 	fRec201[2];
	float 	fConst12;
	float 	fRec200[2];
	float 	fRec199[2];
	float 	fRec205[2];
	float 	fRec204[2];
	float 	fRec203[2];
	float 	fRec209[2];
	float 	fRec208[2];
	float 	fRec207[2];
	float 	fRec213[2];
	float 	fRec212[2];
	float 	fRec211[2];
	float 	fRec217[2];
	float 	fRec216[2];
	float 	fRec215[2];
	float 	fRec221[2];
	float 	fRec220[2];
	float 	fRec219[2];
	float 	fRec225[2];
	float 	fRec224[2];
	float 	fRec223[2];
	float 	fRec228[2];
	float 	fRec229[2];
	float 	fRec227[2];
	FAUSTFLOAT 	fbutton3;
	FAUSTFLOAT 	fbutton4;
	FAUSTFLOAT 	fbutton5;
	FAUSTFLOAT 	fbutton6;
	FAUSTFLOAT 	fbutton7;
	FAUSTFLOAT 	fbutton8;
	FAUSTFLOAT 	fbutton9;
	FAUSTFLOAT 	fbutton10;
	FAUSTFLOAT 	fbutton11;
	FAUSTFLOAT 	fbutton12;
	FAUSTFLOAT 	fbutton13;
	FAUSTFLOAT 	fbutton14;
	FAUSTFLOAT 	fbutton15;
	FAUSTFLOAT 	fbutton16;
	FAUSTFLOAT 	fbutton17;
	FAUSTFLOAT 	fbutton18;
	FAUSTFLOAT 	fbutton19;
	FAUSTFLOAT 	fbutton20;
	FAUSTFLOAT 	fbutton21;
	FAUSTFLOAT 	fbutton22;
	FAUSTFLOAT 	fbutton23;
	FAUSTFLOAT 	fbutton24;
	FAUSTFLOAT 	fbutton25;
	FAUSTFLOAT 	fbutton26;
	FAUSTFLOAT 	fbutton27;
	FAUSTFLOAT 	fbutton28;
	FAUSTFLOAT 	fbutton29;
	FAUSTFLOAT 	fbutton30;
	FAUSTFLOAT 	fbutton31;
	FAUSTFLOAT 	fbutton32;
	FAUSTFLOAT 	fbutton33;
	FAUSTFLOAT 	fbutton34;
	FAUSTFLOAT 	fbutton35;
	FAUSTFLOAT 	fbutton36;
	FAUSTFLOAT 	fbutton37;
	FAUSTFLOAT 	fbutton38;
	FAUSTFLOAT 	fbutton39;
	FAUSTFLOAT 	fbutton40;
	FAUSTFLOAT 	fbutton41;
	FAUSTFLOAT 	fbutton42;
	FAUSTFLOAT 	fbutton43;
	FAUSTFLOAT 	fbutton44;
	FAUSTFLOAT 	fbutton45;
	FAUSTFLOAT 	fbutton46;
	FAUSTFLOAT 	fbutton47;
	FAUSTFLOAT 	fbutton48;
	FAUSTFLOAT 	fbutton49;
	FAUSTFLOAT 	fbutton50;
	FAUSTFLOAT 	fbutton51;
	FAUSTFLOAT 	fbutton52;
	FAUSTFLOAT 	fbutton53;
	FAUSTFLOAT 	fbutton54;
	FAUSTFLOAT 	fbutton55;
	FAUSTFLOAT 	fbutton56;
	FAUSTFLOAT 	fbutton57;
	FAUSTFLOAT 	fbutton58;
	FAUSTFLOAT 	fbutton59;
	FAUSTFLOAT 	fbutton60;
	float 	fVec36[2];
	float 	fConst13;
	float 	fRec0[2];
	int 	iRec235[2];
	float 	fVec37[2];
	int 	iRec236[2];
	float 	fVec38[2];
	int 	iRec237[2];
	float 	fVec39[2];
	float 	fRec233[2];
	float 	fConst14;
	float 	fRec232[2];
	float 	fConst15;
	float 	fRec231[2];
	int 	iRec242[2];
	float 	fVec40[2];
	int 	iRec243[2];
	float 	fVec41[2];
	int 	iRec244[2];
	float 	fVec42[2];
	float 	fRec240[2];
	float 	fRec239[2];
	float 	fRec238[2];
	int 	iRec249[2];
	float 	fVec43[2];
	int 	iRec250[2];
	float 	fVec44[2];
	int 	iRec251[2];
	float 	fVec45[2];
	float 	fRec247[2];
	float 	fRec246[2];
	float 	fRec245[2];
	int 	iRec256[2];
	float 	fVec46[2];
	int 	iRec257[2];
	float 	fVec47[2];
	int 	iRec258[2];
	float 	fVec48[2];
	float 	fRec254[2];
	float 	fConst16;
	float 	fRec253[2];
	float 	fRec252[2];
	int 	iRec263[2];
	float 	fVec49[2];
	int 	iRec264[2];
	float 	fVec50[2];
	int 	iRec265[2];
	float 	fVec51[2];
	float 	fRec261[2];
	float 	fRec260[2];
	float 	fRec259[2];
	int 	iRec270[2];
	float 	fVec52[2];
	int 	iRec271[2];
	float 	fVec53[2];
	int 	iRec272[2];
	float 	fVec54[2];
	float 	fRec268[2];
	float 	fRec267[2];
	float 	fRec266[2];
	int 	iRec277[2];
	float 	fVec55[2];
	int 	iRec278[2];
	float 	fVec56[2];
	int 	iRec279[2];
	float 	fVec57[2];
	float 	fRec275[2];
	float 	fRec274[2];
	float 	fRec273[2];
	int 	iRec284[2];
	float 	fVec58[2];
	int 	iRec285[2];
	float 	fVec59[2];
	float 	fRec282[2];
	float 	fRec281[2];
	float 	fConst17;
	float 	fRec280[2];
	int 	iRec290[2];
	float 	fVec60[2];
	int 	iRec291[2];
	float 	fVec61[2];
	float 	fRec288[2];
	float 	fRec287[2];
	float 	fRec286[2];
	int 	iRec296[2];
	float 	fVec62[2];
	int 	iRec297[2];
	float 	fVec63[2];
	float 	fRec294[2];
	float 	fRec293[2];
	float 	fRec292[2];
	int 	iRec302[2];
	float 	fVec64[2];
	int 	iRec303[2];
	float 	fVec65[2];
	float 	fRec300[2];
	float 	fRec299[2];
	float 	fRec298[2];
	int 	iRec308[2];
	float 	fVec66[2];
	int 	iRec309[2];
	float 	fVec67[2];
	float 	fRec306[2];
	float 	fConst18;
	float 	fRec305[2];
	float 	fRec304[2];
	float 	fRec312[2];
	float 	fRec311[2];
	float 	fRec310[2];
	float 	fRec316[2];
	float 	fRec315[2];
	float 	fRec314[2];
	float 	fRec320[2];
	float 	fRec319[2];
	float 	fRec318[2];
	float 	fRec324[2];
	float 	fConst19;
	float 	fRec323[2];
	float 	fRec322[2];
	float 	fRec328[2];
	float 	fRec327[2];
	float 	fRec326[2];
	float 	fRec332[2];
	float 	fRec331[2];
	float 	fRec330[2];
	float 	fRec336[2];
	float 	fRec335[2];
	float 	fRec334[2];
	float 	fRec340[2];
	float 	fConst20;
	float 	fRec339[2];
	float 	fRec338[2];
	float 	fRec344[2];
	float 	fRec343[2];
	float 	fRec342[2];
	float 	fRec348[2];
	float 	fRec347[2];
	float 	fRec346[2];
	float 	fRec352[2];
	float 	fRec351[2];
	float 	fRec350[2];
	float 	fRec356[2];
	float 	fConst21;
	float 	fRec355[2];
	float 	fRec354[2];
	float 	fRec360[2];
	float 	fRec359[2];
	float 	fRec358[2];
	float 	fRec364[2];
	float 	fRec363[2];
	float 	fRec362[2];
	float 	fRec368[2];
	float 	fRec367[2];
	float 	fRec366[2];
	float 	fRec372[2];
	float 	fConst22;
	float 	fRec371[2];
	float 	fRec370[2];
	float 	fRec376[2];
	float 	fRec375[2];
	float 	fRec374[2];
	float 	fRec380[2];
	float 	fRec379[2];
	float 	fRec378[2];
	float 	fRec384[2];
	float 	fRec383[2];
	float 	fRec382[2];
	int 	iRec390[2];
	float 	fVec68[2];
	float 	fRec388[2];
	float 	fRec387[2];
	float 	fRec386[2];
	int 	iRec395[2];
	float 	fVec69[2];
	float 	fRec393[2];
	float 	fConst23;
	float 	fRec392[2];
	float 	fRec391[2];
	int 	iRec400[2];
	float 	fVec70[2];
	float 	fRec398[2];
	float 	fRec397[2];
	float 	fRec396[2];
	int 	iRec405[2];
	float 	fVec71[2];
	float 	fRec403[2];
	float 	fRec402[2];
	float 	fRec401[2];
	int 	iRec410[2];
	float 	fVec72[2];
	float 	fRec408[2];
	float 	fRec407[2];
	float 	fRec406[2];
	int 	iRec415[2];
	float 	fVec73[2];
	float 	fRec413[2];
	float 	fRec412[2];
	float 	fConst24;
	float 	fRec411[2];
	int 	iRec420[2];
	float 	fVec74[2];
	float 	fRec418[2];
	float 	fRec417[2];
	float 	fRec416[2];
	int 	iRec425[2];
	float 	fVec75[2];
	float 	fRec423[2];
	float 	fRec422[2];
	float 	fRec421[2];
	int 	iRec430[2];
	float 	fVec76[2];
	float 	fRec428[2];
	float 	fRec427[2];
	float 	fRec426[2];
	int 	iRec435[2];
	float 	fVec77[2];
	float 	fRec433[2];
	float 	fConst25;
	float 	fRec432[2];
	float 	fRec431[2];
	int 	iRec440[2];
	float 	fVec78[2];
	float 	fRec438[2];
	float 	fRec437[2];
	float 	fRec436[2];
	int 	iRec445[2];
	float 	fVec79[2];
	float 	fRec443[2];
	float 	fRec442[2];
	float 	fRec441[2];
	int 	iRec450[2];
	float 	fVec80[2];
	float 	fRec448[2];
	float 	fRec447[2];
	float 	fRec446[2];
	int 	iRec455[2];
	float 	fVec81[2];
	float 	fRec453[2];
	float 	fRec452[2];
	float 	fRec451[2];
	int 	iRec460[2];
	float 	fVec82[2];
	float 	fRec458[2];
	float 	fRec457[2];
	float 	fRec456[2];
	int 	iRec465[2];
	float 	fVec83[2];
	float 	fRec463[2];
	float 	fRec462[2];
	float 	fRec461[2];
	int 	iRec470[2];
	float 	fVec84[2];
	float 	fRec468[2];
	float 	fRec467[2];
	float 	fRec466[2];
	float 	fVec85[2];
	float 	fRec230[2];
	float 	fVec86[2];
	float 	fRec471[2];
	float 	fConst26;
	float 	fConst27;
	int 	IOTA;
	int 	iVec87[4096];
	int 	iConst28;
	int 	iRec473[2];
	float 	fConst29;
	float 	fVec88[2];
	float 	fRec472[2];
	float 	fConst30;
	float 	fVec89[5];
	FAUSTFLOAT 	fslider5;
	FAUSTFLOAT 	fslider6;
	float 	fRec474[2];
	FAUSTFLOAT 	fslider7;
	FAUSTFLOAT 	fslider8;
	float 	fConst31;
	float 	fRec475[2];
	FAUSTFLOAT 	fslider9;
	float 	fVec90[2];
	float 	fConst32;
	float 	fRec477[2];
	float 	fVec91[2];
	float 	fConst33;
	float 	fRec476[2];
	float 	fVec92[2];
	float 	fRec480[2];
	FAUSTFLOAT 	fslider10;
	float 	fVec93[2];
	float 	fConst34;
	float 	fRec479[2];
	float 	fVec94[2];
	float 	fConst35;
	float 	fRec478[2];
	float 	fRec483[2];
	FAUSTFLOAT 	fslider11;
	float 	fVec95[2];
	float 	fConst36;
	float 	fRec482[2];
	float 	fVec96[2];
	float 	fConst37;
	float 	fRec481[2];
	float 	fVec97[2];
	float 	fRec486[2];
	FAUSTFLOAT 	fslider12;
	float 	fVec98[2];
	float 	fConst38;
	float 	fRec485[2];
	float 	fVec99[2];
	float 	fConst39;
	float 	fRec484[2];
	FAUSTFLOAT 	fslider13;
	float 	fRec488[2];
	float 	fRec487[2];
	float 	fRec490[2];
	float 	fRec489[2];
	float 	fRec492[2];
	float 	fRec491[2];
	float 	fRec494[2];
	float 	fRec493[2];
	FAUSTFLOAT 	fslider14;
	FAUSTFLOAT 	fslider15;
	FAUSTFLOAT 	fslider16;
	FAUSTFLOAT 	fslider17;
	FAUSTFLOAT 	fslider18;
	FAUSTFLOAT 	fslider19;
	float 	fVec100[2];
	float 	fRec495[2];
	FAUSTFLOAT 	fslider20;
	FAUSTFLOAT 	fslider21;
	FAUSTFLOAT 	fslider22;
	float 	fRec496[2];
  public:
	static void metadata(Meta* m) 	{ 
		m->declare("name", "Foo YC-20 simulation");
		m->declare("author", "Sampo Savolainen");
		m->declare("license", "GPL");
		m->declare("copyright", "(c)Sampo Savolainen 2009");
	}

	virtual int getNumInputs() 	{ return 0; }
	virtual int getNumOutputs() 	{ return 1; }
	static void classInit(int samplingFreq) {
	}
	virtual void instanceInit(int samplingFreq) {
		fSamplingFreq = samplingFreq;
		fslider0 = 0.0f;
		fslider1 = 0.0f;
		fslider2 = 0.0f;
		fConst0 = float(fSamplingFreq);
		fConst1 = (1.0f / fConst0);
		for (int i=0; i<2; i++) fRec5[i] = 0;
		fslider3 = 0.0f;
		for (int i=0; i<2; i++) fRec4[i] = 0;
		for (int i=0; i<2; i++) fRec2[i] = 0;
		for (int i=0; i<2; i++) fRec3[i] = 0;
		fConst2 = (1.0f / fSamplingFreq);
		fConst3 = (0.007374545454545454f / (fConst2 + 0.007374545454545454f));
		for (int i=0; i<2; i++) fRec1[i] = 0;
		fbutton0 = 0.0;
		fbutton1 = 0.0;
		fbutton2 = 0.0;
		for (int i=0; i<2; i++) fRec11[i] = 0;
		for (int i=0; i<2; i++) iRec10[i] = 0;
		for (int i=0; i<2; i++) fVec0[i] = 0;
		for (int i=0; i<2; i++) iRec12[i] = 0;
		for (int i=0; i<2; i++) fVec1[i] = 0;
		for (int i=0; i<2; i++) iRec13[i] = 0;
		for (int i=0; i<2; i++) fVec2[i] = 0;
		for (int i=0; i<2; i++) fRec8[i] = 0;
		fConst4 = (4545.454545454545f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec7[i] = 0;
		for (int i=0; i<2; i++) fRec6[i] = 0;
		for (int i=0; i<2; i++) iRec18[i] = 0;
		for (int i=0; i<2; i++) fVec3[i] = 0;
		for (int i=0; i<2; i++) iRec19[i] = 0;
		for (int i=0; i<2; i++) fVec4[i] = 0;
		for (int i=0; i<2; i++) iRec20[i] = 0;
		for (int i=0; i<2; i++) fVec5[i] = 0;
		for (int i=0; i<2; i++) fRec16[i] = 0;
		for (int i=0; i<2; i++) fRec15[i] = 0;
		for (int i=0; i<2; i++) fRec14[i] = 0;
		for (int i=0; i<2; i++) fRec26[i] = 0;
		for (int i=0; i<2; i++) iRec25[i] = 0;
		for (int i=0; i<2; i++) fVec6[i] = 0;
		for (int i=0; i<2; i++) iRec27[i] = 0;
		for (int i=0; i<2; i++) fVec7[i] = 0;
		for (int i=0; i<2; i++) iRec28[i] = 0;
		for (int i=0; i<2; i++) fVec8[i] = 0;
		for (int i=0; i<2; i++) fRec23[i] = 0;
		for (int i=0; i<2; i++) fRec22[i] = 0;
		for (int i=0; i<2; i++) fRec21[i] = 0;
		for (int i=0; i<2; i++) fRec34[i] = 0;
		for (int i=0; i<2; i++) iRec33[i] = 0;
		for (int i=0; i<2; i++) fVec9[i] = 0;
		for (int i=0; i<2; i++) iRec35[i] = 0;
		for (int i=0; i<2; i++) fVec10[i] = 0;
		for (int i=0; i<2; i++) iRec36[i] = 0;
		for (int i=0; i<2; i++) fVec11[i] = 0;
		for (int i=0; i<2; i++) fRec31[i] = 0;
		for (int i=0; i<2; i++) fRec30[i] = 0;
		for (int i=0; i<2; i++) fRec29[i] = 0;
		for (int i=0; i<2; i++) fRec42[i] = 0;
		for (int i=0; i<2; i++) iRec41[i] = 0;
		for (int i=0; i<2; i++) fVec12[i] = 0;
		for (int i=0; i<2; i++) iRec43[i] = 0;
		for (int i=0; i<2; i++) fVec13[i] = 0;
		for (int i=0; i<2; i++) iRec44[i] = 0;
		for (int i=0; i<2; i++) fVec14[i] = 0;
		for (int i=0; i<2; i++) fRec39[i] = 0;
		fConst5 = (5555.555555555556f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec38[i] = 0;
		for (int i=0; i<2; i++) fRec37[i] = 0;
		for (int i=0; i<2; i++) fRec50[i] = 0;
		for (int i=0; i<2; i++) iRec49[i] = 0;
		for (int i=0; i<2; i++) fVec15[i] = 0;
		for (int i=0; i<2; i++) iRec51[i] = 0;
		for (int i=0; i<2; i++) fVec16[i] = 0;
		for (int i=0; i<2; i++) iRec52[i] = 0;
		for (int i=0; i<2; i++) fVec17[i] = 0;
		for (int i=0; i<2; i++) fRec47[i] = 0;
		for (int i=0; i<2; i++) fRec46[i] = 0;
		for (int i=0; i<2; i++) fRec45[i] = 0;
		for (int i=0; i<2; i++) fRec58[i] = 0;
		for (int i=0; i<2; i++) iRec57[i] = 0;
		for (int i=0; i<2; i++) fVec18[i] = 0;
		for (int i=0; i<2; i++) iRec59[i] = 0;
		for (int i=0; i<2; i++) fVec19[i] = 0;
		for (int i=0; i<2; i++) iRec60[i] = 0;
		for (int i=0; i<2; i++) fVec20[i] = 0;
		for (int i=0; i<2; i++) fRec55[i] = 0;
		for (int i=0; i<2; i++) fRec54[i] = 0;
		for (int i=0; i<2; i++) fRec53[i] = 0;
		for (int i=0; i<2; i++) fRec66[i] = 0;
		for (int i=0; i<2; i++) iRec65[i] = 0;
		for (int i=0; i<2; i++) fVec21[i] = 0;
		for (int i=0; i<2; i++) iRec67[i] = 0;
		for (int i=0; i<2; i++) fVec22[i] = 0;
		for (int i=0; i<2; i++) iRec68[i] = 0;
		for (int i=0; i<2; i++) fVec23[i] = 0;
		for (int i=0; i<2; i++) fRec63[i] = 0;
		for (int i=0; i<2; i++) fRec62[i] = 0;
		for (int i=0; i<2; i++) fRec61[i] = 0;
		for (int i=0; i<2; i++) fRec74[i] = 0;
		for (int i=0; i<2; i++) iRec73[i] = 0;
		for (int i=0; i<2; i++) fVec24[i] = 0;
		for (int i=0; i<2; i++) iRec75[i] = 0;
		for (int i=0; i<2; i++) fVec25[i] = 0;
		for (int i=0; i<2; i++) iRec76[i] = 0;
		for (int i=0; i<2; i++) fVec26[i] = 0;
		for (int i=0; i<2; i++) fRec71[i] = 0;
		fConst6 = (8333.333333333334f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec70[i] = 0;
		for (int i=0; i<2; i++) fRec69[i] = 0;
		for (int i=0; i<2; i++) fRec82[i] = 0;
		for (int i=0; i<2; i++) iRec81[i] = 0;
		for (int i=0; i<2; i++) fVec27[i] = 0;
		for (int i=0; i<2; i++) iRec83[i] = 0;
		for (int i=0; i<2; i++) fVec28[i] = 0;
		for (int i=0; i<2; i++) iRec84[i] = 0;
		for (int i=0; i<2; i++) fVec29[i] = 0;
		for (int i=0; i<2; i++) fRec79[i] = 0;
		for (int i=0; i<2; i++) fRec78[i] = 0;
		for (int i=0; i<2; i++) fRec77[i] = 0;
		for (int i=0; i<2; i++) fRec90[i] = 0;
		for (int i=0; i<2; i++) iRec89[i] = 0;
		for (int i=0; i<2; i++) fVec30[i] = 0;
		for (int i=0; i<2; i++) iRec91[i] = 0;
		for (int i=0; i<2; i++) fVec31[i] = 0;
		for (int i=0; i<2; i++) iRec92[i] = 0;
		for (int i=0; i<2; i++) fVec32[i] = 0;
		for (int i=0; i<2; i++) fRec87[i] = 0;
		for (int i=0; i<2; i++) fRec86[i] = 0;
		for (int i=0; i<2; i++) fRec85[i] = 0;
		for (int i=0; i<2; i++) fRec98[i] = 0;
		for (int i=0; i<2; i++) iRec97[i] = 0;
		for (int i=0; i<2; i++) fVec33[i] = 0;
		for (int i=0; i<2; i++) iRec99[i] = 0;
		for (int i=0; i<2; i++) fVec34[i] = 0;
		for (int i=0; i<2; i++) iRec100[i] = 0;
		for (int i=0; i<2; i++) fVec35[i] = 0;
		for (int i=0; i<2; i++) fRec95[i] = 0;
		for (int i=0; i<2; i++) fRec94[i] = 0;
		for (int i=0; i<2; i++) fRec93[i] = 0;
		for (int i=0; i<2; i++) fRec103[i] = 0;
		fConst7 = (1e+04f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec102[i] = 0;
		for (int i=0; i<2; i++) fRec101[i] = 0;
		for (int i=0; i<2; i++) fRec107[i] = 0;
		for (int i=0; i<2; i++) fRec106[i] = 0;
		for (int i=0; i<2; i++) fRec105[i] = 0;
		for (int i=0; i<2; i++) fRec111[i] = 0;
		for (int i=0; i<2; i++) fRec110[i] = 0;
		for (int i=0; i<2; i++) fRec109[i] = 0;
		for (int i=0; i<2; i++) fRec115[i] = 0;
		for (int i=0; i<2; i++) fRec114[i] = 0;
		for (int i=0; i<2; i++) fRec113[i] = 0;
		for (int i=0; i<2; i++) fRec119[i] = 0;
		fConst8 = (12195.121951219513f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec118[i] = 0;
		for (int i=0; i<2; i++) fRec117[i] = 0;
		fslider4 = 0.0f;
		for (int i=0; i<2; i++) fRec122[i] = 0;
		for (int i=0; i<2; i++) fRec123[i] = 0;
		for (int i=0; i<2; i++) fRec121[i] = 0;
		for (int i=0; i<2; i++) fRec125[i] = 0;
		for (int i=0; i<2; i++) fRec126[i] = 0;
		for (int i=0; i<2; i++) fRec124[i] = 0;
		for (int i=0; i<2; i++) fRec128[i] = 0;
		for (int i=0; i<2; i++) fRec129[i] = 0;
		for (int i=0; i<2; i++) fRec127[i] = 0;
		for (int i=0; i<2; i++) fRec131[i] = 0;
		for (int i=0; i<2; i++) fRec132[i] = 0;
		for (int i=0; i<2; i++) fRec130[i] = 0;
		for (int i=0; i<2; i++) fRec134[i] = 0;
		for (int i=0; i<2; i++) fRec135[i] = 0;
		for (int i=0; i<2; i++) fRec133[i] = 0;
		for (int i=0; i<2; i++) fRec137[i] = 0;
		for (int i=0; i<2; i++) fRec138[i] = 0;
		for (int i=0; i<2; i++) fRec136[i] = 0;
		for (int i=0; i<2; i++) fRec140[i] = 0;
		for (int i=0; i<2; i++) fRec141[i] = 0;
		for (int i=0; i<2; i++) fRec139[i] = 0;
		for (int i=0; i<2; i++) fRec143[i] = 0;
		for (int i=0; i<2; i++) fRec144[i] = 0;
		for (int i=0; i<2; i++) fRec142[i] = 0;
		for (int i=0; i<2; i++) fRec146[i] = 0;
		for (int i=0; i<2; i++) fRec147[i] = 0;
		for (int i=0; i<2; i++) fRec145[i] = 0;
		for (int i=0; i<2; i++) fRec149[i] = 0;
		for (int i=0; i<2; i++) fRec150[i] = 0;
		for (int i=0; i<2; i++) fRec148[i] = 0;
		for (int i=0; i<2; i++) fRec153[i] = 0;
		fConst9 = (37037.03703703704f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec152[i] = 0;
		for (int i=0; i<2; i++) fRec151[i] = 0;
		for (int i=0; i<2; i++) fRec157[i] = 0;
		for (int i=0; i<2; i++) fRec156[i] = 0;
		for (int i=0; i<2; i++) fRec155[i] = 0;
		for (int i=0; i<2; i++) fRec161[i] = 0;
		for (int i=0; i<2; i++) fRec160[i] = 0;
		for (int i=0; i<2; i++) fRec159[i] = 0;
		for (int i=0; i<2; i++) fRec165[i] = 0;
		for (int i=0; i<2; i++) fRec164[i] = 0;
		for (int i=0; i<2; i++) fRec163[i] = 0;
		for (int i=0; i<2; i++) fRec169[i] = 0;
		fConst10 = (25641.02564102564f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec168[i] = 0;
		for (int i=0; i<2; i++) fRec167[i] = 0;
		for (int i=0; i<2; i++) fRec173[i] = 0;
		for (int i=0; i<2; i++) fRec172[i] = 0;
		for (int i=0; i<2; i++) fRec171[i] = 0;
		for (int i=0; i<2; i++) fRec177[i] = 0;
		for (int i=0; i<2; i++) fRec176[i] = 0;
		for (int i=0; i<2; i++) fRec175[i] = 0;
		for (int i=0; i<2; i++) fRec181[i] = 0;
		for (int i=0; i<2; i++) fRec180[i] = 0;
		for (int i=0; i<2; i++) fRec179[i] = 0;
		for (int i=0; i<2; i++) fRec185[i] = 0;
		fConst11 = (21276.59574468085f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec184[i] = 0;
		for (int i=0; i<2; i++) fRec183[i] = 0;
		for (int i=0; i<2; i++) fRec189[i] = 0;
		for (int i=0; i<2; i++) fRec188[i] = 0;
		for (int i=0; i<2; i++) fRec187[i] = 0;
		for (int i=0; i<2; i++) fRec193[i] = 0;
		for (int i=0; i<2; i++) fRec192[i] = 0;
		for (int i=0; i<2; i++) fRec191[i] = 0;
		for (int i=0; i<2; i++) fRec197[i] = 0;
		for (int i=0; i<2; i++) fRec196[i] = 0;
		for (int i=0; i<2; i++) fRec195[i] = 0;
		for (int i=0; i<2; i++) fRec201[i] = 0;
		fConst12 = (17857.14285714286f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec200[i] = 0;
		for (int i=0; i<2; i++) fRec199[i] = 0;
		for (int i=0; i<2; i++) fRec205[i] = 0;
		for (int i=0; i<2; i++) fRec204[i] = 0;
		for (int i=0; i<2; i++) fRec203[i] = 0;
		for (int i=0; i<2; i++) fRec209[i] = 0;
		for (int i=0; i<2; i++) fRec208[i] = 0;
		for (int i=0; i<2; i++) fRec207[i] = 0;
		for (int i=0; i<2; i++) fRec213[i] = 0;
		for (int i=0; i<2; i++) fRec212[i] = 0;
		for (int i=0; i<2; i++) fRec211[i] = 0;
		for (int i=0; i<2; i++) fRec217[i] = 0;
		for (int i=0; i<2; i++) fRec216[i] = 0;
		for (int i=0; i<2; i++) fRec215[i] = 0;
		for (int i=0; i<2; i++) fRec221[i] = 0;
		for (int i=0; i<2; i++) fRec220[i] = 0;
		for (int i=0; i<2; i++) fRec219[i] = 0;
		for (int i=0; i<2; i++) fRec225[i] = 0;
		for (int i=0; i<2; i++) fRec224[i] = 0;
		for (int i=0; i<2; i++) fRec223[i] = 0;
		for (int i=0; i<2; i++) fRec228[i] = 0;
		for (int i=0; i<2; i++) fRec229[i] = 0;
		for (int i=0; i<2; i++) fRec227[i] = 0;
		fbutton3 = 0.0;
		fbutton4 = 0.0;
		fbutton5 = 0.0;
		fbutton6 = 0.0;
		fbutton7 = 0.0;
		fbutton8 = 0.0;
		fbutton9 = 0.0;
		fbutton10 = 0.0;
		fbutton11 = 0.0;
		fbutton12 = 0.0;
		fbutton13 = 0.0;
		fbutton14 = 0.0;
		fbutton15 = 0.0;
		fbutton16 = 0.0;
		fbutton17 = 0.0;
		fbutton18 = 0.0;
		fbutton19 = 0.0;
		fbutton20 = 0.0;
		fbutton21 = 0.0;
		fbutton22 = 0.0;
		fbutton23 = 0.0;
		fbutton24 = 0.0;
		fbutton25 = 0.0;
		fbutton26 = 0.0;
		fbutton27 = 0.0;
		fbutton28 = 0.0;
		fbutton29 = 0.0;
		fbutton30 = 0.0;
		fbutton31 = 0.0;
		fbutton32 = 0.0;
		fbutton33 = 0.0;
		fbutton34 = 0.0;
		fbutton35 = 0.0;
		fbutton36 = 0.0;
		fbutton37 = 0.0;
		fbutton38 = 0.0;
		fbutton39 = 0.0;
		fbutton40 = 0.0;
		fbutton41 = 0.0;
		fbutton42 = 0.0;
		fbutton43 = 0.0;
		fbutton44 = 0.0;
		fbutton45 = 0.0;
		fbutton46 = 0.0;
		fbutton47 = 0.0;
		fbutton48 = 0.0;
		fbutton49 = 0.0;
		fbutton50 = 0.0;
		fbutton51 = 0.0;
		fbutton52 = 0.0;
		fbutton53 = 0.0;
		fbutton54 = 0.0;
		fbutton55 = 0.0;
		fbutton56 = 0.0;
		fbutton57 = 0.0;
		fbutton58 = 0.0;
		fbutton59 = 0.0;
		fbutton60 = 0.0;
		for (int i=0; i<2; i++) fVec36[i] = 0;
		fConst13 = (0.0001f / (0.0001f + fConst2));
		for (int i=0; i<2; i++) fRec0[i] = 0;
		for (int i=0; i<2; i++) iRec235[i] = 0;
		for (int i=0; i<2; i++) fVec37[i] = 0;
		for (int i=0; i<2; i++) iRec236[i] = 0;
		for (int i=0; i<2; i++) fVec38[i] = 0;
		for (int i=0; i<2; i++) iRec237[i] = 0;
		for (int i=0; i<2; i++) fVec39[i] = 0;
		for (int i=0; i<2; i++) fRec233[i] = 0;
		fConst14 = (1e+03f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec232[i] = 0;
		fConst15 = (0.00223066398390342f / (fConst2 + 0.00223066398390342f));
		for (int i=0; i<2; i++) fRec231[i] = 0;
		for (int i=0; i<2; i++) iRec242[i] = 0;
		for (int i=0; i<2; i++) fVec40[i] = 0;
		for (int i=0; i<2; i++) iRec243[i] = 0;
		for (int i=0; i<2; i++) fVec41[i] = 0;
		for (int i=0; i<2; i++) iRec244[i] = 0;
		for (int i=0; i<2; i++) fVec42[i] = 0;
		for (int i=0; i<2; i++) fRec240[i] = 0;
		for (int i=0; i<2; i++) fRec239[i] = 0;
		for (int i=0; i<2; i++) fRec238[i] = 0;
		for (int i=0; i<2; i++) iRec249[i] = 0;
		for (int i=0; i<2; i++) fVec43[i] = 0;
		for (int i=0; i<2; i++) iRec250[i] = 0;
		for (int i=0; i<2; i++) fVec44[i] = 0;
		for (int i=0; i<2; i++) iRec251[i] = 0;
		for (int i=0; i<2; i++) fVec45[i] = 0;
		for (int i=0; i<2; i++) fRec247[i] = 0;
		for (int i=0; i<2; i++) fRec246[i] = 0;
		for (int i=0; i<2; i++) fRec245[i] = 0;
		for (int i=0; i<2; i++) iRec256[i] = 0;
		for (int i=0; i<2; i++) fVec46[i] = 0;
		for (int i=0; i<2; i++) iRec257[i] = 0;
		for (int i=0; i<2; i++) fVec47[i] = 0;
		for (int i=0; i<2; i++) iRec258[i] = 0;
		for (int i=0; i<2; i++) fVec48[i] = 0;
		for (int i=0; i<2; i++) fRec254[i] = 0;
		fConst16 = (1219.5121951219512f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec253[i] = 0;
		for (int i=0; i<2; i++) fRec252[i] = 0;
		for (int i=0; i<2; i++) iRec263[i] = 0;
		for (int i=0; i<2; i++) fVec49[i] = 0;
		for (int i=0; i<2; i++) iRec264[i] = 0;
		for (int i=0; i<2; i++) fVec50[i] = 0;
		for (int i=0; i<2; i++) iRec265[i] = 0;
		for (int i=0; i<2; i++) fVec51[i] = 0;
		for (int i=0; i<2; i++) fRec261[i] = 0;
		for (int i=0; i<2; i++) fRec260[i] = 0;
		for (int i=0; i<2; i++) fRec259[i] = 0;
		for (int i=0; i<2; i++) iRec270[i] = 0;
		for (int i=0; i<2; i++) fVec52[i] = 0;
		for (int i=0; i<2; i++) iRec271[i] = 0;
		for (int i=0; i<2; i++) fVec53[i] = 0;
		for (int i=0; i<2; i++) iRec272[i] = 0;
		for (int i=0; i<2; i++) fVec54[i] = 0;
		for (int i=0; i<2; i++) fRec268[i] = 0;
		for (int i=0; i<2; i++) fRec267[i] = 0;
		for (int i=0; i<2; i++) fRec266[i] = 0;
		for (int i=0; i<2; i++) iRec277[i] = 0;
		for (int i=0; i<2; i++) fVec55[i] = 0;
		for (int i=0; i<2; i++) iRec278[i] = 0;
		for (int i=0; i<2; i++) fVec56[i] = 0;
		for (int i=0; i<2; i++) iRec279[i] = 0;
		for (int i=0; i<2; i++) fVec57[i] = 0;
		for (int i=0; i<2; i++) fRec275[i] = 0;
		for (int i=0; i<2; i++) fRec274[i] = 0;
		for (int i=0; i<2; i++) fRec273[i] = 0;
		for (int i=0; i<2; i++) iRec284[i] = 0;
		for (int i=0; i<2; i++) fVec58[i] = 0;
		for (int i=0; i<2; i++) iRec285[i] = 0;
		for (int i=0; i<2; i++) fVec59[i] = 0;
		for (int i=0; i<2; i++) fRec282[i] = 0;
		for (int i=0; i<2; i++) fRec281[i] = 0;
		fConst17 = (0.003596453201970443f / (fConst2 + 0.003596453201970443f));
		for (int i=0; i<2; i++) fRec280[i] = 0;
		for (int i=0; i<2; i++) iRec290[i] = 0;
		for (int i=0; i<2; i++) fVec60[i] = 0;
		for (int i=0; i<2; i++) iRec291[i] = 0;
		for (int i=0; i<2; i++) fVec61[i] = 0;
		for (int i=0; i<2; i++) fRec288[i] = 0;
		for (int i=0; i<2; i++) fRec287[i] = 0;
		for (int i=0; i<2; i++) fRec286[i] = 0;
		for (int i=0; i<2; i++) iRec296[i] = 0;
		for (int i=0; i<2; i++) fVec62[i] = 0;
		for (int i=0; i<2; i++) iRec297[i] = 0;
		for (int i=0; i<2; i++) fVec63[i] = 0;
		for (int i=0; i<2; i++) fRec294[i] = 0;
		for (int i=0; i<2; i++) fRec293[i] = 0;
		for (int i=0; i<2; i++) fRec292[i] = 0;
		for (int i=0; i<2; i++) iRec302[i] = 0;
		for (int i=0; i<2; i++) fVec64[i] = 0;
		for (int i=0; i<2; i++) iRec303[i] = 0;
		for (int i=0; i<2; i++) fVec65[i] = 0;
		for (int i=0; i<2; i++) fRec300[i] = 0;
		for (int i=0; i<2; i++) fRec299[i] = 0;
		for (int i=0; i<2; i++) fRec298[i] = 0;
		for (int i=0; i<2; i++) iRec308[i] = 0;
		for (int i=0; i<2; i++) fVec66[i] = 0;
		for (int i=0; i<2; i++) iRec309[i] = 0;
		for (int i=0; i<2; i++) fVec67[i] = 0;
		for (int i=0; i<2; i++) fRec306[i] = 0;
		fConst18 = (1470.5882352941176f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec305[i] = 0;
		for (int i=0; i<2; i++) fRec304[i] = 0;
		for (int i=0; i<2; i++) fRec312[i] = 0;
		for (int i=0; i<2; i++) fRec311[i] = 0;
		for (int i=0; i<2; i++) fRec310[i] = 0;
		for (int i=0; i<2; i++) fRec316[i] = 0;
		for (int i=0; i<2; i++) fRec315[i] = 0;
		for (int i=0; i<2; i++) fRec314[i] = 0;
		for (int i=0; i<2; i++) fRec320[i] = 0;
		for (int i=0; i<2; i++) fRec319[i] = 0;
		for (int i=0; i<2; i++) fRec318[i] = 0;
		for (int i=0; i<2; i++) fRec324[i] = 0;
		fConst19 = (1785.7142857142858f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec323[i] = 0;
		for (int i=0; i<2; i++) fRec322[i] = 0;
		for (int i=0; i<2; i++) fRec328[i] = 0;
		for (int i=0; i<2; i++) fRec327[i] = 0;
		for (int i=0; i<2; i++) fRec326[i] = 0;
		for (int i=0; i<2; i++) fRec332[i] = 0;
		for (int i=0; i<2; i++) fRec331[i] = 0;
		for (int i=0; i<2; i++) fRec330[i] = 0;
		for (int i=0; i<2; i++) fRec336[i] = 0;
		for (int i=0; i<2; i++) fRec335[i] = 0;
		for (int i=0; i<2; i++) fRec334[i] = 0;
		for (int i=0; i<2; i++) fRec340[i] = 0;
		fConst20 = (2127.659574468085f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec339[i] = 0;
		for (int i=0; i<2; i++) fRec338[i] = 0;
		for (int i=0; i<2; i++) fRec344[i] = 0;
		for (int i=0; i<2; i++) fRec343[i] = 0;
		for (int i=0; i<2; i++) fRec342[i] = 0;
		for (int i=0; i<2; i++) fRec348[i] = 0;
		for (int i=0; i<2; i++) fRec347[i] = 0;
		for (int i=0; i<2; i++) fRec346[i] = 0;
		for (int i=0; i<2; i++) fRec352[i] = 0;
		for (int i=0; i<2; i++) fRec351[i] = 0;
		for (int i=0; i<2; i++) fRec350[i] = 0;
		for (int i=0; i<2; i++) fRec356[i] = 0;
		fConst21 = (2564.102564102564f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec355[i] = 0;
		for (int i=0; i<2; i++) fRec354[i] = 0;
		for (int i=0; i<2; i++) fRec360[i] = 0;
		for (int i=0; i<2; i++) fRec359[i] = 0;
		for (int i=0; i<2; i++) fRec358[i] = 0;
		for (int i=0; i<2; i++) fRec364[i] = 0;
		for (int i=0; i<2; i++) fRec363[i] = 0;
		for (int i=0; i<2; i++) fRec362[i] = 0;
		for (int i=0; i<2; i++) fRec368[i] = 0;
		for (int i=0; i<2; i++) fRec367[i] = 0;
		for (int i=0; i<2; i++) fRec366[i] = 0;
		for (int i=0; i<2; i++) fRec372[i] = 0;
		fConst22 = (3703.703703703704f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec371[i] = 0;
		for (int i=0; i<2; i++) fRec370[i] = 0;
		for (int i=0; i<2; i++) fRec376[i] = 0;
		for (int i=0; i<2; i++) fRec375[i] = 0;
		for (int i=0; i<2; i++) fRec374[i] = 0;
		for (int i=0; i<2; i++) fRec380[i] = 0;
		for (int i=0; i<2; i++) fRec379[i] = 0;
		for (int i=0; i<2; i++) fRec378[i] = 0;
		for (int i=0; i<2; i++) fRec384[i] = 0;
		for (int i=0; i<2; i++) fRec383[i] = 0;
		for (int i=0; i<2; i++) fRec382[i] = 0;
		for (int i=0; i<2; i++) iRec390[i] = 0;
		for (int i=0; i<2; i++) fVec68[i] = 0;
		for (int i=0; i<2; i++) fRec388[i] = 0;
		for (int i=0; i<2; i++) fRec387[i] = 0;
		for (int i=0; i<2; i++) fRec386[i] = 0;
		for (int i=0; i<2; i++) iRec395[i] = 0;
		for (int i=0; i<2; i++) fVec69[i] = 0;
		for (int i=0; i<2; i++) fRec393[i] = 0;
		fConst23 = (833.3333333333334f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec392[i] = 0;
		for (int i=0; i<2; i++) fRec391[i] = 0;
		for (int i=0; i<2; i++) iRec400[i] = 0;
		for (int i=0; i<2; i++) fVec70[i] = 0;
		for (int i=0; i<2; i++) fRec398[i] = 0;
		for (int i=0; i<2; i++) fRec397[i] = 0;
		for (int i=0; i<2; i++) fRec396[i] = 0;
		for (int i=0; i<2; i++) iRec405[i] = 0;
		for (int i=0; i<2; i++) fVec71[i] = 0;
		for (int i=0; i<2; i++) fRec403[i] = 0;
		for (int i=0; i<2; i++) fRec402[i] = 0;
		for (int i=0; i<2; i++) fRec401[i] = 0;
		for (int i=0; i<2; i++) iRec410[i] = 0;
		for (int i=0; i<2; i++) fVec72[i] = 0;
		for (int i=0; i<2; i++) fRec408[i] = 0;
		for (int i=0; i<2; i++) fRec407[i] = 0;
		for (int i=0; i<2; i++) fRec406[i] = 0;
		for (int i=0; i<2; i++) iRec415[i] = 0;
		for (int i=0; i<2; i++) fVec73[i] = 0;
		for (int i=0; i<2; i++) fRec413[i] = 0;
		for (int i=0; i<2; i++) fRec412[i] = 0;
		fConst24 = (0.0016849851632047478f / (fConst2 + 0.0016849851632047478f));
		for (int i=0; i<2; i++) fRec411[i] = 0;
		for (int i=0; i<2; i++) iRec420[i] = 0;
		for (int i=0; i<2; i++) fVec74[i] = 0;
		for (int i=0; i<2; i++) fRec418[i] = 0;
		for (int i=0; i<2; i++) fRec417[i] = 0;
		for (int i=0; i<2; i++) fRec416[i] = 0;
		for (int i=0; i<2; i++) iRec425[i] = 0;
		for (int i=0; i<2; i++) fVec75[i] = 0;
		for (int i=0; i<2; i++) fRec423[i] = 0;
		for (int i=0; i<2; i++) fRec422[i] = 0;
		for (int i=0; i<2; i++) fRec421[i] = 0;
		for (int i=0; i<2; i++) iRec430[i] = 0;
		for (int i=0; i<2; i++) fVec76[i] = 0;
		for (int i=0; i<2; i++) fRec428[i] = 0;
		for (int i=0; i<2; i++) fRec427[i] = 0;
		for (int i=0; i<2; i++) fRec426[i] = 0;
		for (int i=0; i<2; i++) iRec435[i] = 0;
		for (int i=0; i<2; i++) fVec77[i] = 0;
		for (int i=0; i<2; i++) fRec433[i] = 0;
		fConst25 = (666.6666666666666f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec432[i] = 0;
		for (int i=0; i<2; i++) fRec431[i] = 0;
		for (int i=0; i<2; i++) iRec440[i] = 0;
		for (int i=0; i<2; i++) fVec78[i] = 0;
		for (int i=0; i<2; i++) fRec438[i] = 0;
		for (int i=0; i<2; i++) fRec437[i] = 0;
		for (int i=0; i<2; i++) fRec436[i] = 0;
		for (int i=0; i<2; i++) iRec445[i] = 0;
		for (int i=0; i<2; i++) fVec79[i] = 0;
		for (int i=0; i<2; i++) fRec443[i] = 0;
		for (int i=0; i<2; i++) fRec442[i] = 0;
		for (int i=0; i<2; i++) fRec441[i] = 0;
		for (int i=0; i<2; i++) iRec450[i] = 0;
		for (int i=0; i<2; i++) fVec80[i] = 0;
		for (int i=0; i<2; i++) fRec448[i] = 0;
		for (int i=0; i<2; i++) fRec447[i] = 0;
		for (int i=0; i<2; i++) fRec446[i] = 0;
		for (int i=0; i<2; i++) iRec455[i] = 0;
		for (int i=0; i<2; i++) fVec81[i] = 0;
		for (int i=0; i<2; i++) fRec453[i] = 0;
		for (int i=0; i<2; i++) fRec452[i] = 0;
		for (int i=0; i<2; i++) fRec451[i] = 0;
		for (int i=0; i<2; i++) iRec460[i] = 0;
		for (int i=0; i<2; i++) fVec82[i] = 0;
		for (int i=0; i<2; i++) fRec458[i] = 0;
		for (int i=0; i<2; i++) fRec457[i] = 0;
		for (int i=0; i<2; i++) fRec456[i] = 0;
		for (int i=0; i<2; i++) iRec465[i] = 0;
		for (int i=0; i<2; i++) fVec83[i] = 0;
		for (int i=0; i<2; i++) fRec463[i] = 0;
		for (int i=0; i<2; i++) fRec462[i] = 0;
		for (int i=0; i<2; i++) fRec461[i] = 0;
		for (int i=0; i<2; i++) iRec470[i] = 0;
		for (int i=0; i<2; i++) fVec84[i] = 0;
		for (int i=0; i<2; i++) fRec468[i] = 0;
		for (int i=0; i<2; i++) fRec467[i] = 0;
		for (int i=0; i<2; i++) fRec466[i] = 0;
		for (int i=0; i<2; i++) fVec85[i] = 0;
		for (int i=0; i<2; i++) fRec230[i] = 0;
		for (int i=0; i<2; i++) fVec86[i] = 0;
		for (int i=0; i<2; i++) fRec471[i] = 0;
		fConst26 = (36.243757712787264f / fConst0);
		fConst27 = (1 - fConst26);
		IOTA = 0;
		for (int i=0; i<4096; i++) iVec87[i] = 0;
		iConst28 = int((0.02f * max(22050, min(192000, fSamplingFreq))));
		for (int i=0; i<2; i++) iRec473[i] = 0;
		fConst29 = (9.5367431640625e-07f / iConst28);
		for (int i=0; i<2; i++) fVec88[i] = 0;
		for (int i=0; i<2; i++) fRec472[i] = 0;
		fConst30 = (0.027590958087858178f * fConst0);
		for (int i=0; i<5; i++) fVec89[i] = 0;
		fslider5 = 1.0f;
		fslider6 = 1.0f;
		for (int i=0; i<2; i++) fRec474[i] = 0;
		fslider7 = 1.0f;
		fslider8 = 1.0f;
		fConst31 = (3968.253968253968f / fSamplingFreq);
		for (int i=0; i<2; i++) fRec475[i] = 0;
		fslider9 = 1.0f;
		for (int i=0; i<2; i++) fVec90[i] = 0;
		fConst32 = (0.000858f / (fConst2 + 0.000858f));
		for (int i=0; i<2; i++) fRec477[i] = 0;
		for (int i=0; i<2; i++) fVec91[i] = 0;
		fConst33 = (0.000429f / (fConst2 + 0.000429f));
		for (int i=0; i<2; i++) fRec476[i] = 0;
		for (int i=0; i<2; i++) fVec92[i] = 0;
		for (int i=0; i<2; i++) fRec480[i] = 0;
		fslider10 = 1.0f;
		for (int i=0; i<2; i++) fVec93[i] = 0;
		fConst34 = (0.00039f / (fConst2 + 0.00039f));
		for (int i=0; i<2; i++) fRec479[i] = 0;
		for (int i=0; i<2; i++) fVec94[i] = 0;
		fConst35 = (0.000195f / (fConst2 + 0.000195f));
		for (int i=0; i<2; i++) fRec478[i] = 0;
		for (int i=0; i<2; i++) fRec483[i] = 0;
		fslider11 = 1.0f;
		for (int i=0; i<2; i++) fVec95[i] = 0;
		fConst36 = (0.0001833f / (fConst2 + 0.0001833f));
		for (int i=0; i<2; i++) fRec482[i] = 0;
		for (int i=0; i<2; i++) fVec96[i] = 0;
		fConst37 = (9.165e-05f / (fConst2 + 9.165e-05f));
		for (int i=0; i<2; i++) fRec481[i] = 0;
		for (int i=0; i<2; i++) fVec97[i] = 0;
		for (int i=0; i<2; i++) fRec486[i] = 0;
		fslider12 = 1.0f;
		for (int i=0; i<2; i++) fVec98[i] = 0;
		fConst38 = (0.00010530000000000001f / (fConst2 + 0.00010530000000000001f));
		for (int i=0; i<2; i++) fRec485[i] = 0;
		for (int i=0; i<2; i++) fVec99[i] = 0;
		fConst39 = (5.2650000000000006e-05f / (fConst2 + 5.2650000000000006e-05f));
		for (int i=0; i<2; i++) fRec484[i] = 0;
		fslider13 = 0.0f;
		for (int i=0; i<2; i++) fRec488[i] = 0;
		for (int i=0; i<2; i++) fRec487[i] = 0;
		for (int i=0; i<2; i++) fRec490[i] = 0;
		for (int i=0; i<2; i++) fRec489[i] = 0;
		for (int i=0; i<2; i++) fRec492[i] = 0;
		for (int i=0; i<2; i++) fRec491[i] = 0;
		for (int i=0; i<2; i++) fRec494[i] = 0;
		for (int i=0; i<2; i++) fRec493[i] = 0;
		fslider14 = 1.0f;
		fslider15 = 1.0f;
		fslider16 = 0.5f;
		fslider17 = 1.0f;
		fslider18 = 0.5f;
		fslider19 = 1.0f;
		for (int i=0; i<2; i++) fVec100[i] = 0;
		for (int i=0; i<2; i++) fRec495[i] = 0;
		fslider20 = 0.0f;
		fslider21 = 0.5f;
		fslider22 = 0.1f;
		for (int i=0; i<2; i++) fRec496[i] = 0;
	}
	virtual void init(int samplingFreq) {
		classInit(samplingFreq);
		instanceInit(samplingFreq);
	}
	virtual void buildUserInterface(UI* interface) {
		interface->openVerticalBox("yc20");
		interface->addButton("A0", &fbutton50);
		interface->addButton("A1", &fbutton30);
		interface->addButton("A2", &fbutton42);
		interface->addButton("A3", &fbutton19);
		interface->addButton("A4", &fbutton20);
		interface->addButton("C0", &fbutton59);
		interface->addButton("C1", &fbutton47);
		interface->addButton("C2", &fbutton33);
		interface->addButton("C3", &fbutton23);
		interface->addButton("C4", &fbutton24);
		interface->addButton("D0", &fbutton57);
		interface->addButton("D1", &fbutton45);
		interface->addButton("D2", &fbutton35);
		interface->addButton("D3", &fbutton5);
		interface->addButton("D4", &fbutton6);
		interface->addButton("F0", &fbutton54);
		interface->addButton("F1", &fbutton25);
		interface->addButton("F2", &fbutton38);
		interface->addButton("F3", &fbutton11);
		interface->addButton("F4", &fbutton12);
		interface->addButton("G0", &fbutton52);
		interface->addButton("G1", &fbutton28);
		interface->addButton("G2", &fbutton40);
		interface->addButton("G3", &fbutton15);
		interface->addButton("G4", &fbutton16);
		interface->openVerticalBox("[2]vibrato");
		interface->declare(&fslider3, "1", "");
		interface->addHorizontalSlider("depth", &fslider3, 0.0f, 0.0f, 1.0f, 0.2f);
		interface->declare(&fslider2, "2", "");
		interface->addHorizontalSlider("speed", &fslider2, 0.0f, 0.0f, 1.0f, 0.2f);
		interface->closeBox();
		interface->addButton("a0", &fbutton51);
		interface->addButton("a1", &fbutton29);
		interface->addButton("a2", &fbutton41);
		interface->addButton("a3", &fbutton17);
		interface->addButton("a4", &fbutton18);
		interface->addButton("b0", &fbutton49);
		interface->addButton("b1", &fbutton31);
		interface->addButton("b2", &fbutton43);
		interface->addButton("b3", &fbutton21);
		interface->addButton("b4", &fbutton22);
		interface->addHorizontalSlider("balance", &fslider14, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->openHorizontalBox("bass");
		interface->declare(&fslider8, "1", "");
		interface->addVerticalSlider("16' b", &fslider8, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider7, "2", "");
		interface->addVerticalSlider("8' b", &fslider7, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider4, "3", "");
		interface->addHorizontalSlider("bass manual", &fslider4, 0.0f, 0.0f, 1.0f, 1.0f);
		interface->declare(&fslider6, "3", "");
		interface->addVerticalSlider("bass volume", &fslider6, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->closeBox();
		interface->addButton("c0", &fbutton60);
		interface->addButton("c1", &fbutton48);
		interface->addButton("c2", &fbutton32);
		interface->addButton("c3", &fbutton0);
		interface->addButton("c4", &fbutton1);
		interface->addButton("c5", &fbutton2);
		interface->addButton("d0", &fbutton58);
		interface->addButton("d1", &fbutton46);
		interface->addButton("d2", &fbutton34);
		interface->addButton("d3", &fbutton3);
		interface->addButton("d4", &fbutton4);
		interface->addButton("e0", &fbutton56);
		interface->addButton("e1", &fbutton44);
		interface->addButton("e2", &fbutton36);
		interface->addButton("e3", &fbutton7);
		interface->addButton("e4", &fbutton8);
		interface->addButton("f0", &fbutton55);
		interface->addButton("f1", &fbutton26);
		interface->addButton("f2", &fbutton37);
		interface->addButton("f3", &fbutton9);
		interface->addButton("f4", &fbutton10);
		interface->addButton("g0", &fbutton53);
		interface->addButton("g1", &fbutton27);
		interface->addButton("g2", &fbutton39);
		interface->addButton("g3", &fbutton13);
		interface->addButton("g4", &fbutton14);
		interface->openHorizontalBox("i");
		interface->declare(&fslider16, "1", "");
		interface->addVerticalSlider("16' i", &fslider16, 0.5f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider15, "2", "");
		interface->addVerticalSlider("8' i", &fslider15, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider17, "3", "");
		interface->addVerticalSlider("4' i", &fslider17, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider18, "4", "");
		interface->addVerticalSlider("2 2/3' i", &fslider18, 0.5f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider19, "5", "");
		interface->addVerticalSlider("2' i", &fslider19, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider20, "6", "");
		interface->addVerticalSlider("1 3/5' i", &fslider20, 0.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider21, "7", "");
		interface->addVerticalSlider("1' i", &fslider21, 0.5f, 0.0f, 1.0f, 0.25f);
		interface->closeBox();
		interface->openHorizontalBox("ii");
		interface->declare(&fslider13, "1", "");
		interface->addVerticalSlider("bright", &fslider13, 0.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider9, "2", "");
		interface->addVerticalSlider("16' ii", &fslider9, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider10, "3", "");
		interface->addVerticalSlider("8' ii", &fslider10, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider11, "4", "");
		interface->addVerticalSlider("4' ii", &fslider11, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->declare(&fslider12, "5", "");
		interface->addVerticalSlider("2' ii", &fslider12, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->closeBox();
		interface->addHorizontalSlider("percussive", &fslider5, 1.0f, 0.0f, 1.0f, 0.25f);
		interface->addHorizontalSlider("pitch", &fslider1, 0.0f, -1.0f, 1.0f, 0.05f);
		interface->addHorizontalSlider("realism", &fslider0, 0.0f, 0.0f, 1.0f, 0.25f);
		interface->addHorizontalSlider("volume", &fslider22, 0.1f, 0.0f, 1.0f, 0.01f);
		interface->closeBox();
	}
	virtual void compute (int count, FAUSTFLOAT** input, FAUSTFLOAT** output) {
		float 	fSlow0 = fslider0;
		float 	fSlow1 = ((int((fSlow0 >= 0.8333333333333334f)))?1.0f:0.0f);
		float 	fSlow2 = (1 + (0.03f * fslider1));
		float 	fSlow3 = (fConst1 * float((5.0f + (3 * fslider2))));
		float 	fSlow4 = (0.0001f + (0.0149f * fslider3));
		int 	iSlow5 = int((fSlow0 >= 0.5f));
		float 	fSlow6 = ((iSlow5)?1.001383f:1.0f);
		float 	fSlow7 = fbutton0;
		float 	fSlow8 = fbutton1;
		float 	fSlow9 = fbutton2;
		float 	fSlow10 = (fSlow9 + (fSlow8 + fSlow7));
		float 	fSlow11 = (1 - fSlow10);
		float 	fSlow12 = ((iSlow5)?1.003796f:1.0f);
		float 	fSlow13 = ((iSlow5)?0.999484f:1.0f);
		float 	fSlow14 = ((iSlow5)?1.001135f:1.0f);
		float 	fSlow15 = ((iSlow5)?1.000064f:1.0f);
		float 	fSlow16 = ((iSlow5)?0.998889f:1.0f);
		float 	fSlow17 = ((iSlow5)?0.997199f:1.0f);
		float 	fSlow18 = ((iSlow5)?0.997294f:1.0f);
		float 	fSlow19 = ((iSlow5)?1.000562f:1.0f);
		float 	fSlow20 = ((iSlow5)?1.002464f:1.0f);
		float 	fSlow21 = ((iSlow5)?0.996945f:1.0f);
		float 	fSlow22 = ((iSlow5)?1.003118f:1.0f);
		float 	fSlow23 = fslider4;
		float 	fSlow24 = (1.0f - fSlow23);
		float 	fSlow25 = (0.5f * fSlow24);
		float 	fSlow26 = fbutton3;
		float 	fSlow27 = fbutton4;
		float 	fSlow28 = (fSlow27 + fSlow26);
		float 	fSlow29 = (1 - fSlow28);
		float 	fSlow30 = fbutton5;
		float 	fSlow31 = fbutton6;
		float 	fSlow32 = (fSlow31 + fSlow30);
		float 	fSlow33 = (1 - fSlow32);
		float 	fSlow34 = fbutton7;
		float 	fSlow35 = fbutton8;
		float 	fSlow36 = (fSlow35 + fSlow34);
		float 	fSlow37 = (1 - fSlow36);
		float 	fSlow38 = fbutton9;
		float 	fSlow39 = fbutton10;
		float 	fSlow40 = (fSlow39 + fSlow38);
		float 	fSlow41 = (1 - fSlow40);
		float 	fSlow42 = fbutton11;
		float 	fSlow43 = fbutton12;
		float 	fSlow44 = (fSlow43 + fSlow42);
		float 	fSlow45 = (1 - fSlow44);
		float 	fSlow46 = fbutton13;
		float 	fSlow47 = fbutton14;
		float 	fSlow48 = (fSlow47 + fSlow46);
		float 	fSlow49 = (1 - fSlow48);
		float 	fSlow50 = fbutton15;
		float 	fSlow51 = fbutton16;
		float 	fSlow52 = (fSlow51 + fSlow50);
		float 	fSlow53 = (1 - fSlow52);
		float 	fSlow54 = fbutton17;
		float 	fSlow55 = fbutton18;
		float 	fSlow56 = (fSlow55 + fSlow54);
		float 	fSlow57 = (1 - fSlow56);
		float 	fSlow58 = fbutton19;
		float 	fSlow59 = fbutton20;
		float 	fSlow60 = (fSlow59 + fSlow58);
		float 	fSlow61 = (1 - fSlow60);
		float 	fSlow62 = fbutton21;
		float 	fSlow63 = fbutton22;
		float 	fSlow64 = (fSlow63 + fSlow62);
		float 	fSlow65 = (1 - fSlow64);
		float 	fSlow66 = fbutton23;
		float 	fSlow67 = fbutton24;
		float 	fSlow68 = (fSlow67 + fSlow66);
		float 	fSlow69 = fbutton25;
		float 	fSlow70 = fbutton26;
		float 	fSlow71 = fbutton27;
		float 	fSlow72 = fbutton28;
		float 	fSlow73 = fbutton29;
		float 	fSlow74 = fbutton30;
		float 	fSlow75 = fbutton31;
		float 	fSlow76 = fbutton32;
		float 	fSlow77 = fbutton33;
		float 	fSlow78 = fbutton34;
		float 	fSlow79 = fbutton35;
		float 	fSlow80 = fbutton36;
		float 	fSlow81 = fbutton37;
		float 	fSlow82 = fbutton38;
		float 	fSlow83 = fbutton39;
		float 	fSlow84 = fbutton40;
		float 	fSlow85 = fbutton41;
		float 	fSlow86 = fbutton42;
		float 	fSlow87 = fbutton43;
		float 	fSlow88 = fbutton44;
		float 	fSlow89 = fbutton45;
		float 	fSlow90 = fbutton46;
		float 	fSlow91 = fbutton47;
		float 	fSlow92 = fbutton48;
		float 	fSlow93 = fbutton49;
		float 	fSlow94 = fbutton50;
		float 	fSlow95 = fbutton51;
		float 	fSlow96 = fbutton52;
		float 	fSlow97 = fbutton53;
		float 	fSlow98 = fbutton54;
		float 	fSlow99 = fbutton55;
		float 	fSlow100 = fbutton56;
		float 	fSlow101 = fbutton57;
		float 	fSlow102 = fbutton58;
		float 	fSlow103 = fbutton59;
		float 	fSlow104 = fbutton60;
		float 	fSlow105 = (1 - fSlow69);
		float 	fSlow106 = (1 - fSlow70);
		float 	fSlow107 = (1 - fSlow71);
		float 	fSlow108 = (1 - fSlow72);
		float 	fSlow109 = (1 - fSlow73);
		float 	fSlow110 = (1 - fSlow74);
		float 	fSlow111 = (1 - fSlow75);
		float 	fSlow112 = (1 - fSlow76);
		float 	fSlow113 = (1 - fSlow77);
		float 	fSlow114 = (1 - fSlow78);
		float 	fSlow115 = (1 - fSlow79);
		float 	fSlow116 = (1 - fSlow80);
		float 	fSlow117 = (1 - fSlow81);
		float 	fSlow118 = (1 - fSlow82);
		float 	fSlow119 = (1 - fSlow83);
		float 	fSlow120 = (1 - fSlow84);
		float 	fSlow121 = (1 - fSlow85);
		float 	fSlow122 = (1 - fSlow86);
		float 	fSlow123 = (1 - fSlow87);
		float 	fSlow124 = (1 - fSlow7);
		float 	fSlow125 = (1 - fSlow66);
		float 	fSlow126 = (1 - fSlow26);
		float 	fSlow127 = (1 - fSlow30);
		float 	fSlow128 = (1 - fSlow34);
		float 	fSlow129 = (1 - fSlow38);
		float 	fSlow130 = (1 - fSlow42);
		float 	fSlow131 = (1 - fSlow46);
		float 	fSlow132 = (1 - fSlow50);
		float 	fSlow133 = (1 - fSlow54);
		float 	fSlow134 = (1 - fSlow58);
		float 	fSlow135 = (1 - fSlow62);
		float 	fSlow136 = (1 - fSlow8);
		float 	fSlow137 = (1 - fSlow67);
		float 	fSlow138 = (1 - fSlow27);
		float 	fSlow139 = (1 - fSlow31);
		float 	fSlow140 = (1 - fSlow35);
		float 	fSlow141 = (1 - fSlow39);
		float 	fSlow142 = (1 - fSlow43);
		float 	fSlow143 = (1 - fSlow47);
		float 	fSlow144 = (1 - fSlow51);
		float 	fSlow145 = (1 - fSlow55);
		float 	fSlow146 = (1 - fSlow59);
		float 	fSlow147 = (1 - fSlow63);
		float 	fSlow148 = (1 - fSlow9);
		float 	fSlow149 = ((int((fSlow0 > 0)))?0.01357f:0.0f);
		float 	fSlow150 = (4.5f * fslider5);
		float 	fSlow151 = (0.02f * fslider6);
		float 	fSlow152 = fslider7;
		float 	fSlow153 = (fSlow152 * (1 + (fSlow152 * ((2.81f * fSlow152) - 2.81f))));
		float 	fSlow154 = fslider8;
		float 	fSlow155 = (fSlow154 * (1 + (fSlow154 * ((2.81f * fSlow154) - 2.81f))));
		float 	fSlow156 = fslider9;
		float 	fSlow157 = (fSlow156 * (1 + (fSlow156 * ((2.81f * fSlow156) - 2.81f))));
		float 	fSlow158 = (0.4583333333333333f * fSlow157);
		float 	fSlow159 = fslider10;
		float 	fSlow160 = (fSlow159 * (1 + (fSlow159 * ((2.81f * fSlow159) - 2.81f))));
		float 	fSlow161 = (0.4583333333333333f * fSlow160);
		float 	fSlow162 = fslider11;
		float 	fSlow163 = (fSlow162 * (1 + (fSlow162 * ((2.81f * fSlow162) - 2.81f))));
		float 	fSlow164 = (0.4583333333333333f * fSlow163);
		float 	fSlow165 = (fSlow9 + fSlow8);
		float 	fSlow166 = (2 - fSlow165);
		float 	fSlow167 = fslider12;
		float 	fSlow168 = (fSlow167 * (1 + (fSlow167 * ((2.81f * fSlow167) - 2.81f))));
		float 	fSlow169 = (0.4583333333333333f * fSlow168);
		float 	fSlow170 = (0.9615384615384616f * fslider13);
		float 	fSlow171 = (0.019230769230769232f + fSlow170);
		float 	fSlow172 = (0.6f * (0.9807692307692307f - fSlow170));
		float 	fSlow173 = fslider14;
		float 	fSlow174 = (2.5f * fSlow173);
		float 	fSlow175 = fslider15;
		float 	fSlow176 = (fSlow175 * (1 + (fSlow175 * ((2.81f * fSlow175) - 2.81f))));
		float 	fSlow177 = fslider16;
		float 	fSlow178 = (fSlow177 * (1 + (fSlow177 * ((2.81f * fSlow177) - 2.81f))));
		float 	fSlow179 = fslider17;
		float 	fSlow180 = (fSlow179 * (1 + (fSlow179 * ((2.81f * fSlow179) - 2.81f))));
		float 	fSlow181 = fslider18;
		float 	fSlow182 = (fSlow181 * (1 + (fSlow181 * ((2.81f * fSlow181) - 2.81f))));
		float 	fSlow183 = fslider19;
		float 	fSlow184 = (fSlow183 * (1 + (fSlow183 * ((2.81f * fSlow183) - 2.81f))));
		float 	fSlow185 = (1 - fSlow165);
		float 	fSlow186 = fslider20;
		float 	fSlow187 = (fSlow186 * (1 + (fSlow186 * ((2.81f * fSlow186) - 2.81f))));
		float 	fSlow188 = fslider21;
		float 	fSlow189 = (fSlow188 * (1 + (fSlow188 * ((2.81f * fSlow188) - 2.81f))));
		float 	fSlow190 = (1 - fSlow173);
		float 	fSlow191 = (0.02f * fslider22);
		FAUSTFLOAT* output0 = output[0];
		for (int i=0; i<count; i++) {
			fRec5[0] = ((fRec5[1] + fSlow3) - floorf(fRec5[1]));
			float fTemp0 = ((fSlow4 * sinf((6.283185307179586f * fRec5[0]))) + fSlow2);
			float fTemp1 = ((fConst1 * float((4186.009044809578f * (fSlow6 * fTemp0)))) + fRec4[1]);
			fRec4[0] = (fTemp1 - floorf(fTemp1));
			int iTemp2 = ((int((fRec4[1] > fRec4[0])))?1:0);
			float fTemp3 = (1 + fRec4[0]);
			float fTemp4 = (0 - ((fRec4[1] + floorf((fTemp3 - fRec4[1]))) - fTemp3));
			fRec2[0] = saw_blep_x(iTemp2, (0 - (2 * (fRec4[0] - 0.5f))), fRec4[0], fTemp4);
			fRec3[0] = saw_blep_prev(iTemp2, fRec2[1], fRec4[1], fTemp4);
			fRec1[0] = (fConst3 * (((1.95f * fRec3[0]) - (1.95f * fRec3[1])) + fRec1[1]));
			float fTemp5 = ((fConst1 * float((4434.922095629953f * (fSlow12 * fTemp0)))) + fRec11[1]);
			fRec11[0] = (fTemp5 - floorf(fTemp5));
			iRec10[0] = ((int(((fRec11[0] - fRec11[1]) < 0)))?(1 - iRec10[1]):iRec10[1]);
			float fTemp6 = (fRec11[0] + iRec10[0]);
			fVec0[0] = fTemp6;
			float fTemp7 = (0.5f * fVec0[0]);
			float fTemp8 = (0.5f * fVec0[1]);
			iRec12[0] = ((int(((fTemp7 - fTemp8) < 0)))?(1 - iRec12[1]):iRec12[1]);
			float fTemp9 = (iRec12[0] + fTemp7);
			fVec1[0] = fTemp9;
			float fTemp10 = (0.5f * fVec1[0]);
			float fTemp11 = (0.5f * fVec1[1]);
			iRec13[0] = ((int(((fTemp10 - fTemp11) < 0)))?(1 - iRec13[1]):iRec13[1]);
			float fTemp12 = (iRec13[0] + fTemp10);
			fVec2[0] = fTemp12;
			float fTemp13 = (0.5f * fVec2[1]);
			float fTemp14 = (0.5f * fVec2[0]);
			float fTemp15 = (1 + fTemp14);
			float fTemp16 = (fTemp15 - (fTemp13 + floorf((fTemp15 - fTemp13))));
			float fTemp17 = (0.5f * (1.0f + fVec2[0]));
			int iTemp18 = ((int((fTemp13 > fTemp14)))?1:((int(((fTemp17 - floorf(fTemp17)) < fTemp16)))?2:0));
			fRec8[0] = square_blep_x(iTemp18, ((int((fTemp14 < 0.5f)))?1.0f:-1.0f), fTemp14, fTemp16);
			float 	fRec9 = square_blep_prev(iTemp18, fRec8[1], fTemp13, fTemp16);
			fRec7[0] = (fRec7[1] + (fConst4 * (fRec9 - fRec7[1])));
			fRec6[0] = (fConst3 * ((fRec7[0] - fRec7[1]) + fRec6[1]));
			iRec18[0] = ((int(((fRec4[0] - fRec4[1]) < 0)))?(1 - iRec18[1]):iRec18[1]);
			float fTemp19 = (fRec4[0] + iRec18[0]);
			fVec3[0] = fTemp19;
			float fTemp20 = (0.5f * fVec3[0]);
			float fTemp21 = (0.5f * fVec3[1]);
			iRec19[0] = ((int(((fTemp20 - fTemp21) < 0)))?(1 - iRec19[1]):iRec19[1]);
			float fTemp22 = (iRec19[0] + fTemp20);
			fVec4[0] = fTemp22;
			float fTemp23 = (0.5f * fVec4[0]);
			float fTemp24 = (0.5f * fVec4[1]);
			iRec20[0] = ((int(((fTemp23 - fTemp24) < 0)))?(1 - iRec20[1]):iRec20[1]);
			float fTemp25 = (iRec20[0] + fTemp23);
			fVec5[0] = fTemp25;
			float fTemp26 = (0.5f * fVec5[1]);
			float fTemp27 = (0.5f * fVec5[0]);
			float fTemp28 = (1 + fTemp27);
			float fTemp29 = (fTemp28 - (fTemp26 + floorf((fTemp28 - fTemp26))));
			float fTemp30 = (0.5f * (1.0f + fVec5[0]));
			int iTemp31 = ((int((fTemp26 > fTemp27)))?1:((int(((fTemp30 - floorf(fTemp30)) < fTemp29)))?2:0));
			fRec16[0] = square_blep_x(iTemp31, ((int((fTemp27 < 0.5f)))?1.0f:-1.0f), fTemp27, fTemp29);
			float 	fRec17 = square_blep_prev(iTemp31, fRec16[1], fTemp26, fTemp29);
			fRec15[0] = (fRec15[1] + (fConst4 * (fRec17 - fRec15[1])));
			fRec14[0] = (fConst3 * ((fRec15[0] - fRec15[1]) + fRec14[1]));
			float fTemp32 = ((fConst1 * float((4698.63628667852f * (fSlow13 * fTemp0)))) + fRec26[1]);
			fRec26[0] = (fTemp32 - floorf(fTemp32));
			iRec25[0] = ((int(((fRec26[0] - fRec26[1]) < 0)))?(1 - iRec25[1]):iRec25[1]);
			float fTemp33 = (fRec26[0] + iRec25[0]);
			fVec6[0] = fTemp33;
			float fTemp34 = (0.5f * fVec6[0]);
			float fTemp35 = (0.5f * fVec6[1]);
			iRec27[0] = ((int(((fTemp34 - fTemp35) < 0)))?(1 - iRec27[1]):iRec27[1]);
			float fTemp36 = (iRec27[0] + fTemp34);
			fVec7[0] = fTemp36;
			float fTemp37 = (0.5f * fVec7[0]);
			float fTemp38 = (0.5f * fVec7[1]);
			iRec28[0] = ((int(((fTemp37 - fTemp38) < 0)))?(1 - iRec28[1]):iRec28[1]);
			float fTemp39 = (iRec28[0] + fTemp37);
			fVec8[0] = fTemp39;
			float fTemp40 = (0.5f * fVec8[1]);
			float fTemp41 = (0.5f * fVec8[0]);
			float fTemp42 = (1 + fTemp41);
			float fTemp43 = (fTemp42 - (fTemp40 + floorf((fTemp42 - fTemp40))));
			float fTemp44 = (0.5f * (1.0f + fVec8[0]));
			int iTemp45 = ((int((fTemp40 > fTemp41)))?1:((int(((fTemp44 - floorf(fTemp44)) < fTemp43)))?2:0));
			fRec23[0] = square_blep_x(iTemp45, ((int((fTemp41 < 0.5f)))?1.0f:-1.0f), fTemp41, fTemp43);
			float 	fRec24 = square_blep_prev(iTemp45, fRec23[1], fTemp40, fTemp43);
			fRec22[0] = (fRec22[1] + (fConst4 * (fRec24 - fRec22[1])));
			fRec21[0] = (fConst3 * ((fRec22[0] - fRec22[1]) + fRec21[1]));
			float fTemp46 = ((fConst1 * float((4978.031739553295f * (fSlow14 * fTemp0)))) + fRec34[1]);
			fRec34[0] = (fTemp46 - floorf(fTemp46));
			iRec33[0] = ((int(((fRec34[0] - fRec34[1]) < 0)))?(1 - iRec33[1]):iRec33[1]);
			float fTemp47 = (fRec34[0] + iRec33[0]);
			fVec9[0] = fTemp47;
			float fTemp48 = (0.5f * fVec9[0]);
			float fTemp49 = (0.5f * fVec9[1]);
			iRec35[0] = ((int(((fTemp48 - fTemp49) < 0)))?(1 - iRec35[1]):iRec35[1]);
			float fTemp50 = (iRec35[0] + fTemp48);
			fVec10[0] = fTemp50;
			float fTemp51 = (0.5f * fVec10[0]);
			float fTemp52 = (0.5f * fVec10[1]);
			iRec36[0] = ((int(((fTemp51 - fTemp52) < 0)))?(1 - iRec36[1]):iRec36[1]);
			float fTemp53 = (iRec36[0] + fTemp51);
			fVec11[0] = fTemp53;
			float fTemp54 = (0.5f * fVec11[1]);
			float fTemp55 = (0.5f * fVec11[0]);
			float fTemp56 = (1 + fTemp55);
			float fTemp57 = (fTemp56 - (fTemp54 + floorf((fTemp56 - fTemp54))));
			float fTemp58 = (0.5f * (1.0f + fVec11[0]));
			int iTemp59 = ((int((fTemp54 > fTemp55)))?1:((int(((fTemp58 - floorf(fTemp58)) < fTemp57)))?2:0));
			fRec31[0] = square_blep_x(iTemp59, ((int((fTemp55 < 0.5f)))?1.0f:-1.0f), fTemp55, fTemp57);
			float 	fRec32 = square_blep_prev(iTemp59, fRec31[1], fTemp54, fTemp57);
			fRec30[0] = (fRec30[1] + (fConst4 * (fRec32 - fRec30[1])));
			fRec29[0] = (fConst3 * ((fRec30[0] - fRec30[1]) + fRec29[1]));
			float fTemp60 = ((fConst1 * float((5274.04091060592f * (fSlow15 * fTemp0)))) + fRec42[1]);
			fRec42[0] = (fTemp60 - floorf(fTemp60));
			iRec41[0] = ((int(((fRec42[0] - fRec42[1]) < 0)))?(1 - iRec41[1]):iRec41[1]);
			float fTemp61 = (fRec42[0] + iRec41[0]);
			fVec12[0] = fTemp61;
			float fTemp62 = (0.5f * fVec12[0]);
			float fTemp63 = (0.5f * fVec12[1]);
			iRec43[0] = ((int(((fTemp62 - fTemp63) < 0)))?(1 - iRec43[1]):iRec43[1]);
			float fTemp64 = (iRec43[0] + fTemp62);
			fVec13[0] = fTemp64;
			float fTemp65 = (0.5f * fVec13[0]);
			float fTemp66 = (0.5f * fVec13[1]);
			iRec44[0] = ((int(((fTemp65 - fTemp66) < 0)))?(1 - iRec44[1]):iRec44[1]);
			float fTemp67 = (iRec44[0] + fTemp65);
			fVec14[0] = fTemp67;
			float fTemp68 = (0.5f * fVec14[1]);
			float fTemp69 = (0.5f * fVec14[0]);
			float fTemp70 = (1 + fTemp69);
			float fTemp71 = (fTemp70 - (fTemp68 + floorf((fTemp70 - fTemp68))));
			float fTemp72 = (0.5f * (1.0f + fVec14[0]));
			int iTemp73 = ((int((fTemp68 > fTemp69)))?1:((int(((fTemp72 - floorf(fTemp72)) < fTemp71)))?2:0));
			fRec39[0] = square_blep_x(iTemp73, ((int((fTemp69 < 0.5f)))?1.0f:-1.0f), fTemp69, fTemp71);
			float 	fRec40 = square_blep_prev(iTemp73, fRec39[1], fTemp68, fTemp71);
			fRec38[0] = (fRec38[1] + (fConst5 * (fRec40 - fRec38[1])));
			fRec37[0] = (fConst3 * ((fRec38[0] - fRec38[1]) + fRec37[1]));
			float fTemp74 = (fRec37[0] + (fRec29[0] + (fRec21[0] + (fRec14[0] + fRec6[0]))));
			float fTemp75 = ((fConst1 * float((5587.651702928062f * (fSlow16 * fTemp0)))) + fRec50[1]);
			fRec50[0] = (fTemp75 - floorf(fTemp75));
			iRec49[0] = ((int(((fRec50[0] - fRec50[1]) < 0)))?(1 - iRec49[1]):iRec49[1]);
			float fTemp76 = (fRec50[0] + iRec49[0]);
			fVec15[0] = fTemp76;
			float fTemp77 = (0.5f * fVec15[0]);
			float fTemp78 = (0.5f * fVec15[1]);
			iRec51[0] = ((int(((fTemp77 - fTemp78) < 0)))?(1 - iRec51[1]):iRec51[1]);
			float fTemp79 = (iRec51[0] + fTemp77);
			fVec16[0] = fTemp79;
			float fTemp80 = (0.5f * fVec16[0]);
			float fTemp81 = (0.5f * fVec16[1]);
			iRec52[0] = ((int(((fTemp80 - fTemp81) < 0)))?(1 - iRec52[1]):iRec52[1]);
			float fTemp82 = (iRec52[0] + fTemp80);
			fVec17[0] = fTemp82;
			float fTemp83 = (0.5f * fVec17[1]);
			float fTemp84 = (0.5f * fVec17[0]);
			float fTemp85 = (1 + fTemp84);
			float fTemp86 = (fTemp85 - (fTemp83 + floorf((fTemp85 - fTemp83))));
			float fTemp87 = (0.5f * (1.0f + fVec17[0]));
			int iTemp88 = ((int((fTemp83 > fTemp84)))?1:((int(((fTemp87 - floorf(fTemp87)) < fTemp86)))?2:0));
			fRec47[0] = square_blep_x(iTemp88, ((int((fTemp84 < 0.5f)))?1.0f:-1.0f), fTemp84, fTemp86);
			float 	fRec48 = square_blep_prev(iTemp88, fRec47[1], fTemp83, fTemp86);
			fRec46[0] = (fRec46[1] + (fConst5 * (fRec48 - fRec46[1])));
			fRec45[0] = (fConst3 * ((fRec46[0] - fRec46[1]) + fRec45[1]));
			float fTemp89 = ((fConst1 * float((5919.91076338615f * (fSlow17 * fTemp0)))) + fRec58[1]);
			fRec58[0] = (fTemp89 - floorf(fTemp89));
			iRec57[0] = ((int(((fRec58[0] - fRec58[1]) < 0)))?(1 - iRec57[1]):iRec57[1]);
			float fTemp90 = (fRec58[0] + iRec57[0]);
			fVec18[0] = fTemp90;
			float fTemp91 = (0.5f * fVec18[0]);
			float fTemp92 = (0.5f * fVec18[1]);
			iRec59[0] = ((int(((fTemp91 - fTemp92) < 0)))?(1 - iRec59[1]):iRec59[1]);
			float fTemp93 = (iRec59[0] + fTemp91);
			fVec19[0] = fTemp93;
			float fTemp94 = (0.5f * fVec19[0]);
			float fTemp95 = (0.5f * fVec19[1]);
			iRec60[0] = ((int(((fTemp94 - fTemp95) < 0)))?(1 - iRec60[1]):iRec60[1]);
			float fTemp96 = (iRec60[0] + fTemp94);
			fVec20[0] = fTemp96;
			float fTemp97 = (0.5f * fVec20[1]);
			float fTemp98 = (0.5f * fVec20[0]);
			float fTemp99 = (1 + fTemp98);
			float fTemp100 = (fTemp99 - (fTemp97 + floorf((fTemp99 - fTemp97))));
			float fTemp101 = (0.5f * (1.0f + fVec20[0]));
			int iTemp102 = ((int((fTemp97 > fTemp98)))?1:((int(((fTemp101 - floorf(fTemp101)) < fTemp100)))?2:0));
			fRec55[0] = square_blep_x(iTemp102, ((int((fTemp98 < 0.5f)))?1.0f:-1.0f), fTemp98, fTemp100);
			float 	fRec56 = square_blep_prev(iTemp102, fRec55[1], fTemp97, fTemp100);
			fRec54[0] = (fRec54[1] + (fConst5 * (fRec56 - fRec54[1])));
			fRec53[0] = (fConst3 * ((fRec54[0] - fRec54[1]) + fRec53[1]));
			float fTemp103 = ((fConst1 * float((6271.926975707989f * (fSlow18 * fTemp0)))) + fRec66[1]);
			fRec66[0] = (fTemp103 - floorf(fTemp103));
			iRec65[0] = ((int(((fRec66[0] - fRec66[1]) < 0)))?(1 - iRec65[1]):iRec65[1]);
			float fTemp104 = (fRec66[0] + iRec65[0]);
			fVec21[0] = fTemp104;
			float fTemp105 = (0.5f * fVec21[0]);
			float fTemp106 = (0.5f * fVec21[1]);
			iRec67[0] = ((int(((fTemp105 - fTemp106) < 0)))?(1 - iRec67[1]):iRec67[1]);
			float fTemp107 = (iRec67[0] + fTemp105);
			fVec22[0] = fTemp107;
			float fTemp108 = (0.5f * fVec22[0]);
			float fTemp109 = (0.5f * fVec22[1]);
			iRec68[0] = ((int(((fTemp108 - fTemp109) < 0)))?(1 - iRec68[1]):iRec68[1]);
			float fTemp110 = (iRec68[0] + fTemp108);
			fVec23[0] = fTemp110;
			float fTemp111 = (0.5f * fVec23[1]);
			float fTemp112 = (0.5f * fVec23[0]);
			float fTemp113 = (1 + fTemp112);
			float fTemp114 = (fTemp113 - (fTemp111 + floorf((fTemp113 - fTemp111))));
			float fTemp115 = (0.5f * (1.0f + fVec23[0]));
			int iTemp116 = ((int((fTemp111 > fTemp112)))?1:((int(((fTemp115 - floorf(fTemp115)) < fTemp114)))?2:0));
			fRec63[0] = square_blep_x(iTemp116, ((int((fTemp112 < 0.5f)))?1.0f:-1.0f), fTemp112, fTemp114);
			float 	fRec64 = square_blep_prev(iTemp116, fRec63[1], fTemp111, fTemp114);
			fRec62[0] = (fRec62[1] + (fConst5 * (fRec64 - fRec62[1])));
			fRec61[0] = (fConst3 * ((fRec62[0] - fRec62[1]) + fRec61[1]));
			float fTemp117 = ((fConst1 * float((6644.875161279122f * (fSlow19 * fTemp0)))) + fRec74[1]);
			fRec74[0] = (fTemp117 - floorf(fTemp117));
			iRec73[0] = ((int(((fRec74[0] - fRec74[1]) < 0)))?(1 - iRec73[1]):iRec73[1]);
			float fTemp118 = (fRec74[0] + iRec73[0]);
			fVec24[0] = fTemp118;
			float fTemp119 = (0.5f * fVec24[0]);
			float fTemp120 = (0.5f * fVec24[1]);
			iRec75[0] = ((int(((fTemp119 - fTemp120) < 0)))?(1 - iRec75[1]):iRec75[1]);
			float fTemp121 = (iRec75[0] + fTemp119);
			fVec25[0] = fTemp121;
			float fTemp122 = (0.5f * fVec25[0]);
			float fTemp123 = (0.5f * fVec25[1]);
			iRec76[0] = ((int(((fTemp122 - fTemp123) < 0)))?(1 - iRec76[1]):iRec76[1]);
			float fTemp124 = (iRec76[0] + fTemp122);
			fVec26[0] = fTemp124;
			float fTemp125 = (0.5f * fVec26[1]);
			float fTemp126 = (0.5f * fVec26[0]);
			float fTemp127 = (1 + fTemp126);
			float fTemp128 = (fTemp127 - (fTemp125 + floorf((fTemp127 - fTemp125))));
			float fTemp129 = (0.5f * (1.0f + fVec26[0]));
			int iTemp130 = ((int((fTemp125 > fTemp126)))?1:((int(((fTemp129 - floorf(fTemp129)) < fTemp128)))?2:0));
			fRec71[0] = square_blep_x(iTemp130, ((int((fTemp126 < 0.5f)))?1.0f:-1.0f), fTemp126, fTemp128);
			float 	fRec72 = square_blep_prev(iTemp130, fRec71[1], fTemp125, fTemp128);
			fRec70[0] = (fRec70[1] + (fConst6 * (fRec72 - fRec70[1])));
			fRec69[0] = (fConst3 * ((fRec70[0] - fRec70[1]) + fRec69[1]));
			float fTemp131 = (fRec69[0] + (fRec61[0] + (fRec53[0] + (fRec45[0] + fTemp74))));
			float fTemp132 = ((fConst1 * float((7.04e+03f * (fSlow20 * fTemp0)))) + fRec82[1]);
			fRec82[0] = (fTemp132 - floorf(fTemp132));
			iRec81[0] = ((int(((fRec82[0] - fRec82[1]) < 0)))?(1 - iRec81[1]):iRec81[1]);
			float fTemp133 = (fRec82[0] + iRec81[0]);
			fVec27[0] = fTemp133;
			float fTemp134 = (0.5f * fVec27[0]);
			float fTemp135 = (0.5f * fVec27[1]);
			iRec83[0] = ((int(((fTemp134 - fTemp135) < 0)))?(1 - iRec83[1]):iRec83[1]);
			float fTemp136 = (iRec83[0] + fTemp134);
			fVec28[0] = fTemp136;
			float fTemp137 = (0.5f * fVec28[0]);
			float fTemp138 = (0.5f * fVec28[1]);
			iRec84[0] = ((int(((fTemp137 - fTemp138) < 0)))?(1 - iRec84[1]):iRec84[1]);
			float fTemp139 = (iRec84[0] + fTemp137);
			fVec29[0] = fTemp139;
			float fTemp140 = (0.5f * fVec29[1]);
			float fTemp141 = (0.5f * fVec29[0]);
			float fTemp142 = (1 + fTemp141);
			float fTemp143 = (fTemp142 - (fTemp140 + floorf((fTemp142 - fTemp140))));
			float fTemp144 = (0.5f * (1.0f + fVec29[0]));
			int iTemp145 = ((int((fTemp140 > fTemp141)))?1:((int(((fTemp144 - floorf(fTemp144)) < fTemp143)))?2:0));
			fRec79[0] = square_blep_x(iTemp145, ((int((fTemp141 < 0.5f)))?1.0f:-1.0f), fTemp141, fTemp143);
			float 	fRec80 = square_blep_prev(iTemp145, fRec79[1], fTemp140, fTemp143);
			fRec78[0] = (fRec78[1] + (fConst6 * (fRec80 - fRec78[1])));
			fRec77[0] = (fConst3 * ((fRec78[0] - fRec78[1]) + fRec77[1]));
			float fTemp146 = ((fConst1 * float((7458.620184289437f * (fSlow21 * fTemp0)))) + fRec90[1]);
			fRec90[0] = (fTemp146 - floorf(fTemp146));
			iRec89[0] = ((int(((fRec90[0] - fRec90[1]) < 0)))?(1 - iRec89[1]):iRec89[1]);
			float fTemp147 = (fRec90[0] + iRec89[0]);
			fVec30[0] = fTemp147;
			float fTemp148 = (0.5f * fVec30[0]);
			float fTemp149 = (0.5f * fVec30[1]);
			iRec91[0] = ((int(((fTemp148 - fTemp149) < 0)))?(1 - iRec91[1]):iRec91[1]);
			float fTemp150 = (iRec91[0] + fTemp148);
			fVec31[0] = fTemp150;
			float fTemp151 = (0.5f * fVec31[0]);
			float fTemp152 = (0.5f * fVec31[1]);
			iRec92[0] = ((int(((fTemp151 - fTemp152) < 0)))?(1 - iRec92[1]):iRec92[1]);
			float fTemp153 = (iRec92[0] + fTemp151);
			fVec32[0] = fTemp153;
			float fTemp154 = (0.5f * fVec32[1]);
			float fTemp155 = (0.5f * fVec32[0]);
			float fTemp156 = (1 + fTemp155);
			float fTemp157 = (fTemp156 - (fTemp154 + floorf((fTemp156 - fTemp154))));
			float fTemp158 = (0.5f * (1.0f + fVec32[0]));
			int iTemp159 = ((int((fTemp154 > fTemp155)))?1:((int(((fTemp158 - floorf(fTemp158)) < fTemp157)))?2:0));
			fRec87[0] = square_blep_x(iTemp159, ((int((fTemp155 < 0.5f)))?1.0f:-1.0f), fTemp155, fTemp157);
			float 	fRec88 = square_blep_prev(iTemp159, fRec87[1], fTemp154, fTemp157);
			fRec86[0] = (fRec86[1] + (fConst6 * (fRec88 - fRec86[1])));
			fRec85[0] = (fConst3 * ((fRec86[0] - fRec86[1]) + fRec85[1]));
			float fTemp160 = ((fConst1 * float((7902.132820097988f * (fSlow22 * fTemp0)))) + fRec98[1]);
			fRec98[0] = (fTemp160 - floorf(fTemp160));
			iRec97[0] = ((int(((fRec98[0] - fRec98[1]) < 0)))?(1 - iRec97[1]):iRec97[1]);
			float fTemp161 = (fRec98[0] + iRec97[0]);
			fVec33[0] = fTemp161;
			float fTemp162 = (0.5f * fVec33[0]);
			float fTemp163 = (0.5f * fVec33[1]);
			iRec99[0] = ((int(((fTemp162 - fTemp163) < 0)))?(1 - iRec99[1]):iRec99[1]);
			float fTemp164 = (iRec99[0] + fTemp162);
			fVec34[0] = fTemp164;
			float fTemp165 = (0.5f * fVec34[0]);
			float fTemp166 = (0.5f * fVec34[1]);
			iRec100[0] = ((int(((fTemp165 - fTemp166) < 0)))?(1 - iRec100[1]):iRec100[1]);
			float fTemp167 = (iRec100[0] + fTemp165);
			fVec35[0] = fTemp167;
			float fTemp168 = (0.5f * fVec35[1]);
			float fTemp169 = (0.5f * fVec35[0]);
			float fTemp170 = (1 + fTemp169);
			float fTemp171 = (fTemp170 - (fTemp168 + floorf((fTemp170 - fTemp168))));
			float fTemp172 = (0.5f * (1.0f + fVec35[0]));
			int iTemp173 = ((int((fTemp168 > fTemp169)))?1:((int(((fTemp172 - floorf(fTemp172)) < fTemp171)))?2:0));
			fRec95[0] = square_blep_x(iTemp173, ((int((fTemp169 < 0.5f)))?1.0f:-1.0f), fTemp169, fTemp171);
			float 	fRec96 = square_blep_prev(iTemp173, fRec95[1], fTemp168, fTemp171);
			fRec94[0] = (fRec94[1] + (fConst6 * (fRec96 - fRec94[1])));
			fRec93[0] = (fConst3 * ((fRec94[0] - fRec94[1]) + fRec93[1]));
			float fTemp174 = (1 + fTemp23);
			float fTemp175 = (fTemp174 - (fTemp24 + floorf((fTemp174 - fTemp24))));
			float fTemp176 = (0.5f * (1.0f + fVec4[0]));
			int iTemp177 = ((int((fTemp24 > fTemp23)))?1:((int(((fTemp176 - floorf(fTemp176)) < fTemp175)))?2:0));
			fRec103[0] = square_blep_x(iTemp177, ((int((fTemp23 < 0.5f)))?1.0f:-1.0f), fTemp23, fTemp175);
			float 	fRec104 = square_blep_prev(iTemp177, fRec103[1], fTemp24, fTemp175);
			fRec102[0] = (fRec102[1] + (fConst7 * (fRec104 - fRec102[1])));
			fRec101[0] = (fConst3 * ((fRec102[0] - fRec102[1]) + fRec101[1]));
			float fTemp178 = (fRec101[0] + (fRec93[0] + (fRec85[0] + (fRec77[0] + fTemp131))));
			float fTemp179 = (1 + fTemp10);
			float fTemp180 = (fTemp179 - (fTemp11 + floorf((fTemp179 - fTemp11))));
			float fTemp181 = (0.5f * (1.0f + fVec1[0]));
			int iTemp182 = ((int((fTemp11 > fTemp10)))?1:((int(((fTemp181 - floorf(fTemp181)) < fTemp180)))?2:0));
			fRec107[0] = square_blep_x(iTemp182, ((int((fTemp10 < 0.5f)))?1.0f:-1.0f), fTemp10, fTemp180);
			float 	fRec108 = square_blep_prev(iTemp182, fRec107[1], fTemp11, fTemp180);
			fRec106[0] = (fRec106[1] + (fConst7 * (fRec108 - fRec106[1])));
			fRec105[0] = (fConst3 * ((fRec106[0] - fRec106[1]) + fRec105[1]));
			float fTemp183 = (1 + fTemp37);
			float fTemp184 = (fTemp183 - (fTemp38 + floorf((fTemp183 - fTemp38))));
			float fTemp185 = (0.5f * (1.0f + fVec7[0]));
			int iTemp186 = ((int((fTemp38 > fTemp37)))?1:((int(((fTemp185 - floorf(fTemp185)) < fTemp184)))?2:0));
			fRec111[0] = square_blep_x(iTemp186, ((int((fTemp37 < 0.5f)))?1.0f:-1.0f), fTemp37, fTemp184);
			float 	fRec112 = square_blep_prev(iTemp186, fRec111[1], fTemp38, fTemp184);
			fRec110[0] = (fRec110[1] + (fConst7 * (fRec112 - fRec110[1])));
			fRec109[0] = (fConst3 * ((fRec110[0] - fRec110[1]) + fRec109[1]));
			float fTemp187 = (1 + fTemp51);
			float fTemp188 = (fTemp187 - (fTemp52 + floorf((fTemp187 - fTemp52))));
			float fTemp189 = (0.5f * (1.0f + fVec10[0]));
			int iTemp190 = ((int((fTemp52 > fTemp51)))?1:((int(((fTemp189 - floorf(fTemp189)) < fTemp188)))?2:0));
			fRec115[0] = square_blep_x(iTemp190, ((int((fTemp51 < 0.5f)))?1.0f:-1.0f), fTemp51, fTemp188);
			float 	fRec116 = square_blep_prev(iTemp190, fRec115[1], fTemp52, fTemp188);
			fRec114[0] = (fRec114[1] + (fConst7 * (fRec116 - fRec114[1])));
			fRec113[0] = (fConst3 * ((fRec114[0] - fRec114[1]) + fRec113[1]));
			float fTemp191 = (1 + fTemp65);
			float fTemp192 = (fTemp191 - (fTemp66 + floorf((fTemp191 - fTemp66))));
			float fTemp193 = (0.5f * (1.0f + fVec13[0]));
			int iTemp194 = ((int((fTemp66 > fTemp65)))?1:((int(((fTemp193 - floorf(fTemp193)) < fTemp192)))?2:0));
			fRec119[0] = square_blep_x(iTemp194, ((int((fTemp65 < 0.5f)))?1.0f:-1.0f), fTemp65, fTemp192);
			float 	fRec120 = square_blep_prev(iTemp194, fRec119[1], fTemp66, fTemp192);
			fRec118[0] = (fRec118[1] + (fConst8 * (fRec120 - fRec118[1])));
			fRec117[0] = (fConst3 * ((fRec118[0] - fRec118[1]) + fRec117[1]));
			int iTemp195 = ((int((fRec98[1] > fRec98[0])))?1:0);
			float fTemp196 = (1 + fRec98[0]);
			float fTemp197 = (0 - ((fRec98[1] + floorf((fTemp196 - fRec98[1]))) - fTemp196));
			fRec122[0] = saw_blep_x(iTemp195, (0 - (2 * (fRec98[0] - 0.5f))), fRec98[0], fTemp197);
			fRec123[0] = saw_blep_prev(iTemp195, fRec122[1], fRec98[1], fTemp197);
			fRec121[0] = (fConst3 * (((1.95f * fRec123[0]) - (1.95f * fRec123[1])) + fRec121[1]));
			float fTemp198 = (0.5f * fRec121[0]);
			int iTemp199 = ((int((fRec90[1] > fRec90[0])))?1:0);
			float fTemp200 = (1 + fRec90[0]);
			float fTemp201 = (0 - ((fRec90[1] + floorf((fTemp200 - fRec90[1]))) - fTemp200));
			fRec125[0] = saw_blep_x(iTemp199, (0 - (2 * (fRec90[0] - 0.5f))), fRec90[0], fTemp201);
			fRec126[0] = saw_blep_prev(iTemp199, fRec125[1], fRec90[1], fTemp201);
			fRec124[0] = (fConst3 * (((1.95f * fRec126[0]) - (1.95f * fRec126[1])) + fRec124[1]));
			float fTemp202 = (0.5f * fRec124[0]);
			int iTemp203 = ((int((fRec82[1] > fRec82[0])))?1:0);
			float fTemp204 = (1 + fRec82[0]);
			float fTemp205 = (0 - ((fRec82[1] + floorf((fTemp204 - fRec82[1]))) - fTemp204));
			fRec128[0] = saw_blep_x(iTemp203, (0 - (2 * (fRec82[0] - 0.5f))), fRec82[0], fTemp205);
			fRec129[0] = saw_blep_prev(iTemp203, fRec128[1], fRec82[1], fTemp205);
			fRec127[0] = (fConst3 * (((1.95f * fRec129[0]) - (1.95f * fRec129[1])) + fRec127[1]));
			float fTemp206 = (0.5f * fRec127[0]);
			int iTemp207 = ((int((fRec74[1] > fRec74[0])))?1:0);
			float fTemp208 = (1 + fRec74[0]);
			float fTemp209 = (0 - ((fRec74[1] + floorf((fTemp208 - fRec74[1]))) - fTemp208));
			fRec131[0] = saw_blep_x(iTemp207, (0 - (2 * (fRec74[0] - 0.5f))), fRec74[0], fTemp209);
			fRec132[0] = saw_blep_prev(iTemp207, fRec131[1], fRec74[1], fTemp209);
			fRec130[0] = (fConst3 * (((1.95f * fRec132[0]) - (1.95f * fRec132[1])) + fRec130[1]));
			float fTemp210 = (0.5f * fRec130[0]);
			int iTemp211 = ((int((fRec66[1] > fRec66[0])))?1:0);
			float fTemp212 = (1 + fRec66[0]);
			float fTemp213 = (0 - ((fRec66[1] + floorf((fTemp212 - fRec66[1]))) - fTemp212));
			fRec134[0] = saw_blep_x(iTemp211, (0 - (2 * (fRec66[0] - 0.5f))), fRec66[0], fTemp213);
			fRec135[0] = saw_blep_prev(iTemp211, fRec134[1], fRec66[1], fTemp213);
			fRec133[0] = (fConst3 * (((1.95f * fRec135[0]) - (1.95f * fRec135[1])) + fRec133[1]));
			float fTemp214 = (0.5f * fRec133[0]);
			int iTemp215 = ((int((fRec58[1] > fRec58[0])))?1:0);
			float fTemp216 = (1 + fRec58[0]);
			float fTemp217 = (0 - ((fRec58[1] + floorf((fTemp216 - fRec58[1]))) - fTemp216));
			fRec137[0] = saw_blep_x(iTemp215, (0 - (2 * (fRec58[0] - 0.5f))), fRec58[0], fTemp217);
			fRec138[0] = saw_blep_prev(iTemp215, fRec137[1], fRec58[1], fTemp217);
			fRec136[0] = (fConst3 * (((1.95f * fRec138[0]) - (1.95f * fRec138[1])) + fRec136[1]));
			float fTemp218 = (0.5f * fRec136[0]);
			int iTemp219 = ((int((fRec50[1] > fRec50[0])))?1:0);
			float fTemp220 = (1 + fRec50[0]);
			float fTemp221 = (0 - ((fRec50[1] + floorf((fTemp220 - fRec50[1]))) - fTemp220));
			fRec140[0] = saw_blep_x(iTemp219, (0 - (2 * (fRec50[0] - 0.5f))), fRec50[0], fTemp221);
			fRec141[0] = saw_blep_prev(iTemp219, fRec140[1], fRec50[1], fTemp221);
			fRec139[0] = (fConst3 * (((1.95f * fRec141[0]) - (1.95f * fRec141[1])) + fRec139[1]));
			float fTemp222 = (0.5f * fRec139[0]);
			int iTemp223 = ((int((fRec42[1] > fRec42[0])))?1:0);
			float fTemp224 = (1 + fRec42[0]);
			float fTemp225 = (0 - ((fRec42[1] + floorf((fTemp224 - fRec42[1]))) - fTemp224));
			fRec143[0] = saw_blep_x(iTemp223, (0 - (2 * (fRec42[0] - 0.5f))), fRec42[0], fTemp225);
			fRec144[0] = saw_blep_prev(iTemp223, fRec143[1], fRec42[1], fTemp225);
			fRec142[0] = (fConst3 * (((1.95f * fRec144[0]) - (1.95f * fRec144[1])) + fRec142[1]));
			float fTemp226 = (0.5f * fRec142[0]);
			int iTemp227 = ((int((fRec34[1] > fRec34[0])))?1:0);
			float fTemp228 = (1 + fRec34[0]);
			float fTemp229 = (0 - ((fRec34[1] + floorf((fTemp228 - fRec34[1]))) - fTemp228));
			fRec146[0] = saw_blep_x(iTemp227, (0 - (2 * (fRec34[0] - 0.5f))), fRec34[0], fTemp229);
			fRec147[0] = saw_blep_prev(iTemp227, fRec146[1], fRec34[1], fTemp229);
			fRec145[0] = (fConst3 * (((1.95f * fRec147[0]) - (1.95f * fRec147[1])) + fRec145[1]));
			float fTemp230 = (0.5f * fRec145[0]);
			int iTemp231 = ((int((fRec26[1] > fRec26[0])))?1:0);
			float fTemp232 = (1 + fRec26[0]);
			float fTemp233 = (0 - ((fRec26[1] + floorf((fTemp232 - fRec26[1]))) - fTemp232));
			fRec149[0] = saw_blep_x(iTemp231, (0 - (2 * (fRec26[0] - 0.5f))), fRec26[0], fTemp233);
			fRec150[0] = saw_blep_prev(iTemp231, fRec149[1], fRec26[1], fTemp233);
			fRec148[0] = (fConst3 * (((1.95f * fRec150[0]) - (1.95f * fRec150[1])) + fRec148[1]));
			float fTemp234 = (0.5f * fRec148[0]);
			float fTemp235 = (1 + fTemp162);
			float fTemp236 = (fTemp235 - (fTemp163 + floorf((fTemp235 - fTemp163))));
			float fTemp237 = (0.5f * (1.0f + fVec33[0]));
			int iTemp238 = ((int((fTemp163 > fTemp162)))?1:((int(((fTemp237 - floorf(fTemp237)) < fTemp236)))?2:0));
			fRec153[0] = square_blep_x(iTemp238, ((int((fTemp162 < 0.5f)))?1.0f:-1.0f), fTemp162, fTemp236);
			float 	fRec154 = square_blep_prev(iTemp238, fRec153[1], fTemp163, fTemp236);
			fRec152[0] = (fRec152[1] + (fConst9 * (fRec154 - fRec152[1])));
			fRec151[0] = (fConst3 * ((fRec152[0] - fRec152[1]) + fRec151[1]));
			float fTemp239 = (0.5f * fRec151[0]);
			float fTemp240 = (1 + fTemp148);
			float fTemp241 = (fTemp240 - (fTemp149 + floorf((fTemp240 - fTemp149))));
			float fTemp242 = (0.5f * (1.0f + fVec30[0]));
			int iTemp243 = ((int((fTemp149 > fTemp148)))?1:((int(((fTemp242 - floorf(fTemp242)) < fTemp241)))?2:0));
			fRec157[0] = square_blep_x(iTemp243, ((int((fTemp148 < 0.5f)))?1.0f:-1.0f), fTemp148, fTemp241);
			float 	fRec158 = square_blep_prev(iTemp243, fRec157[1], fTemp149, fTemp241);
			fRec156[0] = (fRec156[1] + (fConst9 * (fRec158 - fRec156[1])));
			fRec155[0] = (fConst3 * ((fRec156[0] - fRec156[1]) + fRec155[1]));
			float fTemp244 = (0.5f * fRec155[0]);
			float fTemp245 = (1 + fTemp134);
			float fTemp246 = (fTemp245 - (fTemp135 + floorf((fTemp245 - fTemp135))));
			float fTemp247 = (0.5f * (1.0f + fVec27[0]));
			int iTemp248 = ((int((fTemp135 > fTemp134)))?1:((int(((fTemp247 - floorf(fTemp247)) < fTemp246)))?2:0));
			fRec161[0] = square_blep_x(iTemp248, ((int((fTemp134 < 0.5f)))?1.0f:-1.0f), fTemp134, fTemp246);
			float 	fRec162 = square_blep_prev(iTemp248, fRec161[1], fTemp135, fTemp246);
			fRec160[0] = (fRec160[1] + (fConst9 * (fRec162 - fRec160[1])));
			fRec159[0] = (fConst3 * ((fRec160[0] - fRec160[1]) + fRec159[1]));
			float fTemp249 = (0.5f * fRec159[0]);
			float fTemp250 = (1 + fTemp119);
			float fTemp251 = (fTemp250 - (fTemp120 + floorf((fTemp250 - fTemp120))));
			float fTemp252 = (0.5f * (1.0f + fVec24[0]));
			int iTemp253 = ((int((fTemp120 > fTemp119)))?1:((int(((fTemp252 - floorf(fTemp252)) < fTemp251)))?2:0));
			fRec165[0] = square_blep_x(iTemp253, ((int((fTemp119 < 0.5f)))?1.0f:-1.0f), fTemp119, fTemp251);
			float 	fRec166 = square_blep_prev(iTemp253, fRec165[1], fTemp120, fTemp251);
			fRec164[0] = (fRec164[1] + (fConst9 * (fRec166 - fRec164[1])));
			fRec163[0] = (fConst3 * ((fRec164[0] - fRec164[1]) + fRec163[1]));
			float fTemp254 = (0.5f * fRec163[0]);
			float fTemp255 = (1 + fTemp105);
			float fTemp256 = (fTemp255 - (fTemp106 + floorf((fTemp255 - fTemp106))));
			float fTemp257 = (0.5f * (1.0f + fVec21[0]));
			int iTemp258 = ((int((fTemp106 > fTemp105)))?1:((int(((fTemp257 - floorf(fTemp257)) < fTemp256)))?2:0));
			fRec169[0] = square_blep_x(iTemp258, ((int((fTemp105 < 0.5f)))?1.0f:-1.0f), fTemp105, fTemp256);
			float 	fRec170 = square_blep_prev(iTemp258, fRec169[1], fTemp106, fTemp256);
			fRec168[0] = (fRec168[1] + (fConst10 * (fRec170 - fRec168[1])));
			fRec167[0] = (fConst3 * ((fRec168[0] - fRec168[1]) + fRec167[1]));
			float fTemp259 = (0.5f * fRec167[0]);
			float fTemp260 = (1 + fTemp91);
			float fTemp261 = (fTemp260 - (fTemp92 + floorf((fTemp260 - fTemp92))));
			float fTemp262 = (0.5f * (1.0f + fVec18[0]));
			int iTemp263 = ((int((fTemp92 > fTemp91)))?1:((int(((fTemp262 - floorf(fTemp262)) < fTemp261)))?2:0));
			fRec173[0] = square_blep_x(iTemp263, ((int((fTemp91 < 0.5f)))?1.0f:-1.0f), fTemp91, fTemp261);
			float 	fRec174 = square_blep_prev(iTemp263, fRec173[1], fTemp92, fTemp261);
			fRec172[0] = (fRec172[1] + (fConst10 * (fRec174 - fRec172[1])));
			fRec171[0] = (fConst3 * ((fRec172[0] - fRec172[1]) + fRec171[1]));
			float fTemp264 = (0.5f * fRec171[0]);
			float fTemp265 = (1 + fTemp77);
			float fTemp266 = (fTemp265 - (fTemp78 + floorf((fTemp265 - fTemp78))));
			float fTemp267 = (0.5f * (1.0f + fVec15[0]));
			int iTemp268 = ((int((fTemp78 > fTemp77)))?1:((int(((fTemp267 - floorf(fTemp267)) < fTemp266)))?2:0));
			fRec177[0] = square_blep_x(iTemp268, ((int((fTemp77 < 0.5f)))?1.0f:-1.0f), fTemp77, fTemp266);
			float 	fRec178 = square_blep_prev(iTemp268, fRec177[1], fTemp78, fTemp266);
			fRec176[0] = (fRec176[1] + (fConst10 * (fRec178 - fRec176[1])));
			fRec175[0] = (fConst3 * ((fRec176[0] - fRec176[1]) + fRec175[1]));
			float fTemp269 = (0.5f * fRec175[0]);
			float fTemp270 = (1 + fTemp62);
			float fTemp271 = (fTemp270 - (fTemp63 + floorf((fTemp270 - fTemp63))));
			float fTemp272 = (0.5f * (1.0f + fVec12[0]));
			int iTemp273 = ((int((fTemp63 > fTemp62)))?1:((int(((fTemp272 - floorf(fTemp272)) < fTemp271)))?2:0));
			fRec181[0] = square_blep_x(iTemp273, ((int((fTemp62 < 0.5f)))?1.0f:-1.0f), fTemp62, fTemp271);
			float 	fRec182 = square_blep_prev(iTemp273, fRec181[1], fTemp63, fTemp271);
			fRec180[0] = (fRec180[1] + (fConst10 * (fRec182 - fRec180[1])));
			fRec179[0] = (fConst3 * ((fRec180[0] - fRec180[1]) + fRec179[1]));
			float fTemp274 = (0.5f * fRec179[0]);
			float fTemp275 = (1 + fTemp48);
			float fTemp276 = (fTemp275 - (fTemp49 + floorf((fTemp275 - fTemp49))));
			float fTemp277 = (0.5f * (1.0f + fVec9[0]));
			int iTemp278 = ((int((fTemp49 > fTemp48)))?1:((int(((fTemp277 - floorf(fTemp277)) < fTemp276)))?2:0));
			fRec185[0] = square_blep_x(iTemp278, ((int((fTemp48 < 0.5f)))?1.0f:-1.0f), fTemp48, fTemp276);
			float 	fRec186 = square_blep_prev(iTemp278, fRec185[1], fTemp49, fTemp276);
			fRec184[0] = (fRec184[1] + (fConst11 * (fRec186 - fRec184[1])));
			fRec183[0] = (fConst3 * ((fRec184[0] - fRec184[1]) + fRec183[1]));
			float fTemp279 = (0.5f * fRec183[0]);
			float fTemp280 = (1 + fTemp34);
			float fTemp281 = (fTemp280 - (fTemp35 + floorf((fTemp280 - fTemp35))));
			float fTemp282 = (0.5f * (1.0f + fVec6[0]));
			int iTemp283 = ((int((fTemp35 > fTemp34)))?1:((int(((fTemp282 - floorf(fTemp282)) < fTemp281)))?2:0));
			fRec189[0] = square_blep_x(iTemp283, ((int((fTemp34 < 0.5f)))?1.0f:-1.0f), fTemp34, fTemp281);
			float 	fRec190 = square_blep_prev(iTemp283, fRec189[1], fTemp35, fTemp281);
			fRec188[0] = (fRec188[1] + (fConst11 * (fRec190 - fRec188[1])));
			fRec187[0] = (fConst3 * ((fRec188[0] - fRec188[1]) + fRec187[1]));
			float fTemp284 = (0.5f * fRec187[0]);
			float fTemp285 = (1 + fTemp7);
			float fTemp286 = (fTemp285 - (fTemp8 + floorf((fTemp285 - fTemp8))));
			float fTemp287 = (0.5f * (1.0f + fVec0[0]));
			int iTemp288 = ((int((fTemp8 > fTemp7)))?1:((int(((fTemp287 - floorf(fTemp287)) < fTemp286)))?2:0));
			fRec193[0] = square_blep_x(iTemp288, ((int((fTemp7 < 0.5f)))?1.0f:-1.0f), fTemp7, fTemp286);
			float 	fRec194 = square_blep_prev(iTemp288, fRec193[1], fTemp8, fTemp286);
			fRec192[0] = (fRec192[1] + (fConst11 * (fRec194 - fRec192[1])));
			fRec191[0] = (fConst3 * ((fRec192[0] - fRec192[1]) + fRec191[1]));
			float fTemp289 = (0.5f * fRec191[0]);
			float fTemp290 = (1 + fTemp20);
			float fTemp291 = (fTemp290 - (fTemp21 + floorf((fTemp290 - fTemp21))));
			float fTemp292 = (0.5f * (1.0f + fVec3[0]));
			int iTemp293 = ((int((fTemp21 > fTemp20)))?1:((int(((fTemp292 - floorf(fTemp292)) < fTemp291)))?2:0));
			fRec197[0] = square_blep_x(iTemp293, ((int((fTemp20 < 0.5f)))?1.0f:-1.0f), fTemp20, fTemp291);
			float 	fRec198 = square_blep_prev(iTemp293, fRec197[1], fTemp21, fTemp291);
			fRec196[0] = (fRec196[1] + (fConst11 * (fRec198 - fRec196[1])));
			fRec195[0] = (fConst3 * ((fRec196[0] - fRec196[1]) + fRec195[1]));
			float fTemp294 = (0.5f * fRec195[0]);
			float fTemp295 = (1 + fTemp165);
			float fTemp296 = (fTemp295 - (fTemp166 + floorf((fTemp295 - fTemp166))));
			float fTemp297 = (0.5f * (1.0f + fVec34[0]));
			int iTemp298 = ((int((fTemp166 > fTemp165)))?1:((int(((fTemp297 - floorf(fTemp297)) < fTemp296)))?2:0));
			fRec201[0] = square_blep_x(iTemp298, ((int((fTemp165 < 0.5f)))?1.0f:-1.0f), fTemp165, fTemp296);
			float 	fRec202 = square_blep_prev(iTemp298, fRec201[1], fTemp166, fTemp296);
			fRec200[0] = (fRec200[1] + (fConst12 * (fRec202 - fRec200[1])));
			fRec199[0] = (fConst3 * ((fRec200[0] - fRec200[1]) + fRec199[1]));
			float fTemp299 = (0.5f * fRec199[0]);
			float fTemp300 = (1 + fTemp151);
			float fTemp301 = (fTemp300 - (fTemp152 + floorf((fTemp300 - fTemp152))));
			float fTemp302 = (0.5f * (1.0f + fVec31[0]));
			int iTemp303 = ((int((fTemp152 > fTemp151)))?1:((int(((fTemp302 - floorf(fTemp302)) < fTemp301)))?2:0));
			fRec205[0] = square_blep_x(iTemp303, ((int((fTemp151 < 0.5f)))?1.0f:-1.0f), fTemp151, fTemp301);
			float 	fRec206 = square_blep_prev(iTemp303, fRec205[1], fTemp152, fTemp301);
			fRec204[0] = (fRec204[1] + (fConst12 * (fRec206 - fRec204[1])));
			fRec203[0] = (fConst3 * ((fRec204[0] - fRec204[1]) + fRec203[1]));
			float fTemp304 = (0.5f * fRec203[0]);
			float fTemp305 = (1 + fTemp137);
			float fTemp306 = (fTemp305 - (fTemp138 + floorf((fTemp305 - fTemp138))));
			float fTemp307 = (0.5f * (1.0f + fVec28[0]));
			int iTemp308 = ((int((fTemp138 > fTemp137)))?1:((int(((fTemp307 - floorf(fTemp307)) < fTemp306)))?2:0));
			fRec209[0] = square_blep_x(iTemp308, ((int((fTemp137 < 0.5f)))?1.0f:-1.0f), fTemp137, fTemp306);
			float 	fRec210 = square_blep_prev(iTemp308, fRec209[1], fTemp138, fTemp306);
			fRec208[0] = (fRec208[1] + (fConst12 * (fRec210 - fRec208[1])));
			fRec207[0] = (fConst3 * ((fRec208[0] - fRec208[1]) + fRec207[1]));
			float fTemp309 = (0.5f * fRec207[0]);
			float fTemp310 = (1 + fTemp122);
			float fTemp311 = (fTemp310 - (fTemp123 + floorf((fTemp310 - fTemp123))));
			float fTemp312 = (0.5f * (1.0f + fVec25[0]));
			int iTemp313 = ((int((fTemp123 > fTemp122)))?1:((int(((fTemp312 - floorf(fTemp312)) < fTemp311)))?2:0));
			fRec213[0] = square_blep_x(iTemp313, ((int((fTemp122 < 0.5f)))?1.0f:-1.0f), fTemp122, fTemp311);
			float 	fRec214 = square_blep_prev(iTemp313, fRec213[1], fTemp123, fTemp311);
			fRec212[0] = (fRec212[1] + (fConst12 * (fRec214 - fRec212[1])));
			fRec211[0] = (fConst3 * ((fRec212[0] - fRec212[1]) + fRec211[1]));
			float fTemp314 = (0.5f * fRec211[0]);
			float fTemp315 = (1 + fTemp108);
			float fTemp316 = (fTemp315 - (fTemp109 + floorf((fTemp315 - fTemp109))));
			float fTemp317 = (0.5f * (1.0f + fVec22[0]));
			int iTemp318 = ((int((fTemp109 > fTemp108)))?1:((int(((fTemp317 - floorf(fTemp317)) < fTemp316)))?2:0));
			fRec217[0] = square_blep_x(iTemp318, ((int((fTemp108 < 0.5f)))?1.0f:-1.0f), fTemp108, fTemp316);
			float 	fRec218 = square_blep_prev(iTemp318, fRec217[1], fTemp109, fTemp316);
			fRec216[0] = (fRec216[1] + (fConst8 * (fRec218 - fRec216[1])));
			fRec215[0] = (fConst3 * ((fRec216[0] - fRec216[1]) + fRec215[1]));
			float fTemp319 = (0.5f * fRec215[0]);
			float fTemp320 = (1 + fTemp94);
			float fTemp321 = (fTemp320 - (fTemp95 + floorf((fTemp320 - fTemp95))));
			float fTemp322 = (0.5f * (1.0f + fVec19[0]));
			int iTemp323 = ((int((fTemp95 > fTemp94)))?1:((int(((fTemp322 - floorf(fTemp322)) < fTemp321)))?2:0));
			fRec221[0] = square_blep_x(iTemp323, ((int((fTemp94 < 0.5f)))?1.0f:-1.0f), fTemp94, fTemp321);
			float 	fRec222 = square_blep_prev(iTemp323, fRec221[1], fTemp95, fTemp321);
			fRec220[0] = (fRec220[1] + (fConst8 * (fRec222 - fRec220[1])));
			fRec219[0] = (fConst3 * ((fRec220[0] - fRec220[1]) + fRec219[1]));
			float fTemp324 = (0.5f * fRec219[0]);
			float fTemp325 = (1 + fTemp80);
			float fTemp326 = (fTemp325 - (fTemp81 + floorf((fTemp325 - fTemp81))));
			float fTemp327 = (0.5f * (1.0f + fVec16[0]));
			int iTemp328 = ((int((fTemp81 > fTemp80)))?1:((int(((fTemp327 - floorf(fTemp327)) < fTemp326)))?2:0));
			fRec225[0] = square_blep_x(iTemp328, ((int((fTemp80 < 0.5f)))?1.0f:-1.0f), fTemp80, fTemp326);
			float 	fRec226 = square_blep_prev(iTemp328, fRec225[1], fTemp81, fTemp326);
			fRec224[0] = (fRec224[1] + (fConst8 * (fRec226 - fRec224[1])));
			fRec223[0] = (fConst3 * ((fRec224[0] - fRec224[1]) + fRec223[1]));
			float fTemp329 = (0.5f * fRec223[0]);
			int iTemp330 = ((int((fRec11[1] > fRec11[0])))?1:0);
			float fTemp331 = (1 + fRec11[0]);
			float fTemp332 = (0 - ((fRec11[1] + floorf((fTemp331 - fRec11[1]))) - fTemp331));
			fRec228[0] = saw_blep_x(iTemp330, (0 - (2 * (fRec11[0] - 0.5f))), fRec11[0], fTemp332);
			fRec229[0] = saw_blep_prev(iTemp330, fRec228[1], fRec11[1], fTemp332);
			fRec227[0] = (fConst3 * (((1.95f * fRec229[0]) - (1.95f * fRec229[1])) + fRec227[1]));
			float fTemp333 = ((fSlow65 * fRec121[0]) + ((fSlow61 * fRec124[0]) + ((fSlow57 * fRec127[0]) + ((fSlow53 * fRec130[0]) + ((fSlow49 * fRec133[0]) + ((fSlow45 * fRec136[0]) + ((fSlow41 * fRec139[0]) + ((fSlow37 * fRec142[0]) + ((fSlow33 * fRec145[0]) + ((fSlow29 * fRec148[0]) + ((2 * ((((((((((((fRec227[0] + (fRec1[0] + ((((((((((((((((((fTemp329 + fTemp324) + fTemp319) + fTemp314) + fTemp309) + fTemp304) + fTemp299) + fTemp294) + fTemp289) + fTemp284) + fTemp279) + fTemp274) + fTemp269) + fTemp264) + fTemp259) + fTemp254) + fTemp249) + fTemp244) + fTemp239))) + fTemp234) + fTemp230) + fTemp226) + fTemp222) + fTemp218) + fTemp214) + fTemp210) + fTemp206) + fTemp202) + fTemp198) + (fSlow25 * (fRec117[0] + (fRec113[0] + (fRec109[0] + (fRec105[0] + fTemp178))))))) + (fSlow11 * fRec1[0]))))))))))));
			float fTemp334 = (((fSlow24 * (((((((((((((((((fSlow104 * fRec14[0]) + (fSlow103 * fRec6[0])) + (fSlow102 * fRec21[0])) + (fSlow101 * fRec29[0])) + (fSlow100 * fRec37[0])) + (fSlow99 * fRec45[0])) + (fSlow98 * fRec53[0])) + (fSlow97 * fRec61[0])) + (fSlow96 * fRec69[0])) + (fSlow95 * fRec77[0])) + (fSlow94 * fRec85[0])) + (fSlow93 * fRec93[0])) + (fSlow92 * fRec101[0])) + (fSlow91 * fRec105[0])) + (fSlow90 * fRec109[0])) + (fSlow89 * fRec113[0])) + (fSlow88 * fRec117[0]))) + ((fSlow87 * fRec151[0]) + ((fSlow86 * fRec155[0]) + ((fSlow85 * fRec159[0]) + ((fSlow84 * fRec163[0]) + ((fSlow83 * fRec167[0]) + ((fSlow82 * fRec171[0]) + ((fSlow81 * fRec175[0]) + ((fSlow80 * fRec179[0]) + ((fSlow79 * fRec183[0]) + ((fSlow78 * fRec187[0]) + ((fSlow77 * fRec191[0]) + ((fSlow76 * fRec195[0]) + ((fSlow75 * fRec199[0]) + ((fSlow74 * fRec203[0]) + ((fSlow73 * fRec207[0]) + ((fSlow72 * fRec211[0]) + ((fSlow71 * fRec215[0]) + ((fSlow70 * fRec223[0]) + (fSlow69 * fRec219[0])))))))))))))))))))) + (fSlow68 * fRec227[0]));
			fVec36[0] = (0 - (fTemp334 - fTemp333));
			fRec0[0] = (fConst13 * ((0 - ((fTemp334 + fVec36[1]) - fTemp333)) + fRec0[1]));
			float fTemp335 = (((fSlow10 * fRec1[0]) + ((fSlow64 * fRec121[0]) + ((fSlow60 * fRec124[0]) + ((fSlow56 * fRec127[0]) + ((fSlow52 * fRec130[0]) + ((fSlow48 * fRec133[0]) + ((fSlow44 * fRec136[0]) + ((fSlow40 * fRec139[0]) + ((fSlow36 * fRec142[0]) + ((fSlow32 * fRec145[0]) + ((fSlow28 * fRec148[0]) + fTemp334))))))))))) + (0.0001f * (fRec0[0] * fSlow1)));
			float fTemp336 = ((fSlow9 * fRec133[0]) + ((fSlow63 * fRec136[0]) + ((fSlow59 * fRec139[0]) + ((fSlow55 * fRec142[0]) + ((fSlow51 * fRec145[0]) + ((fSlow47 * fRec148[0]) + ((fSlow43 * fRec227[0]) + ((fSlow39 * fRec1[0]) + ((fSlow35 * fRec151[0]) + ((fSlow31 * fRec155[0]) + ((fSlow27 * fRec159[0]) + ((fSlow67 * fRec163[0]) + ((fSlow8 * fRec167[0]) + ((fSlow62 * fRec171[0]) + ((fSlow58 * fRec175[0]) + ((fSlow54 * fRec179[0]) + ((fSlow50 * fRec183[0]) + ((fSlow46 * fRec187[0]) + ((fSlow42 * fRec191[0]) + ((fSlow38 * fRec195[0]) + ((fSlow34 * fRec199[0]) + ((fSlow30 * fRec203[0]) + ((fSlow26 * fRec207[0]) + ((fSlow66 * fRec211[0]) + ((fSlow7 * fRec215[0]) + ((fSlow87 * fRec219[0]) + ((fSlow86 * fRec223[0]) + ((fSlow85 * fRec117[0]) + ((fSlow84 * fRec113[0]) + ((fSlow83 * fRec109[0]) + ((fSlow82 * fRec105[0]) + ((fSlow81 * fRec101[0]) + ((fSlow80 * fRec93[0]) + ((fSlow79 * fRec85[0]) + ((fSlow78 * fRec77[0]) + ((fSlow77 * fRec69[0]) + ((fSlow76 * fRec61[0]) + ((fSlow75 * fRec53[0]) + ((fSlow74 * fRec45[0]) + ((fSlow73 * fRec37[0]) + ((fSlow72 * fRec29[0]) + ((fSlow71 * fRec21[0]) + ((fSlow70 * fRec14[0]) + (fSlow69 * fRec6[0]))))))))))))))))))))))))))))))))))))))))))));
			iRec235[0] = ((int(((fTemp98 - fTemp97) < 0)))?(1 - iRec235[1]):iRec235[1]);
			float fTemp337 = (iRec235[0] + fTemp98);
			fVec37[0] = fTemp337;
			float fTemp338 = (0.5f * fVec37[0]);
			float fTemp339 = (0.5f * fVec37[1]);
			iRec236[0] = ((int(((fTemp338 - fTemp339) < 0)))?(1 - iRec236[1]):iRec236[1]);
			float fTemp340 = (iRec236[0] + fTemp338);
			fVec38[0] = fTemp340;
			float fTemp341 = (0.5f * fVec38[0]);
			float fTemp342 = (0.5f * fVec38[1]);
			iRec237[0] = ((int(((fTemp341 - fTemp342) < 0)))?(1 - iRec237[1]):iRec237[1]);
			float fTemp343 = (iRec237[0] + fTemp341);
			fVec39[0] = fTemp343;
			float fTemp344 = (0.5f * fVec39[1]);
			float fTemp345 = (0.5f * fVec39[0]);
			float fTemp346 = (1 + fTemp345);
			float fTemp347 = (fTemp346 - (fTemp344 + floorf((fTemp346 - fTemp344))));
			float fTemp348 = (0.5f * (1.0f + fVec39[0]));
			int iTemp349 = ((int((fTemp344 > fTemp345)))?1:((int(((fTemp348 - floorf(fTemp348)) < fTemp347)))?2:0));
			fRec233[0] = square_blep_x(iTemp349, ((int((fTemp345 < 0.5f)))?1.0f:-1.0f), fTemp345, fTemp347);
			float 	fRec234 = square_blep_prev(iTemp349, fRec233[1], fTemp344, fTemp347);
			fRec232[0] = (fRec232[1] + (fConst14 * (fRec234 - fRec232[1])));
			fRec231[0] = (fConst15 * ((fRec232[0] - fRec232[1]) + fRec231[1]));
			iRec242[0] = ((int(((fTemp84 - fTemp83) < 0)))?(1 - iRec242[1]):iRec242[1]);
			float fTemp350 = (iRec242[0] + fTemp84);
			fVec40[0] = fTemp350;
			float fTemp351 = (0.5f * fVec40[0]);
			float fTemp352 = (0.5f * fVec40[1]);
			iRec243[0] = ((int(((fTemp351 - fTemp352) < 0)))?(1 - iRec243[1]):iRec243[1]);
			float fTemp353 = (iRec243[0] + fTemp351);
			fVec41[0] = fTemp353;
			float fTemp354 = (0.5f * fVec41[0]);
			float fTemp355 = (0.5f * fVec41[1]);
			iRec244[0] = ((int(((fTemp354 - fTemp355) < 0)))?(1 - iRec244[1]):iRec244[1]);
			float fTemp356 = (iRec244[0] + fTemp354);
			fVec42[0] = fTemp356;
			float fTemp357 = (0.5f * fVec42[1]);
			float fTemp358 = (0.5f * fVec42[0]);
			float fTemp359 = (1 + fTemp358);
			float fTemp360 = (fTemp359 - (fTemp357 + floorf((fTemp359 - fTemp357))));
			float fTemp361 = (0.5f * (1.0f + fVec42[0]));
			int iTemp362 = ((int((fTemp357 > fTemp358)))?1:((int(((fTemp361 - floorf(fTemp361)) < fTemp360)))?2:0));
			fRec240[0] = square_blep_x(iTemp362, ((int((fTemp358 < 0.5f)))?1.0f:-1.0f), fTemp358, fTemp360);
			float 	fRec241 = square_blep_prev(iTemp362, fRec240[1], fTemp357, fTemp360);
			fRec239[0] = (fRec239[1] + (fConst14 * (fRec241 - fRec239[1])));
			fRec238[0] = (fConst15 * ((fRec239[0] - fRec239[1]) + fRec238[1]));
			iRec249[0] = ((int(((fTemp112 - fTemp111) < 0)))?(1 - iRec249[1]):iRec249[1]);
			float fTemp363 = (iRec249[0] + fTemp112);
			fVec43[0] = fTemp363;
			float fTemp364 = (0.5f * fVec43[0]);
			float fTemp365 = (0.5f * fVec43[1]);
			iRec250[0] = ((int(((fTemp364 - fTemp365) < 0)))?(1 - iRec250[1]):iRec250[1]);
			float fTemp366 = (iRec250[0] + fTemp364);
			fVec44[0] = fTemp366;
			float fTemp367 = (0.5f * fVec44[0]);
			float fTemp368 = (0.5f * fVec44[1]);
			iRec251[0] = ((int(((fTemp367 - fTemp368) < 0)))?(1 - iRec251[1]):iRec251[1]);
			float fTemp369 = (iRec251[0] + fTemp367);
			fVec45[0] = fTemp369;
			float fTemp370 = (0.5f * fVec45[1]);
			float fTemp371 = (0.5f * fVec45[0]);
			float fTemp372 = (1 + fTemp371);
			float fTemp373 = (fTemp372 - (fTemp370 + floorf((fTemp372 - fTemp370))));
			float fTemp374 = (0.5f * (1.0f + fVec45[0]));
			int iTemp375 = ((int((fTemp370 > fTemp371)))?1:((int(((fTemp374 - floorf(fTemp374)) < fTemp373)))?2:0));
			fRec247[0] = square_blep_x(iTemp375, ((int((fTemp371 < 0.5f)))?1.0f:-1.0f), fTemp371, fTemp373);
			float 	fRec248 = square_blep_prev(iTemp375, fRec247[1], fTemp370, fTemp373);
			fRec246[0] = (fRec246[1] + (fConst14 * (fRec248 - fRec246[1])));
			fRec245[0] = (fConst15 * ((fRec246[0] - fRec246[1]) + fRec245[1]));
			iRec256[0] = ((int(((fTemp126 - fTemp125) < 0)))?(1 - iRec256[1]):iRec256[1]);
			float fTemp376 = (iRec256[0] + fTemp126);
			fVec46[0] = fTemp376;
			float fTemp377 = (0.5f * fVec46[0]);
			float fTemp378 = (0.5f * fVec46[1]);
			iRec257[0] = ((int(((fTemp377 - fTemp378) < 0)))?(1 - iRec257[1]):iRec257[1]);
			float fTemp379 = (iRec257[0] + fTemp377);
			fVec47[0] = fTemp379;
			float fTemp380 = (0.5f * fVec47[0]);
			float fTemp381 = (0.5f * fVec47[1]);
			iRec258[0] = ((int(((fTemp380 - fTemp381) < 0)))?(1 - iRec258[1]):iRec258[1]);
			float fTemp382 = (iRec258[0] + fTemp380);
			fVec48[0] = fTemp382;
			float fTemp383 = (0.5f * fVec48[1]);
			float fTemp384 = (0.5f * fVec48[0]);
			float fTemp385 = (1 + fTemp384);
			float fTemp386 = (fTemp385 - (fTemp383 + floorf((fTemp385 - fTemp383))));
			float fTemp387 = (0.5f * (1.0f + fVec48[0]));
			int iTemp388 = ((int((fTemp383 > fTemp384)))?1:((int(((fTemp387 - floorf(fTemp387)) < fTemp386)))?2:0));
			fRec254[0] = square_blep_x(iTemp388, ((int((fTemp384 < 0.5f)))?1.0f:-1.0f), fTemp384, fTemp386);
			float 	fRec255 = square_blep_prev(iTemp388, fRec254[1], fTemp383, fTemp386);
			fRec253[0] = (fRec253[1] + (fConst16 * (fRec255 - fRec253[1])));
			fRec252[0] = (fConst15 * ((fRec253[0] - fRec253[1]) + fRec252[1]));
			iRec263[0] = ((int(((fTemp141 - fTemp140) < 0)))?(1 - iRec263[1]):iRec263[1]);
			float fTemp389 = (iRec263[0] + fTemp141);
			fVec49[0] = fTemp389;
			float fTemp390 = (0.5f * fVec49[0]);
			float fTemp391 = (0.5f * fVec49[1]);
			iRec264[0] = ((int(((fTemp390 - fTemp391) < 0)))?(1 - iRec264[1]):iRec264[1]);
			float fTemp392 = (iRec264[0] + fTemp390);
			fVec50[0] = fTemp392;
			float fTemp393 = (0.5f * fVec50[0]);
			float fTemp394 = (0.5f * fVec50[1]);
			iRec265[0] = ((int(((fTemp393 - fTemp394) < 0)))?(1 - iRec265[1]):iRec265[1]);
			float fTemp395 = (iRec265[0] + fTemp393);
			fVec51[0] = fTemp395;
			float fTemp396 = (0.5f * fVec51[1]);
			float fTemp397 = (0.5f * fVec51[0]);
			float fTemp398 = (1 + fTemp397);
			float fTemp399 = (fTemp398 - (fTemp396 + floorf((fTemp398 - fTemp396))));
			float fTemp400 = (0.5f * (1.0f + fVec51[0]));
			int iTemp401 = ((int((fTemp396 > fTemp397)))?1:((int(((fTemp400 - floorf(fTemp400)) < fTemp399)))?2:0));
			fRec261[0] = square_blep_x(iTemp401, ((int((fTemp397 < 0.5f)))?1.0f:-1.0f), fTemp397, fTemp399);
			float 	fRec262 = square_blep_prev(iTemp401, fRec261[1], fTemp396, fTemp399);
			fRec260[0] = (fRec260[1] + (fConst16 * (fRec262 - fRec260[1])));
			fRec259[0] = (fConst15 * ((fRec260[0] - fRec260[1]) + fRec259[1]));
			iRec270[0] = ((int(((fTemp155 - fTemp154) < 0)))?(1 - iRec270[1]):iRec270[1]);
			float fTemp402 = (iRec270[0] + fTemp155);
			fVec52[0] = fTemp402;
			float fTemp403 = (0.5f * fVec52[0]);
			float fTemp404 = (0.5f * fVec52[1]);
			iRec271[0] = ((int(((fTemp403 - fTemp404) < 0)))?(1 - iRec271[1]):iRec271[1]);
			float fTemp405 = (iRec271[0] + fTemp403);
			fVec53[0] = fTemp405;
			float fTemp406 = (0.5f * fVec53[0]);
			float fTemp407 = (0.5f * fVec53[1]);
			iRec272[0] = ((int(((fTemp406 - fTemp407) < 0)))?(1 - iRec272[1]):iRec272[1]);
			float fTemp408 = (iRec272[0] + fTemp406);
			fVec54[0] = fTemp408;
			float fTemp409 = (0.5f * fVec54[1]);
			float fTemp410 = (0.5f * fVec54[0]);
			float fTemp411 = (1 + fTemp410);
			float fTemp412 = (fTemp411 - (fTemp409 + floorf((fTemp411 - fTemp409))));
			float fTemp413 = (0.5f * (1.0f + fVec54[0]));
			int iTemp414 = ((int((fTemp409 > fTemp410)))?1:((int(((fTemp413 - floorf(fTemp413)) < fTemp412)))?2:0));
			fRec268[0] = square_blep_x(iTemp414, ((int((fTemp410 < 0.5f)))?1.0f:-1.0f), fTemp410, fTemp412);
			float 	fRec269 = square_blep_prev(iTemp414, fRec268[1], fTemp409, fTemp412);
			fRec267[0] = (fRec267[1] + (fConst16 * (fRec269 - fRec267[1])));
			fRec266[0] = (fConst15 * ((fRec267[0] - fRec267[1]) + fRec266[1]));
			iRec277[0] = ((int(((fTemp169 - fTemp168) < 0)))?(1 - iRec277[1]):iRec277[1]);
			float fTemp415 = (iRec277[0] + fTemp169);
			fVec55[0] = fTemp415;
			float fTemp416 = (0.5f * fVec55[0]);
			float fTemp417 = (0.5f * fVec55[1]);
			iRec278[0] = ((int(((fTemp416 - fTemp417) < 0)))?(1 - iRec278[1]):iRec278[1]);
			float fTemp418 = (iRec278[0] + fTemp416);
			fVec56[0] = fTemp418;
			float fTemp419 = (0.5f * fVec56[0]);
			float fTemp420 = (0.5f * fVec56[1]);
			iRec279[0] = ((int(((fTemp419 - fTemp420) < 0)))?(1 - iRec279[1]):iRec279[1]);
			float fTemp421 = (iRec279[0] + fTemp419);
			fVec57[0] = fTemp421;
			float fTemp422 = (0.5f * fVec57[1]);
			float fTemp423 = (0.5f * fVec57[0]);
			float fTemp424 = (1 + fTemp423);
			float fTemp425 = (fTemp424 - (fTemp422 + floorf((fTemp424 - fTemp422))));
			float fTemp426 = (0.5f * (1.0f + fVec57[0]));
			int iTemp427 = ((int((fTemp422 > fTemp423)))?1:((int(((fTemp426 - floorf(fTemp426)) < fTemp425)))?2:0));
			fRec275[0] = square_blep_x(iTemp427, ((int((fTemp423 < 0.5f)))?1.0f:-1.0f), fTemp423, fTemp425);
			float 	fRec276 = square_blep_prev(iTemp427, fRec275[1], fTemp422, fTemp425);
			fRec274[0] = (fRec274[1] + (fConst16 * (fRec276 - fRec274[1])));
			fRec273[0] = (fConst15 * ((fRec274[0] - fRec274[1]) + fRec273[1]));
			iRec284[0] = ((int(((fTemp27 - fTemp26) < 0)))?(1 - iRec284[1]):iRec284[1]);
			float fTemp428 = (iRec284[0] + fTemp27);
			fVec58[0] = fTemp428;
			float fTemp429 = (0.5f * fVec58[0]);
			float fTemp430 = (0.5f * fVec58[1]);
			iRec285[0] = ((int(((fTemp429 - fTemp430) < 0)))?(1 - iRec285[1]):iRec285[1]);
			float fTemp431 = (iRec285[0] + fTemp429);
			fVec59[0] = fTemp431;
			float fTemp432 = (0.5f * fVec59[1]);
			float fTemp433 = (0.5f * fVec59[0]);
			float fTemp434 = (1 + fTemp433);
			float fTemp435 = (fTemp434 - (fTemp432 + floorf((fTemp434 - fTemp432))));
			float fTemp436 = (0.5f * (1.0f + fVec59[0]));
			int iTemp437 = ((int((fTemp432 > fTemp433)))?1:((int(((fTemp436 - floorf(fTemp436)) < fTemp435)))?2:0));
			fRec282[0] = square_blep_x(iTemp437, ((int((fTemp433 < 0.5f)))?1.0f:-1.0f), fTemp433, fTemp435);
			float 	fRec283 = square_blep_prev(iTemp437, fRec282[1], fTemp432, fTemp435);
			fRec281[0] = (fRec281[1] + (fConst16 * (fRec283 - fRec281[1])));
			fRec280[0] = (fConst17 * ((fRec281[0] - fRec281[1]) + fRec280[1]));
			iRec290[0] = ((int(((fTemp14 - fTemp13) < 0)))?(1 - iRec290[1]):iRec290[1]);
			float fTemp438 = (iRec290[0] + fTemp14);
			fVec60[0] = fTemp438;
			float fTemp439 = (0.5f * fVec60[0]);
			float fTemp440 = (0.5f * fVec60[1]);
			iRec291[0] = ((int(((fTemp439 - fTemp440) < 0)))?(1 - iRec291[1]):iRec291[1]);
			float fTemp441 = (iRec291[0] + fTemp439);
			fVec61[0] = fTemp441;
			float fTemp442 = (0.5f * fVec61[1]);
			float fTemp443 = (0.5f * fVec61[0]);
			float fTemp444 = (1 + fTemp443);
			float fTemp445 = (fTemp444 - (fTemp442 + floorf((fTemp444 - fTemp442))));
			float fTemp446 = (0.5f * (1.0f + fVec61[0]));
			int iTemp447 = ((int((fTemp442 > fTemp443)))?1:((int(((fTemp446 - floorf(fTemp446)) < fTemp445)))?2:0));
			fRec288[0] = square_blep_x(iTemp447, ((int((fTemp443 < 0.5f)))?1.0f:-1.0f), fTemp443, fTemp445);
			float 	fRec289 = square_blep_prev(iTemp447, fRec288[1], fTemp442, fTemp445);
			fRec287[0] = (fRec287[1] + (fConst16 * (fRec289 - fRec287[1])));
			fRec286[0] = (fConst17 * ((fRec287[0] - fRec287[1]) + fRec286[1]));
			iRec296[0] = ((int(((fTemp41 - fTemp40) < 0)))?(1 - iRec296[1]):iRec296[1]);
			float fTemp448 = (iRec296[0] + fTemp41);
			fVec62[0] = fTemp448;
			float fTemp449 = (0.5f * fVec62[0]);
			float fTemp450 = (0.5f * fVec62[1]);
			iRec297[0] = ((int(((fTemp449 - fTemp450) < 0)))?(1 - iRec297[1]):iRec297[1]);
			float fTemp451 = (iRec297[0] + fTemp449);
			fVec63[0] = fTemp451;
			float fTemp452 = (0.5f * fVec63[1]);
			float fTemp453 = (0.5f * fVec63[0]);
			float fTemp454 = (1 + fTemp453);
			float fTemp455 = (fTemp454 - (fTemp452 + floorf((fTemp454 - fTemp452))));
			float fTemp456 = (0.5f * (1.0f + fVec63[0]));
			int iTemp457 = ((int((fTemp452 > fTemp453)))?1:((int(((fTemp456 - floorf(fTemp456)) < fTemp455)))?2:0));
			fRec294[0] = square_blep_x(iTemp457, ((int((fTemp453 < 0.5f)))?1.0f:-1.0f), fTemp453, fTemp455);
			float 	fRec295 = square_blep_prev(iTemp457, fRec294[1], fTemp452, fTemp455);
			fRec293[0] = (fRec293[1] + (fConst16 * (fRec295 - fRec293[1])));
			fRec292[0] = (fConst17 * ((fRec293[0] - fRec293[1]) + fRec292[1]));
			iRec302[0] = ((int(((fTemp55 - fTemp54) < 0)))?(1 - iRec302[1]):iRec302[1]);
			float fTemp458 = (iRec302[0] + fTemp55);
			fVec64[0] = fTemp458;
			float fTemp459 = (0.5f * fVec64[0]);
			float fTemp460 = (0.5f * fVec64[1]);
			iRec303[0] = ((int(((fTemp459 - fTemp460) < 0)))?(1 - iRec303[1]):iRec303[1]);
			float fTemp461 = (iRec303[0] + fTemp459);
			fVec65[0] = fTemp461;
			float fTemp462 = (0.5f * fVec65[1]);
			float fTemp463 = (0.5f * fVec65[0]);
			float fTemp464 = (1 + fTemp463);
			float fTemp465 = (fTemp464 - (fTemp462 + floorf((fTemp464 - fTemp462))));
			float fTemp466 = (0.5f * (1.0f + fVec65[0]));
			int iTemp467 = ((int((fTemp462 > fTemp463)))?1:((int(((fTemp466 - floorf(fTemp466)) < fTemp465)))?2:0));
			fRec300[0] = square_blep_x(iTemp467, ((int((fTemp463 < 0.5f)))?1.0f:-1.0f), fTemp463, fTemp465);
			float 	fRec301 = square_blep_prev(iTemp467, fRec300[1], fTemp462, fTemp465);
			fRec299[0] = (fRec299[1] + (fConst16 * (fRec301 - fRec299[1])));
			fRec298[0] = (fConst17 * ((fRec299[0] - fRec299[1]) + fRec298[1]));
			iRec308[0] = ((int(((fTemp69 - fTemp68) < 0)))?(1 - iRec308[1]):iRec308[1]);
			float fTemp468 = (iRec308[0] + fTemp69);
			fVec66[0] = fTemp468;
			float fTemp469 = (0.5f * fVec66[0]);
			float fTemp470 = (0.5f * fVec66[1]);
			iRec309[0] = ((int(((fTemp469 - fTemp470) < 0)))?(1 - iRec309[1]):iRec309[1]);
			float fTemp471 = (iRec309[0] + fTemp469);
			fVec67[0] = fTemp471;
			float fTemp472 = (0.5f * fVec67[1]);
			float fTemp473 = (0.5f * fVec67[0]);
			float fTemp474 = (1 + fTemp473);
			float fTemp475 = (fTemp474 - (fTemp472 + floorf((fTemp474 - fTemp472))));
			float fTemp476 = (0.5f * (1.0f + fVec67[0]));
			int iTemp477 = ((int((fTemp472 > fTemp473)))?1:((int(((fTemp476 - floorf(fTemp476)) < fTemp475)))?2:0));
			fRec306[0] = square_blep_x(iTemp477, ((int((fTemp473 < 0.5f)))?1.0f:-1.0f), fTemp473, fTemp475);
			float 	fRec307 = square_blep_prev(iTemp477, fRec306[1], fTemp472, fTemp475);
			fRec305[0] = (fRec305[1] + (fConst18 * (fRec307 - fRec305[1])));
			fRec304[0] = (fConst17 * ((fRec305[0] - fRec305[1]) + fRec304[1]));
			float fTemp478 = (1 + fTemp354);
			float fTemp479 = (fTemp478 - (fTemp355 + floorf((fTemp478 - fTemp355))));
			float fTemp480 = (0.5f * (1.0f + fVec41[0]));
			int iTemp481 = ((int((fTemp355 > fTemp354)))?1:((int(((fTemp480 - floorf(fTemp480)) < fTemp479)))?2:0));
			fRec312[0] = square_blep_x(iTemp481, ((int((fTemp354 < 0.5f)))?1.0f:-1.0f), fTemp354, fTemp479);
			float 	fRec313 = square_blep_prev(iTemp481, fRec312[1], fTemp355, fTemp479);
			fRec311[0] = (fRec311[1] + (fConst18 * (fRec313 - fRec311[1])));
			fRec310[0] = (fConst17 * ((fRec311[0] - fRec311[1]) + fRec310[1]));
			float fTemp482 = (1 + fTemp341);
			float fTemp483 = (fTemp482 - (fTemp342 + floorf((fTemp482 - fTemp342))));
			float fTemp484 = (0.5f * (1.0f + fVec38[0]));
			int iTemp485 = ((int((fTemp342 > fTemp341)))?1:((int(((fTemp484 - floorf(fTemp484)) < fTemp483)))?2:0));
			fRec316[0] = square_blep_x(iTemp485, ((int((fTemp341 < 0.5f)))?1.0f:-1.0f), fTemp341, fTemp483);
			float 	fRec317 = square_blep_prev(iTemp485, fRec316[1], fTemp342, fTemp483);
			fRec315[0] = (fRec315[1] + (fConst18 * (fRec317 - fRec315[1])));
			fRec314[0] = (fConst17 * ((fRec315[0] - fRec315[1]) + fRec314[1]));
			float fTemp486 = (1 + fTemp367);
			float fTemp487 = (fTemp486 - (fTemp368 + floorf((fTemp486 - fTemp368))));
			float fTemp488 = (0.5f * (1.0f + fVec44[0]));
			int iTemp489 = ((int((fTemp368 > fTemp367)))?1:((int(((fTemp488 - floorf(fTemp488)) < fTemp487)))?2:0));
			fRec320[0] = square_blep_x(iTemp489, ((int((fTemp367 < 0.5f)))?1.0f:-1.0f), fTemp367, fTemp487);
			float 	fRec321 = square_blep_prev(iTemp489, fRec320[1], fTemp368, fTemp487);
			fRec319[0] = (fRec319[1] + (fConst18 * (fRec321 - fRec319[1])));
			fRec318[0] = (fConst17 * ((fRec319[0] - fRec319[1]) + fRec318[1]));
			float fTemp490 = (1 + fTemp380);
			float fTemp491 = (fTemp490 - (fTemp381 + floorf((fTemp490 - fTemp381))));
			float fTemp492 = (0.5f * (1.0f + fVec47[0]));
			int iTemp493 = ((int((fTemp381 > fTemp380)))?1:((int(((fTemp492 - floorf(fTemp492)) < fTemp491)))?2:0));
			fRec324[0] = square_blep_x(iTemp493, ((int((fTemp380 < 0.5f)))?1.0f:-1.0f), fTemp380, fTemp491);
			float 	fRec325 = square_blep_prev(iTemp493, fRec324[1], fTemp381, fTemp491);
			fRec323[0] = (fRec323[1] + (fConst19 * (fRec325 - fRec323[1])));
			fRec322[0] = (fConst17 * ((fRec323[0] - fRec323[1]) + fRec322[1]));
			float fTemp494 = (1 + fTemp393);
			float fTemp495 = (fTemp494 - (fTemp394 + floorf((fTemp494 - fTemp394))));
			float fTemp496 = (0.5f * (1.0f + fVec50[0]));
			int iTemp497 = ((int((fTemp394 > fTemp393)))?1:((int(((fTemp496 - floorf(fTemp496)) < fTemp495)))?2:0));
			fRec328[0] = square_blep_x(iTemp497, ((int((fTemp393 < 0.5f)))?1.0f:-1.0f), fTemp393, fTemp495);
			float 	fRec329 = square_blep_prev(iTemp497, fRec328[1], fTemp394, fTemp495);
			fRec327[0] = (fRec327[1] + (fConst19 * (fRec329 - fRec327[1])));
			fRec326[0] = (fConst17 * ((fRec327[0] - fRec327[1]) + fRec326[1]));
			float fTemp498 = (1 + fTemp406);
			float fTemp499 = (fTemp498 - (fTemp407 + floorf((fTemp498 - fTemp407))));
			float fTemp500 = (0.5f * (1.0f + fVec53[0]));
			int iTemp501 = ((int((fTemp407 > fTemp406)))?1:((int(((fTemp500 - floorf(fTemp500)) < fTemp499)))?2:0));
			fRec332[0] = square_blep_x(iTemp501, ((int((fTemp406 < 0.5f)))?1.0f:-1.0f), fTemp406, fTemp499);
			float 	fRec333 = square_blep_prev(iTemp501, fRec332[1], fTemp407, fTemp499);
			fRec331[0] = (fRec331[1] + (fConst19 * (fRec333 - fRec331[1])));
			fRec330[0] = (fConst17 * ((fRec331[0] - fRec331[1]) + fRec330[1]));
			float fTemp502 = (1 + fTemp419);
			float fTemp503 = (fTemp502 - (fTemp420 + floorf((fTemp502 - fTemp420))));
			float fTemp504 = (0.5f * (1.0f + fVec56[0]));
			int iTemp505 = ((int((fTemp420 > fTemp419)))?1:((int(((fTemp504 - floorf(fTemp504)) < fTemp503)))?2:0));
			fRec336[0] = square_blep_x(iTemp505, ((int((fTemp419 < 0.5f)))?1.0f:-1.0f), fTemp419, fTemp503);
			float 	fRec337 = square_blep_prev(iTemp505, fRec336[1], fTemp420, fTemp503);
			fRec335[0] = (fRec335[1] + (fConst19 * (fRec337 - fRec335[1])));
			fRec334[0] = (fConst17 * ((fRec335[0] - fRec335[1]) + fRec334[1]));
			float fTemp506 = (1 + fTemp429);
			float fTemp507 = (fTemp506 - (fTemp430 + floorf((fTemp506 - fTemp430))));
			float fTemp508 = (0.5f * (1.0f + fVec58[0]));
			int iTemp509 = ((int((fTemp430 > fTemp429)))?1:((int(((fTemp508 - floorf(fTemp508)) < fTemp507)))?2:0));
			fRec340[0] = square_blep_x(iTemp509, ((int((fTemp429 < 0.5f)))?1.0f:-1.0f), fTemp429, fTemp507);
			float 	fRec341 = square_blep_prev(iTemp509, fRec340[1], fTemp430, fTemp507);
			fRec339[0] = (fRec339[1] + (fConst20 * (fRec341 - fRec339[1])));
			fRec338[0] = (fConst3 * ((fRec339[0] - fRec339[1]) + fRec338[1]));
			float fTemp510 = (1 + fTemp439);
			float fTemp511 = (fTemp510 - (fTemp440 + floorf((fTemp510 - fTemp440))));
			float fTemp512 = (0.5f * (1.0f + fVec60[0]));
			int iTemp513 = ((int((fTemp440 > fTemp439)))?1:((int(((fTemp512 - floorf(fTemp512)) < fTemp511)))?2:0));
			fRec344[0] = square_blep_x(iTemp513, ((int((fTemp439 < 0.5f)))?1.0f:-1.0f), fTemp439, fTemp511);
			float 	fRec345 = square_blep_prev(iTemp513, fRec344[1], fTemp440, fTemp511);
			fRec343[0] = (fRec343[1] + (fConst20 * (fRec345 - fRec343[1])));
			fRec342[0] = (fConst3 * ((fRec343[0] - fRec343[1]) + fRec342[1]));
			float fTemp514 = (1 + fTemp449);
			float fTemp515 = (fTemp514 - (fTemp450 + floorf((fTemp514 - fTemp450))));
			float fTemp516 = (0.5f * (1.0f + fVec62[0]));
			int iTemp517 = ((int((fTemp450 > fTemp449)))?1:((int(((fTemp516 - floorf(fTemp516)) < fTemp515)))?2:0));
			fRec348[0] = square_blep_x(iTemp517, ((int((fTemp449 < 0.5f)))?1.0f:-1.0f), fTemp449, fTemp515);
			float 	fRec349 = square_blep_prev(iTemp517, fRec348[1], fTemp450, fTemp515);
			fRec347[0] = (fRec347[1] + (fConst20 * (fRec349 - fRec347[1])));
			fRec346[0] = (fConst3 * ((fRec347[0] - fRec347[1]) + fRec346[1]));
			float fTemp518 = (1 + fTemp459);
			float fTemp519 = (fTemp518 - (fTemp460 + floorf((fTemp518 - fTemp460))));
			float fTemp520 = (0.5f * (1.0f + fVec64[0]));
			int iTemp521 = ((int((fTemp460 > fTemp459)))?1:((int(((fTemp520 - floorf(fTemp520)) < fTemp519)))?2:0));
			fRec352[0] = square_blep_x(iTemp521, ((int((fTemp459 < 0.5f)))?1.0f:-1.0f), fTemp459, fTemp519);
			float 	fRec353 = square_blep_prev(iTemp521, fRec352[1], fTemp460, fTemp519);
			fRec351[0] = (fRec351[1] + (fConst20 * (fRec353 - fRec351[1])));
			fRec350[0] = (fConst3 * ((fRec351[0] - fRec351[1]) + fRec350[1]));
			float fTemp522 = (1 + fTemp469);
			float fTemp523 = (fTemp522 - (fTemp470 + floorf((fTemp522 - fTemp470))));
			float fTemp524 = (0.5f * (1.0f + fVec66[0]));
			int iTemp525 = ((int((fTemp470 > fTemp469)))?1:((int(((fTemp524 - floorf(fTemp524)) < fTemp523)))?2:0));
			fRec356[0] = square_blep_x(iTemp525, ((int((fTemp469 < 0.5f)))?1.0f:-1.0f), fTemp469, fTemp523);
			float 	fRec357 = square_blep_prev(iTemp525, fRec356[1], fTemp470, fTemp523);
			fRec355[0] = (fRec355[1] + (fConst21 * (fRec357 - fRec355[1])));
			fRec354[0] = (fConst3 * ((fRec355[0] - fRec355[1]) + fRec354[1]));
			float fTemp526 = (1 + fTemp351);
			float fTemp527 = (fTemp526 - (fTemp352 + floorf((fTemp526 - fTemp352))));
			float fTemp528 = (0.5f * (1.0f + fVec40[0]));
			int iTemp529 = ((int((fTemp352 > fTemp351)))?1:((int(((fTemp528 - floorf(fTemp528)) < fTemp527)))?2:0));
			fRec360[0] = square_blep_x(iTemp529, ((int((fTemp351 < 0.5f)))?1.0f:-1.0f), fTemp351, fTemp527);
			float 	fRec361 = square_blep_prev(iTemp529, fRec360[1], fTemp352, fTemp527);
			fRec359[0] = (fRec359[1] + (fConst21 * (fRec361 - fRec359[1])));
			fRec358[0] = (fConst3 * ((fRec359[0] - fRec359[1]) + fRec358[1]));
			float fTemp530 = (1 + fTemp338);
			float fTemp531 = (fTemp530 - (fTemp339 + floorf((fTemp530 - fTemp339))));
			float fTemp532 = (0.5f * (1.0f + fVec37[0]));
			int iTemp533 = ((int((fTemp339 > fTemp338)))?1:((int(((fTemp532 - floorf(fTemp532)) < fTemp531)))?2:0));
			fRec364[0] = square_blep_x(iTemp533, ((int((fTemp338 < 0.5f)))?1.0f:-1.0f), fTemp338, fTemp531);
			float 	fRec365 = square_blep_prev(iTemp533, fRec364[1], fTemp339, fTemp531);
			fRec363[0] = (fRec363[1] + (fConst21 * (fRec365 - fRec363[1])));
			fRec362[0] = (fConst3 * ((fRec363[0] - fRec363[1]) + fRec362[1]));
			float fTemp534 = (1 + fTemp364);
			float fTemp535 = (fTemp534 - (fTemp365 + floorf((fTemp534 - fTemp365))));
			float fTemp536 = (0.5f * (1.0f + fVec43[0]));
			int iTemp537 = ((int((fTemp365 > fTemp364)))?1:((int(((fTemp536 - floorf(fTemp536)) < fTemp535)))?2:0));
			fRec368[0] = square_blep_x(iTemp537, ((int((fTemp364 < 0.5f)))?1.0f:-1.0f), fTemp364, fTemp535);
			float 	fRec369 = square_blep_prev(iTemp537, fRec368[1], fTemp365, fTemp535);
			fRec367[0] = (fRec367[1] + (fConst21 * (fRec369 - fRec367[1])));
			fRec366[0] = (fConst3 * ((fRec367[0] - fRec367[1]) + fRec366[1]));
			float fTemp538 = (1 + fTemp377);
			float fTemp539 = (fTemp538 - (fTemp378 + floorf((fTemp538 - fTemp378))));
			float fTemp540 = (0.5f * (1.0f + fVec46[0]));
			int iTemp541 = ((int((fTemp378 > fTemp377)))?1:((int(((fTemp540 - floorf(fTemp540)) < fTemp539)))?2:0));
			fRec372[0] = square_blep_x(iTemp541, ((int((fTemp377 < 0.5f)))?1.0f:-1.0f), fTemp377, fTemp539);
			float 	fRec373 = square_blep_prev(iTemp541, fRec372[1], fTemp378, fTemp539);
			fRec371[0] = (fRec371[1] + (fConst22 * (fRec373 - fRec371[1])));
			fRec370[0] = (fConst3 * ((fRec371[0] - fRec371[1]) + fRec370[1]));
			float fTemp542 = (1 + fTemp390);
			float fTemp543 = (fTemp542 - (fTemp391 + floorf((fTemp542 - fTemp391))));
			float fTemp544 = (0.5f * (1.0f + fVec49[0]));
			int iTemp545 = ((int((fTemp391 > fTemp390)))?1:((int(((fTemp544 - floorf(fTemp544)) < fTemp543)))?2:0));
			fRec376[0] = square_blep_x(iTemp545, ((int((fTemp390 < 0.5f)))?1.0f:-1.0f), fTemp390, fTemp543);
			float 	fRec377 = square_blep_prev(iTemp545, fRec376[1], fTemp391, fTemp543);
			fRec375[0] = (fRec375[1] + (fConst22 * (fRec377 - fRec375[1])));
			fRec374[0] = (fConst3 * ((fRec375[0] - fRec375[1]) + fRec374[1]));
			float fTemp546 = (1 + fTemp403);
			float fTemp547 = (fTemp546 - (fTemp404 + floorf((fTemp546 - fTemp404))));
			float fTemp548 = (0.5f * (1.0f + fVec52[0]));
			int iTemp549 = ((int((fTemp404 > fTemp403)))?1:((int(((fTemp548 - floorf(fTemp548)) < fTemp547)))?2:0));
			fRec380[0] = square_blep_x(iTemp549, ((int((fTemp403 < 0.5f)))?1.0f:-1.0f), fTemp403, fTemp547);
			float 	fRec381 = square_blep_prev(iTemp549, fRec380[1], fTemp404, fTemp547);
			fRec379[0] = (fRec379[1] + (fConst22 * (fRec381 - fRec379[1])));
			fRec378[0] = (fConst3 * ((fRec379[0] - fRec379[1]) + fRec378[1]));
			float fTemp550 = (1 + fTemp416);
			float fTemp551 = (fTemp550 - (fTemp417 + floorf((fTemp550 - fTemp417))));
			float fTemp552 = (0.5f * (1.0f + fVec55[0]));
			int iTemp553 = ((int((fTemp417 > fTemp416)))?1:((int(((fTemp552 - floorf(fTemp552)) < fTemp551)))?2:0));
			fRec384[0] = square_blep_x(iTemp553, ((int((fTemp416 < 0.5f)))?1.0f:-1.0f), fTemp416, fTemp551);
			float 	fRec385 = square_blep_prev(iTemp553, fRec384[1], fTemp417, fTemp551);
			fRec383[0] = (fRec383[1] + (fConst22 * (fRec385 - fRec383[1])));
			fRec382[0] = (fConst3 * ((fRec383[0] - fRec383[1]) + fRec382[1]));
			iRec390[0] = ((int(((fTemp473 - fTemp472) < 0)))?(1 - iRec390[1]):iRec390[1]);
			float fTemp554 = (iRec390[0] + fTemp473);
			fVec68[0] = fTemp554;
			float fTemp555 = (0.5f * fVec68[1]);
			float fTemp556 = (0.5f * fVec68[0]);
			float fTemp557 = (1 + fTemp556);
			float fTemp558 = (fTemp557 - (fTemp555 + floorf((fTemp557 - fTemp555))));
			float fTemp559 = (0.5f * (1.0f + fVec68[0]));
			int iTemp560 = ((int((fTemp555 > fTemp556)))?1:((int(((fTemp559 - floorf(fTemp559)) < fTemp558)))?2:0));
			fRec388[0] = square_blep_x(iTemp560, ((int((fTemp556 < 0.5f)))?1.0f:-1.0f), fTemp556, fTemp558);
			float 	fRec389 = square_blep_prev(iTemp560, fRec388[1], fTemp555, fTemp558);
			fRec387[0] = (fRec387[1] + (fConst14 * (fRec389 - fRec387[1])));
			fRec386[0] = (fConst15 * ((fRec387[0] - fRec387[1]) + fRec386[1]));
			iRec395[0] = ((int(((fTemp463 - fTemp462) < 0)))?(1 - iRec395[1]):iRec395[1]);
			float fTemp561 = (iRec395[0] + fTemp463);
			fVec69[0] = fTemp561;
			float fTemp562 = (0.5f * fVec69[1]);
			float fTemp563 = (0.5f * fVec69[0]);
			float fTemp564 = (1 + fTemp563);
			float fTemp565 = (fTemp564 - (fTemp562 + floorf((fTemp564 - fTemp562))));
			float fTemp566 = (0.5f * (1.0f + fVec69[0]));
			int iTemp567 = ((int((fTemp562 > fTemp563)))?1:((int(((fTemp566 - floorf(fTemp566)) < fTemp565)))?2:0));
			fRec393[0] = square_blep_x(iTemp567, ((int((fTemp563 < 0.5f)))?1.0f:-1.0f), fTemp563, fTemp565);
			float 	fRec394 = square_blep_prev(iTemp567, fRec393[1], fTemp562, fTemp565);
			fRec392[0] = (fRec392[1] + (fConst23 * (fRec394 - fRec392[1])));
			fRec391[0] = (fConst15 * ((fRec392[0] - fRec392[1]) + fRec391[1]));
			iRec400[0] = ((int(((fTemp453 - fTemp452) < 0)))?(1 - iRec400[1]):iRec400[1]);
			float fTemp568 = (iRec400[0] + fTemp453);
			fVec70[0] = fTemp568;
			float fTemp569 = (0.5f * fVec70[1]);
			float fTemp570 = (0.5f * fVec70[0]);
			float fTemp571 = (1 + fTemp570);
			float fTemp572 = (fTemp571 - (fTemp569 + floorf((fTemp571 - fTemp569))));
			float fTemp573 = (0.5f * (1.0f + fVec70[0]));
			int iTemp574 = ((int((fTemp569 > fTemp570)))?1:((int(((fTemp573 - floorf(fTemp573)) < fTemp572)))?2:0));
			fRec398[0] = square_blep_x(iTemp574, ((int((fTemp570 < 0.5f)))?1.0f:-1.0f), fTemp570, fTemp572);
			float 	fRec399 = square_blep_prev(iTemp574, fRec398[1], fTemp569, fTemp572);
			fRec397[0] = (fRec397[1] + (fConst23 * (fRec399 - fRec397[1])));
			fRec396[0] = (fConst15 * ((fRec397[0] - fRec397[1]) + fRec396[1]));
			iRec405[0] = ((int(((fTemp443 - fTemp442) < 0)))?(1 - iRec405[1]):iRec405[1]);
			float fTemp575 = (iRec405[0] + fTemp443);
			fVec71[0] = fTemp575;
			float fTemp576 = (0.5f * fVec71[1]);
			float fTemp577 = (0.5f * fVec71[0]);
			float fTemp578 = (1 + fTemp577);
			float fTemp579 = (fTemp578 - (fTemp576 + floorf((fTemp578 - fTemp576))));
			float fTemp580 = (0.5f * (1.0f + fVec71[0]));
			int iTemp581 = ((int((fTemp576 > fTemp577)))?1:((int(((fTemp580 - floorf(fTemp580)) < fTemp579)))?2:0));
			fRec403[0] = square_blep_x(iTemp581, ((int((fTemp577 < 0.5f)))?1.0f:-1.0f), fTemp577, fTemp579);
			float 	fRec404 = square_blep_prev(iTemp581, fRec403[1], fTemp576, fTemp579);
			fRec402[0] = (fRec402[1] + (fConst23 * (fRec404 - fRec402[1])));
			fRec401[0] = (fConst15 * ((fRec402[0] - fRec402[1]) + fRec401[1]));
			iRec410[0] = ((int(((fTemp433 - fTemp432) < 0)))?(1 - iRec410[1]):iRec410[1]);
			float fTemp582 = (iRec410[0] + fTemp433);
			fVec72[0] = fTemp582;
			float fTemp583 = (0.5f * fVec72[1]);
			float fTemp584 = (0.5f * fVec72[0]);
			float fTemp585 = (1 + fTemp584);
			float fTemp586 = (fTemp585 - (fTemp583 + floorf((fTemp585 - fTemp583))));
			float fTemp587 = (0.5f * (1.0f + fVec72[0]));
			int iTemp588 = ((int((fTemp583 > fTemp584)))?1:((int(((fTemp587 - floorf(fTemp587)) < fTemp586)))?2:0));
			fRec408[0] = square_blep_x(iTemp588, ((int((fTemp584 < 0.5f)))?1.0f:-1.0f), fTemp584, fTemp586);
			float 	fRec409 = square_blep_prev(iTemp588, fRec408[1], fTemp583, fTemp586);
			fRec407[0] = (fRec407[1] + (fConst23 * (fRec409 - fRec407[1])));
			fRec406[0] = (fConst15 * ((fRec407[0] - fRec407[1]) + fRec406[1]));
			iRec415[0] = ((int(((fTemp423 - fTemp422) < 0)))?(1 - iRec415[1]):iRec415[1]);
			float fTemp589 = (iRec415[0] + fTemp423);
			fVec73[0] = fTemp589;
			float fTemp590 = (0.5f * fVec73[1]);
			float fTemp591 = (0.5f * fVec73[0]);
			float fTemp592 = (1 + fTemp591);
			float fTemp593 = (fTemp592 - (fTemp590 + floorf((fTemp592 - fTemp590))));
			float fTemp594 = (0.5f * (1.0f + fVec73[0]));
			int iTemp595 = ((int((fTemp590 > fTemp591)))?1:((int(((fTemp594 - floorf(fTemp594)) < fTemp593)))?2:0));
			fRec413[0] = square_blep_x(iTemp595, ((int((fTemp591 < 0.5f)))?1.0f:-1.0f), fTemp591, fTemp593);
			float 	fRec414 = square_blep_prev(iTemp595, fRec413[1], fTemp590, fTemp593);
			fRec412[0] = (fRec412[1] + (fConst23 * (fRec414 - fRec412[1])));
			fRec411[0] = (fConst24 * ((fRec412[0] - fRec412[1]) + fRec411[1]));
			iRec420[0] = ((int(((fTemp410 - fTemp409) < 0)))?(1 - iRec420[1]):iRec420[1]);
			float fTemp596 = (iRec420[0] + fTemp410);
			fVec74[0] = fTemp596;
			float fTemp597 = (0.5f * fVec74[1]);
			float fTemp598 = (0.5f * fVec74[0]);
			float fTemp599 = (1 + fTemp598);
			float fTemp600 = (fTemp599 - (fTemp597 + floorf((fTemp599 - fTemp597))));
			float fTemp601 = (0.5f * (1.0f + fVec74[0]));
			int iTemp602 = ((int((fTemp597 > fTemp598)))?1:((int(((fTemp601 - floorf(fTemp601)) < fTemp600)))?2:0));
			fRec418[0] = square_blep_x(iTemp602, ((int((fTemp598 < 0.5f)))?1.0f:-1.0f), fTemp598, fTemp600);
			float 	fRec419 = square_blep_prev(iTemp602, fRec418[1], fTemp597, fTemp600);
			fRec417[0] = (fRec417[1] + (fConst23 * (fRec419 - fRec417[1])));
			fRec416[0] = (fConst24 * ((fRec417[0] - fRec417[1]) + fRec416[1]));
			iRec425[0] = ((int(((fTemp397 - fTemp396) < 0)))?(1 - iRec425[1]):iRec425[1]);
			float fTemp603 = (iRec425[0] + fTemp397);
			fVec75[0] = fTemp603;
			float fTemp604 = (0.5f * fVec75[1]);
			float fTemp605 = (0.5f * fVec75[0]);
			float fTemp606 = (1 + fTemp605);
			float fTemp607 = (fTemp606 - (fTemp604 + floorf((fTemp606 - fTemp604))));
			float fTemp608 = (0.5f * (1.0f + fVec75[0]));
			int iTemp609 = ((int((fTemp604 > fTemp605)))?1:((int(((fTemp608 - floorf(fTemp608)) < fTemp607)))?2:0));
			fRec423[0] = square_blep_x(iTemp609, ((int((fTemp605 < 0.5f)))?1.0f:-1.0f), fTemp605, fTemp607);
			float 	fRec424 = square_blep_prev(iTemp609, fRec423[1], fTemp604, fTemp607);
			fRec422[0] = (fRec422[1] + (fConst23 * (fRec424 - fRec422[1])));
			fRec421[0] = (fConst24 * ((fRec422[0] - fRec422[1]) + fRec421[1]));
			iRec430[0] = ((int(((fTemp384 - fTemp383) < 0)))?(1 - iRec430[1]):iRec430[1]);
			float fTemp610 = (iRec430[0] + fTemp384);
			fVec76[0] = fTemp610;
			float fTemp611 = (0.5f * fVec76[1]);
			float fTemp612 = (0.5f * fVec76[0]);
			float fTemp613 = (1 + fTemp612);
			float fTemp614 = (fTemp613 - (fTemp611 + floorf((fTemp613 - fTemp611))));
			float fTemp615 = (0.5f * (1.0f + fVec76[0]));
			int iTemp616 = ((int((fTemp611 > fTemp612)))?1:((int(((fTemp615 - floorf(fTemp615)) < fTemp614)))?2:0));
			fRec428[0] = square_blep_x(iTemp616, ((int((fTemp612 < 0.5f)))?1.0f:-1.0f), fTemp612, fTemp614);
			float 	fRec429 = square_blep_prev(iTemp616, fRec428[1], fTemp611, fTemp614);
			fRec427[0] = (fRec427[1] + (fConst23 * (fRec429 - fRec427[1])));
			fRec426[0] = (fConst24 * ((fRec427[0] - fRec427[1]) + fRec426[1]));
			iRec435[0] = ((int(((fTemp371 - fTemp370) < 0)))?(1 - iRec435[1]):iRec435[1]);
			float fTemp617 = (iRec435[0] + fTemp371);
			fVec77[0] = fTemp617;
			float fTemp618 = (0.5f * fVec77[1]);
			float fTemp619 = (0.5f * fVec77[0]);
			float fTemp620 = (1 + fTemp619);
			float fTemp621 = (fTemp620 - (fTemp618 + floorf((fTemp620 - fTemp618))));
			float fTemp622 = (0.5f * (1.0f + fVec77[0]));
			int iTemp623 = ((int((fTemp618 > fTemp619)))?1:((int(((fTemp622 - floorf(fTemp622)) < fTemp621)))?2:0));
			fRec433[0] = square_blep_x(iTemp623, ((int((fTemp619 < 0.5f)))?1.0f:-1.0f), fTemp619, fTemp621);
			float 	fRec434 = square_blep_prev(iTemp623, fRec433[1], fTemp618, fTemp621);
			fRec432[0] = (fRec432[1] + (fConst25 * (fRec434 - fRec432[1])));
			fRec431[0] = (fConst24 * ((fRec432[0] - fRec432[1]) + fRec431[1]));
			iRec440[0] = ((int(((fTemp345 - fTemp344) < 0)))?(1 - iRec440[1]):iRec440[1]);
			float fTemp624 = (iRec440[0] + fTemp345);
			fVec78[0] = fTemp624;
			float fTemp625 = (0.5f * fVec78[1]);
			float fTemp626 = (0.5f * fVec78[0]);
			float fTemp627 = (1 + fTemp626);
			float fTemp628 = (fTemp627 - (fTemp625 + floorf((fTemp627 - fTemp625))));
			float fTemp629 = (0.5f * (1.0f + fVec78[0]));
			int iTemp630 = ((int((fTemp625 > fTemp626)))?1:((int(((fTemp629 - floorf(fTemp629)) < fTemp628)))?2:0));
			fRec438[0] = square_blep_x(iTemp630, ((int((fTemp626 < 0.5f)))?1.0f:-1.0f), fTemp626, fTemp628);
			float 	fRec439 = square_blep_prev(iTemp630, fRec438[1], fTemp625, fTemp628);
			fRec437[0] = (fRec437[1] + (fConst25 * (fRec439 - fRec437[1])));
			fRec436[0] = (fConst24 * ((fRec437[0] - fRec437[1]) + fRec436[1]));
			iRec445[0] = ((int(((fTemp358 - fTemp357) < 0)))?(1 - iRec445[1]):iRec445[1]);
			float fTemp631 = (iRec445[0] + fTemp358);
			fVec79[0] = fTemp631;
			float fTemp632 = (0.5f * fVec79[1]);
			float fTemp633 = (0.5f * fVec79[0]);
			float fTemp634 = (1 + fTemp633);
			float fTemp635 = (fTemp634 - (fTemp632 + floorf((fTemp634 - fTemp632))));
			float fTemp636 = (0.5f * (1.0f + fVec79[0]));
			int iTemp637 = ((int((fTemp632 > fTemp633)))?1:((int(((fTemp636 - floorf(fTemp636)) < fTemp635)))?2:0));
			fRec443[0] = square_blep_x(iTemp637, ((int((fTemp633 < 0.5f)))?1.0f:-1.0f), fTemp633, fTemp635);
			float 	fRec444 = square_blep_prev(iTemp637, fRec443[1], fTemp632, fTemp635);
			fRec442[0] = (fRec442[1] + (fConst25 * (fRec444 - fRec442[1])));
			fRec441[0] = (fConst24 * ((fRec442[0] - fRec442[1]) + fRec441[1]));
			iRec450[0] = ((int(((fTemp556 - fTemp555) < 0)))?(1 - iRec450[1]):iRec450[1]);
			float fTemp638 = (iRec450[0] + fTemp556);
			fVec80[0] = fTemp638;
			float fTemp639 = (0.5f * fVec80[1]);
			float fTemp640 = (0.5f * fVec80[0]);
			float fTemp641 = (1 + fTemp640);
			float fTemp642 = (fTemp641 - (fTemp639 + floorf((fTemp641 - fTemp639))));
			float fTemp643 = (0.5f * (1.0f + fVec80[0]));
			int iTemp644 = ((int((fTemp639 > fTemp640)))?1:((int(((fTemp643 - floorf(fTemp643)) < fTemp642)))?2:0));
			fRec448[0] = square_blep_x(iTemp644, ((int((fTemp640 < 0.5f)))?1.0f:-1.0f), fTemp640, fTemp642);
			float 	fRec449 = square_blep_prev(iTemp644, fRec448[1], fTemp639, fTemp642);
			fRec447[0] = (fRec447[1] + (fConst25 * (fRec449 - fRec447[1])));
			fRec446[0] = (fConst24 * ((fRec447[0] - fRec447[1]) + fRec446[1]));
			iRec455[0] = ((int(((fTemp563 - fTemp562) < 0)))?(1 - iRec455[1]):iRec455[1]);
			float fTemp645 = (iRec455[0] + fTemp563);
			fVec81[0] = fTemp645;
			float fTemp646 = (0.5f * fVec81[1]);
			float fTemp647 = (0.5f * fVec81[0]);
			float fTemp648 = (1 + fTemp647);
			float fTemp649 = (fTemp648 - (fTemp646 + floorf((fTemp648 - fTemp646))));
			float fTemp650 = (0.5f * (1.0f + fVec81[0]));
			int iTemp651 = ((int((fTemp646 > fTemp647)))?1:((int(((fTemp650 - floorf(fTemp650)) < fTemp649)))?2:0));
			fRec453[0] = square_blep_x(iTemp651, ((int((fTemp647 < 0.5f)))?1.0f:-1.0f), fTemp647, fTemp649);
			float 	fRec454 = square_blep_prev(iTemp651, fRec453[1], fTemp646, fTemp649);
			fRec452[0] = (fRec452[1] + (fConst25 * (fRec454 - fRec452[1])));
			fRec451[0] = (fConst24 * ((fRec452[0] - fRec452[1]) + fRec451[1]));
			iRec460[0] = ((int(((fTemp570 - fTemp569) < 0)))?(1 - iRec460[1]):iRec460[1]);
			float fTemp652 = (iRec460[0] + fTemp570);
			fVec82[0] = fTemp652;
			float fTemp653 = (0.5f * fVec82[1]);
			float fTemp654 = (0.5f * fVec82[0]);
			float fTemp655 = (1 + fTemp654);
			float fTemp656 = (fTemp655 - (fTemp653 + floorf((fTemp655 - fTemp653))));
			float fTemp657 = (0.5f * (1.0f + fVec82[0]));
			int iTemp658 = ((int((fTemp653 > fTemp654)))?1:((int(((fTemp657 - floorf(fTemp657)) < fTemp656)))?2:0));
			fRec458[0] = square_blep_x(iTemp658, ((int((fTemp654 < 0.5f)))?1.0f:-1.0f), fTemp654, fTemp656);
			float 	fRec459 = square_blep_prev(iTemp658, fRec458[1], fTemp653, fTemp656);
			fRec457[0] = (fRec457[1] + (fConst25 * (fRec459 - fRec457[1])));
			fRec456[0] = (fConst24 * ((fRec457[0] - fRec457[1]) + fRec456[1]));
			iRec465[0] = ((int(((fTemp577 - fTemp576) < 0)))?(1 - iRec465[1]):iRec465[1]);
			float fTemp659 = (iRec465[0] + fTemp577);
			fVec83[0] = fTemp659;
			float fTemp660 = (0.5f * fVec83[1]);
			float fTemp661 = (0.5f * fVec83[0]);
			float fTemp662 = (1 + fTemp661);
			float fTemp663 = (fTemp662 - (fTemp660 + floorf((fTemp662 - fTemp660))));
			float fTemp664 = (0.5f * (1.0f + fVec83[0]));
			int iTemp665 = ((int((fTemp660 > fTemp661)))?1:((int(((fTemp664 - floorf(fTemp664)) < fTemp663)))?2:0));
			fRec463[0] = square_blep_x(iTemp665, ((int((fTemp661 < 0.5f)))?1.0f:-1.0f), fTemp661, fTemp663);
			float 	fRec464 = square_blep_prev(iTemp665, fRec463[1], fTemp660, fTemp663);
			fRec462[0] = (fRec462[1] + (fConst25 * (fRec464 - fRec462[1])));
			fRec461[0] = (fConst24 * ((fRec462[0] - fRec462[1]) + fRec461[1]));
			iRec470[0] = ((int(((fTemp584 - fTemp583) < 0)))?(1 - iRec470[1]):iRec470[1]);
			float fTemp666 = (iRec470[0] + fTemp584);
			fVec84[0] = fTemp666;
			float fTemp667 = (0.5f * fVec84[1]);
			float fTemp668 = (0.5f * fVec84[0]);
			float fTemp669 = (1 + fTemp668);
			float fTemp670 = (fTemp669 - (fTemp667 + floorf((fTemp669 - fTemp667))));
			float fTemp671 = (0.5f * (1.0f + fVec84[0]));
			int iTemp672 = ((int((fTemp667 > fTemp668)))?1:((int(((fTemp671 - floorf(fTemp671)) < fTemp670)))?2:0));
			fRec468[0] = square_blep_x(iTemp672, ((int((fTemp668 < 0.5f)))?1.0f:-1.0f), fTemp668, fTemp670);
			float 	fRec469 = square_blep_prev(iTemp672, fRec468[1], fTemp667, fTemp670);
			fRec467[0] = (fRec467[1] + (fConst25 * (fRec469 - fRec467[1])));
			fRec466[0] = (fConst24 * ((fRec467[0] - fRec467[1]) + fRec466[1]));
			float fTemp673 = (((((((((((((((((fSlow104 * fRec466[0]) + (fSlow103 * fRec461[0])) + (fSlow102 * fRec456[0])) + (fSlow101 * fRec451[0])) + (fSlow100 * fRec446[0])) + (fSlow99 * fRec441[0])) + (fSlow98 * fRec436[0])) + (fSlow97 * fRec431[0])) + (fSlow96 * fRec426[0])) + (fSlow95 * fRec421[0])) + (fSlow94 * fRec416[0])) + (fSlow93 * fRec411[0])) + (fSlow92 * fRec406[0])) + (fSlow91 * fRec401[0])) + (fSlow90 * fRec396[0])) + (fSlow89 * fRec391[0])) + (fSlow88 * fRec386[0]));
			float fTemp674 = (1.679f * ((fSlow24 * fTemp673) + ((fSlow9 * fRec101[0]) + ((fSlow63 * fRec93[0]) + ((fSlow59 * fRec85[0]) + ((fSlow55 * fRec77[0]) + ((fSlow51 * fRec69[0]) + ((fSlow47 * fRec61[0]) + ((fSlow43 * fRec53[0]) + ((fSlow39 * fRec45[0]) + ((fSlow35 * fRec37[0]) + ((fSlow31 * fRec29[0]) + ((fSlow27 * fRec21[0]) + ((fSlow67 * fRec6[0]) + ((fSlow8 * fRec14[0]) + ((fSlow62 * fRec382[0]) + ((fSlow58 * fRec378[0]) + ((fSlow54 * fRec374[0]) + ((fSlow50 * fRec370[0]) + ((fSlow46 * fRec366[0]) + ((fSlow42 * fRec362[0]) + ((fSlow38 * fRec358[0]) + ((fSlow34 * fRec354[0]) + ((fSlow30 * fRec350[0]) + ((fSlow26 * fRec346[0]) + ((fSlow66 * fRec342[0]) + ((fSlow7 * fRec338[0]) + ((fSlow87 * fRec334[0]) + ((fSlow86 * fRec330[0]) + ((fSlow85 * fRec326[0]) + ((fSlow84 * fRec322[0]) + ((fSlow83 * fRec318[0]) + ((fSlow82 * fRec314[0]) + ((fSlow81 * fRec310[0]) + ((fSlow80 * fRec304[0]) + ((fSlow79 * fRec298[0]) + ((fSlow78 * fRec292[0]) + ((fSlow77 * fRec286[0]) + ((fSlow76 * fRec280[0]) + ((fSlow75 * fRec273[0]) + ((fSlow74 * fRec266[0]) + ((fSlow73 * fRec259[0]) + ((fSlow72 * fRec252[0]) + ((fSlow71 * fRec245[0]) + ((fSlow70 * fRec238[0]) + (fSlow69 * fRec231[0]))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp675 = (1.679f * ((fSlow24 * (fRec411[0] + (fRec416[0] + (fRec421[0] + (fRec426[0] + (fRec431[0] + (fRec436[0] + (fRec441[0] + (fRec446[0] + (fRec451[0] + (fRec456[0] + (fRec461[0] + (fRec466[0] + (fRec386[0] + (fRec391[0] + (fRec396[0] + (fRec406[0] + fRec401[0]))))))))))))))))) + (fRec273[0] + (fRec266[0] + (fRec259[0] + (fRec252[0] + (fRec245[0] + (fRec231[0] + (fRec238[0] + (fRec314[0] + (fRec310[0] + (fRec304[0] + (fRec298[0] + (fRec292[0] + (fRec286[0] + (fRec280[0] + (fRec334[0] + (fRec330[0] + (fRec326[0] + (fRec322[0] + (fRec318[0] + (fRec350[0] + (fRec346[0] + (fRec342[0] + (fRec338[0] + (fRec382[0] + (fRec378[0] + (fRec374[0] + (fRec370[0] + (fRec366[0] + (fRec362[0] + (fRec358[0] + (fRec354[0] + fTemp178)))))))))))))))))))))))))))))))));
			fVec85[0] = (fTemp675 - fTemp674);
			fRec230[0] = (fConst13 * ((fTemp675 - (fTemp674 + fVec85[1])) + fRec230[1]));
			float fTemp676 = (fTemp674 + (0.0001f * (fRec230[0] * fSlow1)));
			float fTemp677 = (((((((((((((((((fSlow104 * fRec318[0]) + (fSlow103 * fRec322[0])) + (fSlow102 * fRec326[0])) + (fSlow101 * fRec330[0])) + (fSlow100 * fRec334[0])) + (fSlow99 * fRec338[0])) + (fSlow98 * fRec342[0])) + (fSlow97 * fRec346[0])) + (fSlow96 * fRec350[0])) + (fSlow95 * fRec354[0])) + (fSlow94 * fRec358[0])) + (fSlow93 * fRec362[0])) + (fSlow92 * fRec366[0])) + (fSlow91 * fRec370[0])) + (fSlow90 * fRec374[0])) + (fSlow89 * fRec378[0])) + (fSlow88 * fRec382[0]));
			float fTemp678 = (fSlow24 * fTemp677);
			float fTemp679 = ((fSlow24 * ((fRec334[0] + (fRec330[0] + (fRec326[0] + (fRec322[0] + (fRec318[0] + (fRec350[0] + (fRec346[0] + (fRec342[0] + (fRec338[0] + (fRec382[0] + (fRec378[0] + (fRec374[0] + (fRec370[0] + (fRec366[0] + (fRec362[0] + (fRec354[0] + fRec358[0])))))))))))))))) - fTemp677)) + ((fSlow148 * fRec133[0]) + ((fSlow147 * fRec136[0]) + ((fSlow146 * fRec139[0]) + ((fSlow145 * fRec142[0]) + ((fSlow144 * fRec145[0]) + ((fSlow143 * fRec148[0]) + ((fSlow142 * fRec227[0]) + ((fSlow141 * fRec1[0]) + ((fSlow140 * fRec151[0]) + ((fSlow139 * fRec155[0]) + ((fSlow138 * fRec159[0]) + ((fSlow137 * fRec163[0]) + ((fSlow136 * fRec167[0]) + ((fSlow135 * fRec171[0]) + ((fSlow134 * fRec175[0]) + ((fSlow133 * fRec179[0]) + ((fSlow132 * fRec183[0]) + ((fSlow131 * fRec187[0]) + ((fSlow130 * fRec191[0]) + ((fSlow129 * fRec195[0]) + ((fSlow128 * fRec199[0]) + ((fSlow127 * fRec203[0]) + ((fSlow126 * fRec207[0]) + ((fSlow125 * fRec211[0]) + ((fSlow124 * fRec215[0]) + ((fSlow123 * fRec219[0]) + ((fSlow122 * fRec223[0]) + ((fSlow121 * fRec117[0]) + ((fSlow120 * fRec113[0]) + ((fSlow119 * fRec109[0]) + ((fSlow118 * fRec105[0]) + ((fSlow117 * fRec101[0]) + ((fSlow116 * fRec93[0]) + ((fSlow115 * fRec85[0]) + ((fSlow114 * fRec77[0]) + ((fSlow113 * fRec69[0]) + ((fSlow112 * fRec61[0]) + ((fSlow111 * fRec53[0]) + ((fSlow110 * fRec45[0]) + ((fSlow109 * fRec37[0]) + ((fSlow108 * fRec29[0]) + ((fSlow107 * fRec21[0]) + ((fSlow106 * fRec14[0]) + (fSlow105 * fRec6[0])))))))))))))))))))))))))))))))))))))))))))));
			fVec86[0] = fTemp679;
			fRec471[0] = (fConst13 * ((fVec86[0] - fVec86[1]) + fRec471[1]));
			float fTemp680 = (0.0001f * (fRec471[0] * fSlow1));
			int iTemp681 = int((1048576 * faustpower<2>(min(1.0f, max(-1.0f, (0.1f * fTemp335))))));
			iVec87[IOTA&4095] = iTemp681;
			iRec473[0] = ((iVec87[IOTA&4095] + iRec473[1]) - iVec87[(IOTA-iConst28)&4095]);
			float fTemp682 = log10f(sqrtf((fConst29 * float(iRec473[0]))));
			fVec88[0] = fTemp682;
			fRec472[0] = ((fConst26 * ((int(((20 * fVec88[0]) > -75)))?((int(((20 * fVec88[1]) < -111)))?1:0):0)) + (fConst27 * fRec472[1]));
			float fTemp683 = min(1.0f, (fConst30 * fRec472[0]));
			fVec89[0] = fTemp683;
			fRec474[0] = (fSlow151 + (0.98f * fRec474[1]));
			float fTemp684 = (((((((((((((((((fSlow104 * fRec280[0]) + (fSlow103 * fRec286[0])) + (fSlow102 * fRec292[0])) + (fSlow101 * fRec298[0])) + (fSlow100 * fRec304[0])) + (fSlow99 * fRec310[0])) + (fSlow98 * fRec314[0])) + (fSlow97 * fRec318[0])) + (fSlow96 * fRec322[0])) + (fSlow95 * fRec326[0])) + (fSlow94 * fRec330[0])) + (fSlow93 * fRec334[0])) + (fSlow92 * fRec338[0])) + (fSlow91 * fRec342[0])) + (fSlow90 * fRec346[0])) + (fSlow89 * fRec350[0])) + (fSlow88 * fRec354[0]));
			float fTemp685 = (((((((((((((((((fSlow104 * fRec406[0]) + (fSlow103 * fRec401[0])) + (fSlow102 * fRec396[0])) + (fSlow101 * fRec391[0])) + (fSlow100 * fRec386[0])) + (fSlow99 * fRec238[0])) + (fSlow98 * fRec231[0])) + (fSlow97 * fRec245[0])) + (fSlow96 * fRec252[0])) + (fSlow95 * fRec259[0])) + (fSlow94 * fRec266[0])) + (fSlow93 * fRec273[0])) + (fSlow92 * fRec280[0])) + (fSlow91 * fRec286[0])) + (fSlow90 * fRec292[0])) + (fSlow89 * fRec298[0])) + (fSlow88 * fRec304[0]));
			fRec475[0] = (fRec475[1] + (fConst31 * ((fSlow23 * ((fSlow155 * ((fTemp673 + (0.5f * fTemp685)) + (0.25f * fTemp684))) + (fSlow153 * (fTemp685 + (0.5f * fTemp684))))) - fRec475[1])));
			float fTemp686 = (fSlow157 * fTemp676);
			fVec90[0] = fTemp686;
			fRec477[0] = (fConst32 * ((fVec90[0] - fVec90[1]) + fRec477[1]));
			float fTemp687 = ((fSlow158 * fTemp676) + (0.5416666666666667f * fRec477[0]));
			fVec91[0] = fTemp687;
			fRec476[0] = (fConst33 * ((fVec91[0] - fVec91[1]) + fRec476[1]));
			float fTemp688 = ((fSlow24 * ((fRec273[0] + (fRec266[0] + (fRec259[0] + (fRec252[0] + (fRec245[0] + (fRec231[0] + (fRec238[0] + (fRec386[0] + (fRec391[0] + (fRec396[0] + (fRec401[0] + (fRec406[0] + (fRec304[0] + (fRec298[0] + (fRec292[0] + (fRec280[0] + fRec286[0])))))))))))))))) - fTemp685)) + ((fSlow105 * fRec314[0]) + ((fSlow106 * fRec310[0]) + ((fSlow111 * fRec334[0]) + ((fSlow110 * fRec330[0]) + ((fSlow109 * fRec326[0]) + ((fSlow108 * fRec322[0]) + ((fSlow107 * fRec318[0]) + ((fSlow115 * fRec350[0]) + ((fSlow114 * fRec346[0]) + ((fSlow113 * fRec342[0]) + ((fSlow112 * fRec338[0]) + ((fSlow123 * fRec382[0]) + ((fSlow122 * fRec378[0]) + ((fSlow121 * fRec374[0]) + ((fSlow120 * fRec370[0]) + ((fSlow119 * fRec366[0]) + ((fSlow118 * fRec362[0]) + ((fSlow117 * fRec358[0]) + ((fSlow116 * fRec354[0]) + ((fSlow148 * fRec195[0]) + ((fSlow147 * fRec199[0]) + ((fSlow146 * fRec203[0]) + ((fSlow145 * fRec207[0]) + ((fSlow144 * fRec211[0]) + ((fSlow143 * fRec215[0]) + ((fSlow142 * fRec219[0]) + ((fSlow141 * fRec223[0]) + ((fSlow140 * fRec117[0]) + ((fSlow139 * fRec113[0]) + ((fSlow138 * fRec109[0]) + ((fSlow137 * fRec105[0]) + ((fSlow136 * fRec101[0]) + ((fSlow135 * fRec93[0]) + ((fSlow134 * fRec85[0]) + ((fSlow133 * fRec77[0]) + ((fSlow132 * fRec69[0]) + ((fSlow131 * fRec61[0]) + ((fSlow130 * fRec53[0]) + ((fSlow129 * fRec45[0]) + ((fSlow128 * fRec37[0]) + ((fSlow127 * fRec29[0]) + ((fSlow126 * fRec21[0]) + ((fSlow124 * fRec14[0]) + (fSlow125 * fRec6[0])))))))))))))))))))))))))))))))))))))))))))));
			fVec92[0] = fTemp688;
			fRec480[0] = (fConst13 * ((fVec92[0] - fVec92[1]) + fRec480[1]));
			float fTemp689 = (((fSlow24 * fTemp685) + ((fSlow9 * fRec195[0]) + ((fSlow63 * fRec199[0]) + ((fSlow59 * fRec203[0]) + ((fSlow55 * fRec207[0]) + ((fSlow51 * fRec211[0]) + ((fSlow47 * fRec215[0]) + ((fSlow43 * fRec219[0]) + ((fSlow39 * fRec223[0]) + ((fSlow35 * fRec117[0]) + ((fSlow31 * fRec113[0]) + ((fSlow27 * fRec109[0]) + ((fSlow67 * fRec105[0]) + ((fSlow8 * fRec101[0]) + ((fSlow62 * fRec93[0]) + ((fSlow58 * fRec85[0]) + ((fSlow54 * fRec77[0]) + ((fSlow50 * fRec69[0]) + ((fSlow46 * fRec61[0]) + ((fSlow42 * fRec53[0]) + ((fSlow38 * fRec45[0]) + ((fSlow34 * fRec37[0]) + ((fSlow30 * fRec29[0]) + ((fSlow26 * fRec21[0]) + ((fSlow66 * fRec6[0]) + ((fSlow7 * fRec14[0]) + ((fSlow87 * fRec382[0]) + ((fSlow86 * fRec378[0]) + ((fSlow85 * fRec374[0]) + ((fSlow84 * fRec370[0]) + ((fSlow83 * fRec366[0]) + ((fSlow82 * fRec362[0]) + ((fSlow81 * fRec358[0]) + ((fSlow80 * fRec354[0]) + ((fSlow79 * fRec350[0]) + ((fSlow78 * fRec346[0]) + ((fSlow77 * fRec342[0]) + ((fSlow76 * fRec338[0]) + ((fSlow75 * fRec334[0]) + ((fSlow74 * fRec330[0]) + ((fSlow73 * fRec326[0]) + ((fSlow72 * fRec322[0]) + ((fSlow71 * fRec318[0]) + ((fSlow70 * fRec310[0]) + (fSlow69 * fRec314[0]))))))))))))))))))))))))))))))))))))))))))))) + (0.0001f * (fRec480[0] * fSlow1)));
			float fTemp690 = (fSlow160 * fTemp689);
			fVec93[0] = fTemp690;
			fRec479[0] = (fConst34 * ((fVec93[0] - fVec93[1]) + fRec479[1]));
			float fTemp691 = ((fSlow161 * fTemp689) + (0.5416666666666667f * fRec479[0]));
			fVec94[0] = fTemp691;
			fRec478[0] = (fConst35 * ((fVec94[0] - fVec94[1]) + fRec478[1]));
			fRec483[0] = (fConst13 * fRec483[1]);
			float fTemp692 = ((fSlow24 * fTemp684) + ((0.0001f * (fRec483[0] * fSlow1)) + ((fSlow63 * fRec151[0]) + ((fSlow59 * fRec155[0]) + ((fSlow55 * fRec159[0]) + ((fSlow51 * fRec163[0]) + ((fSlow47 * fRec167[0]) + ((fSlow43 * fRec171[0]) + ((fSlow39 * fRec175[0]) + ((fSlow35 * fRec179[0]) + ((fSlow31 * fRec183[0]) + ((fSlow27 * fRec187[0]) + ((fSlow67 * fRec191[0]) + ((fSlow8 * fRec195[0]) + ((fSlow62 * fRec199[0]) + ((fSlow58 * fRec203[0]) + ((fSlow54 * fRec207[0]) + ((fSlow50 * fRec211[0]) + ((fSlow46 * fRec215[0]) + ((fSlow42 * fRec219[0]) + ((fSlow38 * fRec223[0]) + ((fSlow34 * fRec117[0]) + ((fSlow30 * fRec113[0]) + ((fSlow26 * fRec109[0]) + ((fSlow66 * fRec105[0]) + ((fSlow7 * fRec101[0]) + ((fSlow87 * fRec93[0]) + ((fSlow86 * fRec85[0]) + ((fSlow85 * fRec77[0]) + ((fSlow84 * fRec69[0]) + ((fSlow83 * fRec61[0]) + ((fSlow82 * fRec53[0]) + ((fSlow81 * fRec45[0]) + ((fSlow80 * fRec37[0]) + ((fSlow79 * fRec29[0]) + ((fSlow78 * fRec21[0]) + ((fSlow77 * fRec6[0]) + ((fSlow76 * fRec14[0]) + ((fSlow75 * fRec382[0]) + ((fSlow74 * fRec378[0]) + ((fSlow73 * fRec374[0]) + ((fSlow72 * fRec370[0]) + ((fSlow71 * fRec366[0]) + ((fSlow69 * fRec362[0]) + ((fSlow9 * fRec1[0]) + (fSlow70 * fRec358[0]))))))))))))))))))))))))))))))))))))))))))))));
			float fTemp693 = (fSlow163 * fTemp692);
			fVec95[0] = fTemp693;
			fRec482[0] = (fConst36 * ((fVec95[0] - fVec95[1]) + fRec482[1]));
			float fTemp694 = ((fSlow164 * fTemp692) + (0.5416666666666667f * fRec482[0]));
			fVec96[0] = fTemp694;
			fRec481[0] = (fConst37 * ((fVec96[0] - fVec96[1]) + fRec481[1]));
			float fTemp695 = (((((((((((((((((fSlow104 * fRec338[0]) + (fSlow103 * fRec342[0])) + (fSlow102 * fRec346[0])) + (fSlow101 * fRec350[0])) + (fSlow100 * fRec354[0])) + (fSlow99 * fRec358[0])) + (fSlow98 * fRec362[0])) + (fSlow97 * fRec366[0])) + (fSlow96 * fRec370[0])) + (fSlow95 * fRec374[0])) + (fSlow94 * fRec378[0])) + (fSlow93 * fRec382[0])) + (fSlow92 * fRec14[0])) + (fSlow91 * fRec6[0])) + (fSlow90 * fRec21[0])) + (fSlow89 * fRec29[0])) + (fSlow88 * fRec37[0]));
			float fTemp696 = ((fSlow24 * ((fRec350[0] + (fRec346[0] + (fRec342[0] + (fRec338[0] + (fRec382[0] + (fRec378[0] + (fRec374[0] + (fRec370[0] + (fRec366[0] + (fRec362[0] + (fRec358[0] + (fRec354[0] + fTemp74)))))))))))) - fTemp695)) + ((fSlow147 * fRec121[0]) + ((fSlow146 * fRec124[0]) + ((fSlow145 * fRec127[0]) + ((fSlow144 * fRec130[0]) + ((fSlow143 * fRec133[0]) + ((fSlow142 * fRec136[0]) + ((fSlow141 * fRec139[0]) + ((fSlow140 * fRec142[0]) + ((fSlow139 * fRec145[0]) + ((fSlow138 * fRec148[0]) + ((fSlow137 * fRec227[0]) + ((fSlow166 * fRec1[0]) + ((fSlow135 * fRec151[0]) + ((fSlow134 * fRec155[0]) + ((fSlow133 * fRec159[0]) + ((fSlow132 * fRec163[0]) + ((fSlow131 * fRec167[0]) + ((fSlow130 * fRec171[0]) + ((fSlow129 * fRec175[0]) + ((fSlow128 * fRec179[0]) + ((fSlow127 * fRec183[0]) + ((fSlow126 * fRec187[0]) + ((fSlow125 * fRec191[0]) + ((fSlow124 * fRec195[0]) + ((fSlow123 * fRec199[0]) + ((fSlow122 * fRec203[0]) + ((fSlow121 * fRec207[0]) + ((fSlow120 * fRec211[0]) + ((fSlow119 * fRec215[0]) + ((fSlow118 * fRec219[0]) + ((fSlow117 * fRec223[0]) + ((fSlow116 * fRec117[0]) + ((fSlow115 * fRec113[0]) + ((fSlow114 * fRec109[0]) + ((fSlow113 * fRec105[0]) + ((fSlow112 * fRec101[0]) + ((fSlow111 * fRec93[0]) + ((fSlow110 * fRec85[0]) + ((fSlow109 * fRec77[0]) + ((fSlow108 * fRec69[0]) + ((fSlow107 * fRec61[0]) + ((fSlow106 * fRec45[0]) + (fSlow105 * fRec53[0]))))))))))))))))))))))))))))))))))))))))))));
			fVec97[0] = fTemp696;
			fRec486[0] = (fConst13 * ((fVec97[0] - fVec97[1]) + fRec486[1]));
			float fTemp697 = (((fSlow165 * fRec1[0]) + ((fSlow24 * fTemp695) + ((fSlow62 * fRec151[0]) + ((fSlow58 * fRec155[0]) + ((fSlow54 * fRec159[0]) + ((fSlow50 * fRec163[0]) + ((fSlow46 * fRec167[0]) + ((fSlow42 * fRec171[0]) + ((fSlow38 * fRec175[0]) + ((fSlow34 * fRec179[0]) + ((fSlow30 * fRec183[0]) + ((fSlow26 * fRec187[0]) + ((fSlow66 * fRec191[0]) + ((fSlow7 * fRec195[0]) + ((fSlow87 * fRec199[0]) + ((fSlow86 * fRec203[0]) + ((fSlow85 * fRec207[0]) + ((fSlow84 * fRec211[0]) + ((fSlow83 * fRec215[0]) + ((fSlow82 * fRec219[0]) + ((fSlow81 * fRec223[0]) + ((fSlow80 * fRec117[0]) + ((fSlow79 * fRec113[0]) + ((fSlow78 * fRec109[0]) + ((fSlow77 * fRec105[0]) + ((fSlow76 * fRec101[0]) + ((fSlow75 * fRec93[0]) + ((fSlow74 * fRec85[0]) + ((fSlow73 * fRec77[0]) + ((fSlow72 * fRec69[0]) + ((fSlow71 * fRec61[0]) + ((fSlow69 * fRec53[0]) + ((fSlow70 * fRec45[0]) + ((fSlow63 * fRec121[0]) + ((fSlow59 * fRec124[0]) + ((fSlow55 * fRec127[0]) + ((fSlow51 * fRec130[0]) + ((fSlow47 * fRec133[0]) + ((fSlow43 * fRec136[0]) + ((fSlow39 * fRec139[0]) + ((fSlow35 * fRec142[0]) + ((fSlow31 * fRec145[0]) + ((fSlow67 * fRec227[0]) + (fSlow27 * fRec148[0])))))))))))))))))))))))))))))))))))))))))))) + (0.0001f * (fRec486[0] * fSlow1)));
			float fTemp698 = (fSlow168 * fTemp697);
			fVec98[0] = fTemp698;
			fRec485[0] = (fConst38 * ((fVec98[0] - fVec98[1]) + fRec485[1]));
			float fTemp699 = ((fSlow169 * fTemp697) + (0.5416666666666667f * fRec485[0]));
			fVec99[0] = fTemp699;
			fRec484[0] = (fConst39 * ((fVec99[0] - fVec99[1]) + fRec484[1]));
			fRec488[0] = (fRec488[1] + (fConst21 * (fVec90[0] - fRec488[1])));
			fRec487[0] = (fRec487[1] + (fConst21 * (fRec488[0] - fRec487[1])));
			fRec490[0] = (fRec490[1] + (fConst4 * (fVec93[0] - fRec490[1])));
			fRec489[0] = (fRec489[1] + (fConst4 * (fRec490[0] - fRec489[1])));
			fRec492[0] = (fRec492[1] + (fConst7 * (fVec95[0] - fRec492[1])));
			fRec491[0] = ((fConst7 * (fRec492[0] - fRec491[1])) + fRec491[1]);
			fRec494[0] = (fRec494[1] + (fConst11 * (fVec98[0] - fRec494[1])));
			fRec493[0] = (fRec493[1] + (fConst11 * (fRec494[0] - fRec493[1])));
			float fTemp700 = ((fSlow185 * fRec142[0]) + ((fSlow65 * fRec145[0]) + ((2 * ((fTemp198 + (fTemp202 + (fTemp206 + (fTemp210 + (fTemp214 + (fTemp218 + (fTemp222 + (fTemp226 + (fTemp230 + (fTemp234 + (fRec227[0] + (fRec1[0] + (fTemp239 + (fTemp244 + (fTemp249 + (fTemp254 + (fTemp259 + (fTemp264 + (fTemp269 + (fTemp274 + (fTemp279 + (fTemp284 + (fTemp289 + (fTemp294 + (fTemp299 + (fTemp304 + (fTemp309 + (fTemp314 + (fTemp319 + (fTemp324 + (fTemp329 + ((((((((0.5f * fRec77[0]) + (0.5f * fRec85[0])) + (0.5f * fRec93[0])) + (0.5f * fRec101[0])) + (0.5f * fRec105[0])) + (0.5f * fRec109[0])) + (0.5f * fRec113[0])) + (0.5f * fRec117[0]))))))))))))))))))))))))))))))))) + (fSlow25 * (fRec382[0] + (fRec378[0] + (fRec374[0] + (fRec370[0] + (fRec366[0] + (fRec362[0] + (fRec358[0] + (fRec354[0] + fTemp131))))))))))) + (fSlow61 * fRec148[0]))));
			float fTemp701 = ((fSlow56 * fRec227[0]) + ((fSlow52 * fRec1[0]) + ((fSlow24 * (((((((((((((((((fSlow104 * fRec354[0]) + (fSlow103 * fRec358[0])) + (fSlow102 * fRec362[0])) + (fSlow101 * fRec366[0])) + (fSlow100 * fRec370[0])) + (fSlow99 * fRec374[0])) + (fSlow98 * fRec378[0])) + (fSlow97 * fRec382[0])) + (fSlow96 * fRec14[0])) + (fSlow95 * fRec6[0])) + (fSlow94 * fRec21[0])) + (fSlow93 * fRec29[0])) + (fSlow92 * fRec37[0])) + (fSlow91 * fRec45[0])) + (fSlow90 * fRec53[0])) + (fSlow89 * fRec61[0])) + (fSlow88 * fRec69[0]))) + ((fSlow47 * fRec121[0]) + ((fSlow43 * fRec124[0]) + ((fSlow39 * fRec127[0]) + ((fSlow35 * fRec130[0]) + ((fSlow31 * fRec133[0]) + ((fSlow27 * fRec136[0]) + ((fSlow67 * fRec139[0]) + ((fSlow46 * fRec151[0]) + ((fSlow42 * fRec155[0]) + ((fSlow38 * fRec159[0]) + ((fSlow34 * fRec163[0]) + ((fSlow30 * fRec167[0]) + ((fSlow26 * fRec171[0]) + ((fSlow66 * fRec175[0]) + ((fSlow7 * fRec179[0]) + ((fSlow87 * fRec183[0]) + ((fSlow86 * fRec187[0]) + ((fSlow85 * fRec191[0]) + ((fSlow84 * fRec195[0]) + ((fSlow83 * fRec199[0]) + ((fSlow82 * fRec203[0]) + ((fSlow81 * fRec207[0]) + ((fSlow80 * fRec211[0]) + ((fSlow79 * fRec215[0]) + ((fSlow78 * fRec219[0]) + ((fSlow77 * fRec223[0]) + ((fSlow76 * fRec117[0]) + ((fSlow75 * fRec113[0]) + ((fSlow74 * fRec109[0]) + ((fSlow73 * fRec105[0]) + ((fSlow72 * fRec101[0]) + ((fSlow71 * fRec93[0]) + ((fSlow70 * fRec77[0]) + (fSlow69 * fRec85[0])))))))))))))))))))))))))))))))))))));
			fVec100[0] = (0 - (fTemp701 - fTemp700));
			fRec495[0] = (fConst13 * ((0 - ((fTemp701 + fVec100[1]) - fTemp700)) + fRec495[1]));
			fRec496[0] = (fSlow191 + (0.98f * fRec496[1]));
			output0[i] = (FAUSTFLOAT)((0.001f + (0.05f * fRec496[0])) * ((fSlow190 * ((fSlow189 * fTemp335) + ((fSlow187 * (((fSlow165 * fRec142[0]) + ((fSlow64 * fRec145[0]) + ((fSlow60 * fRec148[0]) + fTemp701))) + (0.0001f * (fRec495[0] * fSlow1)))) + ((fSlow184 * fTemp697) + ((fSlow182 * ((fTemp678 + fTemp336) + fTemp680)) + ((fSlow180 * fTemp692) + ((fSlow178 * fTemp676) + (fSlow176 * fTemp689)))))))) + ((fSlow174 * ((fSlow172 * (((fRec493[0] + fRec491[0]) + fRec489[0]) + fRec487[0])) + (fSlow171 * (((fRec484[0] + fRec481[0]) + fRec478[0]) + fRec476[0])))) + ((fRec475[0] * (0.5f + (4.5f * fRec474[0]))) + (fSlow150 * (max(fSlow149, (0.25f * (fVec89[4] + (fVec89[3] + (fVec89[0] + fVec89[2]))))) * (fTemp680 + (fTemp678 + ((0.5f * fTemp676) + (fTemp336 + (0.25f * fTemp335)))))))))));
			// post processing
			fRec496[1] = fRec496[0];
			fRec495[1] = fRec495[0];
			fVec100[1] = fVec100[0];
			fRec493[1] = fRec493[0];
			fRec494[1] = fRec494[0];
			fRec491[1] = fRec491[0];
			fRec492[1] = fRec492[0];
			fRec489[1] = fRec489[0];
			fRec490[1] = fRec490[0];
			fRec487[1] = fRec487[0];
			fRec488[1] = fRec488[0];
			fRec484[1] = fRec484[0];
			fVec99[1] = fVec99[0];
			fRec485[1] = fRec485[0];
			fVec98[1] = fVec98[0];
			fRec486[1] = fRec486[0];
			fVec97[1] = fVec97[0];
			fRec481[1] = fRec481[0];
			fVec96[1] = fVec96[0];
			fRec482[1] = fRec482[0];
			fVec95[1] = fVec95[0];
			fRec483[1] = fRec483[0];
			fRec478[1] = fRec478[0];
			fVec94[1] = fVec94[0];
			fRec479[1] = fRec479[0];
			fVec93[1] = fVec93[0];
			fRec480[1] = fRec480[0];
			fVec92[1] = fVec92[0];
			fRec476[1] = fRec476[0];
			fVec91[1] = fVec91[0];
			fRec477[1] = fRec477[0];
			fVec90[1] = fVec90[0];
			fRec475[1] = fRec475[0];
			fRec474[1] = fRec474[0];
			for (int i=4; i>0; i--) fVec89[i] = fVec89[i-1];
			fRec472[1] = fRec472[0];
			fVec88[1] = fVec88[0];
			iRec473[1] = iRec473[0];
			IOTA = IOTA+1;
			fRec471[1] = fRec471[0];
			fVec86[1] = fVec86[0];
			fRec230[1] = fRec230[0];
			fVec85[1] = fVec85[0];
			fRec466[1] = fRec466[0];
			fRec467[1] = fRec467[0];
			fRec468[1] = fRec468[0];
			fVec84[1] = fVec84[0];
			iRec470[1] = iRec470[0];
			fRec461[1] = fRec461[0];
			fRec462[1] = fRec462[0];
			fRec463[1] = fRec463[0];
			fVec83[1] = fVec83[0];
			iRec465[1] = iRec465[0];
			fRec456[1] = fRec456[0];
			fRec457[1] = fRec457[0];
			fRec458[1] = fRec458[0];
			fVec82[1] = fVec82[0];
			iRec460[1] = iRec460[0];
			fRec451[1] = fRec451[0];
			fRec452[1] = fRec452[0];
			fRec453[1] = fRec453[0];
			fVec81[1] = fVec81[0];
			iRec455[1] = iRec455[0];
			fRec446[1] = fRec446[0];
			fRec447[1] = fRec447[0];
			fRec448[1] = fRec448[0];
			fVec80[1] = fVec80[0];
			iRec450[1] = iRec450[0];
			fRec441[1] = fRec441[0];
			fRec442[1] = fRec442[0];
			fRec443[1] = fRec443[0];
			fVec79[1] = fVec79[0];
			iRec445[1] = iRec445[0];
			fRec436[1] = fRec436[0];
			fRec437[1] = fRec437[0];
			fRec438[1] = fRec438[0];
			fVec78[1] = fVec78[0];
			iRec440[1] = iRec440[0];
			fRec431[1] = fRec431[0];
			fRec432[1] = fRec432[0];
			fRec433[1] = fRec433[0];
			fVec77[1] = fVec77[0];
			iRec435[1] = iRec435[0];
			fRec426[1] = fRec426[0];
			fRec427[1] = fRec427[0];
			fRec428[1] = fRec428[0];
			fVec76[1] = fVec76[0];
			iRec430[1] = iRec430[0];
			fRec421[1] = fRec421[0];
			fRec422[1] = fRec422[0];
			fRec423[1] = fRec423[0];
			fVec75[1] = fVec75[0];
			iRec425[1] = iRec425[0];
			fRec416[1] = fRec416[0];
			fRec417[1] = fRec417[0];
			fRec418[1] = fRec418[0];
			fVec74[1] = fVec74[0];
			iRec420[1] = iRec420[0];
			fRec411[1] = fRec411[0];
			fRec412[1] = fRec412[0];
			fRec413[1] = fRec413[0];
			fVec73[1] = fVec73[0];
			iRec415[1] = iRec415[0];
			fRec406[1] = fRec406[0];
			fRec407[1] = fRec407[0];
			fRec408[1] = fRec408[0];
			fVec72[1] = fVec72[0];
			iRec410[1] = iRec410[0];
			fRec401[1] = fRec401[0];
			fRec402[1] = fRec402[0];
			fRec403[1] = fRec403[0];
			fVec71[1] = fVec71[0];
			iRec405[1] = iRec405[0];
			fRec396[1] = fRec396[0];
			fRec397[1] = fRec397[0];
			fRec398[1] = fRec398[0];
			fVec70[1] = fVec70[0];
			iRec400[1] = iRec400[0];
			fRec391[1] = fRec391[0];
			fRec392[1] = fRec392[0];
			fRec393[1] = fRec393[0];
			fVec69[1] = fVec69[0];
			iRec395[1] = iRec395[0];
			fRec386[1] = fRec386[0];
			fRec387[1] = fRec387[0];
			fRec388[1] = fRec388[0];
			fVec68[1] = fVec68[0];
			iRec390[1] = iRec390[0];
			fRec382[1] = fRec382[0];
			fRec383[1] = fRec383[0];
			fRec384[1] = fRec384[0];
			fRec378[1] = fRec378[0];
			fRec379[1] = fRec379[0];
			fRec380[1] = fRec380[0];
			fRec374[1] = fRec374[0];
			fRec375[1] = fRec375[0];
			fRec376[1] = fRec376[0];
			fRec370[1] = fRec370[0];
			fRec371[1] = fRec371[0];
			fRec372[1] = fRec372[0];
			fRec366[1] = fRec366[0];
			fRec367[1] = fRec367[0];
			fRec368[1] = fRec368[0];
			fRec362[1] = fRec362[0];
			fRec363[1] = fRec363[0];
			fRec364[1] = fRec364[0];
			fRec358[1] = fRec358[0];
			fRec359[1] = fRec359[0];
			fRec360[1] = fRec360[0];
			fRec354[1] = fRec354[0];
			fRec355[1] = fRec355[0];
			fRec356[1] = fRec356[0];
			fRec350[1] = fRec350[0];
			fRec351[1] = fRec351[0];
			fRec352[1] = fRec352[0];
			fRec346[1] = fRec346[0];
			fRec347[1] = fRec347[0];
			fRec348[1] = fRec348[0];
			fRec342[1] = fRec342[0];
			fRec343[1] = fRec343[0];
			fRec344[1] = fRec344[0];
			fRec338[1] = fRec338[0];
			fRec339[1] = fRec339[0];
			fRec340[1] = fRec340[0];
			fRec334[1] = fRec334[0];
			fRec335[1] = fRec335[0];
			fRec336[1] = fRec336[0];
			fRec330[1] = fRec330[0];
			fRec331[1] = fRec331[0];
			fRec332[1] = fRec332[0];
			fRec326[1] = fRec326[0];
			fRec327[1] = fRec327[0];
			fRec328[1] = fRec328[0];
			fRec322[1] = fRec322[0];
			fRec323[1] = fRec323[0];
			fRec324[1] = fRec324[0];
			fRec318[1] = fRec318[0];
			fRec319[1] = fRec319[0];
			fRec320[1] = fRec320[0];
			fRec314[1] = fRec314[0];
			fRec315[1] = fRec315[0];
			fRec316[1] = fRec316[0];
			fRec310[1] = fRec310[0];
			fRec311[1] = fRec311[0];
			fRec312[1] = fRec312[0];
			fRec304[1] = fRec304[0];
			fRec305[1] = fRec305[0];
			fRec306[1] = fRec306[0];
			fVec67[1] = fVec67[0];
			iRec309[1] = iRec309[0];
			fVec66[1] = fVec66[0];
			iRec308[1] = iRec308[0];
			fRec298[1] = fRec298[0];
			fRec299[1] = fRec299[0];
			fRec300[1] = fRec300[0];
			fVec65[1] = fVec65[0];
			iRec303[1] = iRec303[0];
			fVec64[1] = fVec64[0];
			iRec302[1] = iRec302[0];
			fRec292[1] = fRec292[0];
			fRec293[1] = fRec293[0];
			fRec294[1] = fRec294[0];
			fVec63[1] = fVec63[0];
			iRec297[1] = iRec297[0];
			fVec62[1] = fVec62[0];
			iRec296[1] = iRec296[0];
			fRec286[1] = fRec286[0];
			fRec287[1] = fRec287[0];
			fRec288[1] = fRec288[0];
			fVec61[1] = fVec61[0];
			iRec291[1] = iRec291[0];
			fVec60[1] = fVec60[0];
			iRec290[1] = iRec290[0];
			fRec280[1] = fRec280[0];
			fRec281[1] = fRec281[0];
			fRec282[1] = fRec282[0];
			fVec59[1] = fVec59[0];
			iRec285[1] = iRec285[0];
			fVec58[1] = fVec58[0];
			iRec284[1] = iRec284[0];
			fRec273[1] = fRec273[0];
			fRec274[1] = fRec274[0];
			fRec275[1] = fRec275[0];
			fVec57[1] = fVec57[0];
			iRec279[1] = iRec279[0];
			fVec56[1] = fVec56[0];
			iRec278[1] = iRec278[0];
			fVec55[1] = fVec55[0];
			iRec277[1] = iRec277[0];
			fRec266[1] = fRec266[0];
			fRec267[1] = fRec267[0];
			fRec268[1] = fRec268[0];
			fVec54[1] = fVec54[0];
			iRec272[1] = iRec272[0];
			fVec53[1] = fVec53[0];
			iRec271[1] = iRec271[0];
			fVec52[1] = fVec52[0];
			iRec270[1] = iRec270[0];
			fRec259[1] = fRec259[0];
			fRec260[1] = fRec260[0];
			fRec261[1] = fRec261[0];
			fVec51[1] = fVec51[0];
			iRec265[1] = iRec265[0];
			fVec50[1] = fVec50[0];
			iRec264[1] = iRec264[0];
			fVec49[1] = fVec49[0];
			iRec263[1] = iRec263[0];
			fRec252[1] = fRec252[0];
			fRec253[1] = fRec253[0];
			fRec254[1] = fRec254[0];
			fVec48[1] = fVec48[0];
			iRec258[1] = iRec258[0];
			fVec47[1] = fVec47[0];
			iRec257[1] = iRec257[0];
			fVec46[1] = fVec46[0];
			iRec256[1] = iRec256[0];
			fRec245[1] = fRec245[0];
			fRec246[1] = fRec246[0];
			fRec247[1] = fRec247[0];
			fVec45[1] = fVec45[0];
			iRec251[1] = iRec251[0];
			fVec44[1] = fVec44[0];
			iRec250[1] = iRec250[0];
			fVec43[1] = fVec43[0];
			iRec249[1] = iRec249[0];
			fRec238[1] = fRec238[0];
			fRec239[1] = fRec239[0];
			fRec240[1] = fRec240[0];
			fVec42[1] = fVec42[0];
			iRec244[1] = iRec244[0];
			fVec41[1] = fVec41[0];
			iRec243[1] = iRec243[0];
			fVec40[1] = fVec40[0];
			iRec242[1] = iRec242[0];
			fRec231[1] = fRec231[0];
			fRec232[1] = fRec232[0];
			fRec233[1] = fRec233[0];
			fVec39[1] = fVec39[0];
			iRec237[1] = iRec237[0];
			fVec38[1] = fVec38[0];
			iRec236[1] = iRec236[0];
			fVec37[1] = fVec37[0];
			iRec235[1] = iRec235[0];
			fRec0[1] = fRec0[0];
			fVec36[1] = fVec36[0];
			fRec227[1] = fRec227[0];
			fRec229[1] = fRec229[0];
			fRec228[1] = fRec228[0];
			fRec223[1] = fRec223[0];
			fRec224[1] = fRec224[0];
			fRec225[1] = fRec225[0];
			fRec219[1] = fRec219[0];
			fRec220[1] = fRec220[0];
			fRec221[1] = fRec221[0];
			fRec215[1] = fRec215[0];
			fRec216[1] = fRec216[0];
			fRec217[1] = fRec217[0];
			fRec211[1] = fRec211[0];
			fRec212[1] = fRec212[0];
			fRec213[1] = fRec213[0];
			fRec207[1] = fRec207[0];
			fRec208[1] = fRec208[0];
			fRec209[1] = fRec209[0];
			fRec203[1] = fRec203[0];
			fRec204[1] = fRec204[0];
			fRec205[1] = fRec205[0];
			fRec199[1] = fRec199[0];
			fRec200[1] = fRec200[0];
			fRec201[1] = fRec201[0];
			fRec195[1] = fRec195[0];
			fRec196[1] = fRec196[0];
			fRec197[1] = fRec197[0];
			fRec191[1] = fRec191[0];
			fRec192[1] = fRec192[0];
			fRec193[1] = fRec193[0];
			fRec187[1] = fRec187[0];
			fRec188[1] = fRec188[0];
			fRec189[1] = fRec189[0];
			fRec183[1] = fRec183[0];
			fRec184[1] = fRec184[0];
			fRec185[1] = fRec185[0];
			fRec179[1] = fRec179[0];
			fRec180[1] = fRec180[0];
			fRec181[1] = fRec181[0];
			fRec175[1] = fRec175[0];
			fRec176[1] = fRec176[0];
			fRec177[1] = fRec177[0];
			fRec171[1] = fRec171[0];
			fRec172[1] = fRec172[0];
			fRec173[1] = fRec173[0];
			fRec167[1] = fRec167[0];
			fRec168[1] = fRec168[0];
			fRec169[1] = fRec169[0];
			fRec163[1] = fRec163[0];
			fRec164[1] = fRec164[0];
			fRec165[1] = fRec165[0];
			fRec159[1] = fRec159[0];
			fRec160[1] = fRec160[0];
			fRec161[1] = fRec161[0];
			fRec155[1] = fRec155[0];
			fRec156[1] = fRec156[0];
			fRec157[1] = fRec157[0];
			fRec151[1] = fRec151[0];
			fRec152[1] = fRec152[0];
			fRec153[1] = fRec153[0];
			fRec148[1] = fRec148[0];
			fRec150[1] = fRec150[0];
			fRec149[1] = fRec149[0];
			fRec145[1] = fRec145[0];
			fRec147[1] = fRec147[0];
			fRec146[1] = fRec146[0];
			fRec142[1] = fRec142[0];
			fRec144[1] = fRec144[0];
			fRec143[1] = fRec143[0];
			fRec139[1] = fRec139[0];
			fRec141[1] = fRec141[0];
			fRec140[1] = fRec140[0];
			fRec136[1] = fRec136[0];
			fRec138[1] = fRec138[0];
			fRec137[1] = fRec137[0];
			fRec133[1] = fRec133[0];
			fRec135[1] = fRec135[0];
			fRec134[1] = fRec134[0];
			fRec130[1] = fRec130[0];
			fRec132[1] = fRec132[0];
			fRec131[1] = fRec131[0];
			fRec127[1] = fRec127[0];
			fRec129[1] = fRec129[0];
			fRec128[1] = fRec128[0];
			fRec124[1] = fRec124[0];
			fRec126[1] = fRec126[0];
			fRec125[1] = fRec125[0];
			fRec121[1] = fRec121[0];
			fRec123[1] = fRec123[0];
			fRec122[1] = fRec122[0];
			fRec117[1] = fRec117[0];
			fRec118[1] = fRec118[0];
			fRec119[1] = fRec119[0];
			fRec113[1] = fRec113[0];
			fRec114[1] = fRec114[0];
			fRec115[1] = fRec115[0];
			fRec109[1] = fRec109[0];
			fRec110[1] = fRec110[0];
			fRec111[1] = fRec111[0];
			fRec105[1] = fRec105[0];
			fRec106[1] = fRec106[0];
			fRec107[1] = fRec107[0];
			fRec101[1] = fRec101[0];
			fRec102[1] = fRec102[0];
			fRec103[1] = fRec103[0];
			fRec93[1] = fRec93[0];
			fRec94[1] = fRec94[0];
			fRec95[1] = fRec95[0];
			fVec35[1] = fVec35[0];
			iRec100[1] = iRec100[0];
			fVec34[1] = fVec34[0];
			iRec99[1] = iRec99[0];
			fVec33[1] = fVec33[0];
			iRec97[1] = iRec97[0];
			fRec98[1] = fRec98[0];
			fRec85[1] = fRec85[0];
			fRec86[1] = fRec86[0];
			fRec87[1] = fRec87[0];
			fVec32[1] = fVec32[0];
			iRec92[1] = iRec92[0];
			fVec31[1] = fVec31[0];
			iRec91[1] = iRec91[0];
			fVec30[1] = fVec30[0];
			iRec89[1] = iRec89[0];
			fRec90[1] = fRec90[0];
			fRec77[1] = fRec77[0];
			fRec78[1] = fRec78[0];
			fRec79[1] = fRec79[0];
			fVec29[1] = fVec29[0];
			iRec84[1] = iRec84[0];
			fVec28[1] = fVec28[0];
			iRec83[1] = iRec83[0];
			fVec27[1] = fVec27[0];
			iRec81[1] = iRec81[0];
			fRec82[1] = fRec82[0];
			fRec69[1] = fRec69[0];
			fRec70[1] = fRec70[0];
			fRec71[1] = fRec71[0];
			fVec26[1] = fVec26[0];
			iRec76[1] = iRec76[0];
			fVec25[1] = fVec25[0];
			iRec75[1] = iRec75[0];
			fVec24[1] = fVec24[0];
			iRec73[1] = iRec73[0];
			fRec74[1] = fRec74[0];
			fRec61[1] = fRec61[0];
			fRec62[1] = fRec62[0];
			fRec63[1] = fRec63[0];
			fVec23[1] = fVec23[0];
			iRec68[1] = iRec68[0];
			fVec22[1] = fVec22[0];
			iRec67[1] = iRec67[0];
			fVec21[1] = fVec21[0];
			iRec65[1] = iRec65[0];
			fRec66[1] = fRec66[0];
			fRec53[1] = fRec53[0];
			fRec54[1] = fRec54[0];
			fRec55[1] = fRec55[0];
			fVec20[1] = fVec20[0];
			iRec60[1] = iRec60[0];
			fVec19[1] = fVec19[0];
			iRec59[1] = iRec59[0];
			fVec18[1] = fVec18[0];
			iRec57[1] = iRec57[0];
			fRec58[1] = fRec58[0];
			fRec45[1] = fRec45[0];
			fRec46[1] = fRec46[0];
			fRec47[1] = fRec47[0];
			fVec17[1] = fVec17[0];
			iRec52[1] = iRec52[0];
			fVec16[1] = fVec16[0];
			iRec51[1] = iRec51[0];
			fVec15[1] = fVec15[0];
			iRec49[1] = iRec49[0];
			fRec50[1] = fRec50[0];
			fRec37[1] = fRec37[0];
			fRec38[1] = fRec38[0];
			fRec39[1] = fRec39[0];
			fVec14[1] = fVec14[0];
			iRec44[1] = iRec44[0];
			fVec13[1] = fVec13[0];
			iRec43[1] = iRec43[0];
			fVec12[1] = fVec12[0];
			iRec41[1] = iRec41[0];
			fRec42[1] = fRec42[0];
			fRec29[1] = fRec29[0];
			fRec30[1] = fRec30[0];
			fRec31[1] = fRec31[0];
			fVec11[1] = fVec11[0];
			iRec36[1] = iRec36[0];
			fVec10[1] = fVec10[0];
			iRec35[1] = iRec35[0];
			fVec9[1] = fVec9[0];
			iRec33[1] = iRec33[0];
			fRec34[1] = fRec34[0];
			fRec21[1] = fRec21[0];
			fRec22[1] = fRec22[0];
			fRec23[1] = fRec23[0];
			fVec8[1] = fVec8[0];
			iRec28[1] = iRec28[0];
			fVec7[1] = fVec7[0];
			iRec27[1] = iRec27[0];
			fVec6[1] = fVec6[0];
			iRec25[1] = iRec25[0];
			fRec26[1] = fRec26[0];
			fRec14[1] = fRec14[0];
			fRec15[1] = fRec15[0];
			fRec16[1] = fRec16[0];
			fVec5[1] = fVec5[0];
			iRec20[1] = iRec20[0];
			fVec4[1] = fVec4[0];
			iRec19[1] = iRec19[0];
			fVec3[1] = fVec3[0];
			iRec18[1] = iRec18[0];
			fRec6[1] = fRec6[0];
			fRec7[1] = fRec7[0];
			fRec8[1] = fRec8[0];
			fVec2[1] = fVec2[0];
			iRec13[1] = iRec13[0];
			fVec1[1] = fVec1[0];
			iRec12[1] = iRec12[0];
			fVec0[1] = fVec0[0];
			iRec10[1] = iRec10[0];
			fRec11[1] = fRec11[0];
			fRec1[1] = fRec1[0];
			fRec3[1] = fRec3[0];
			fRec2[1] = fRec2[0];
			fRec4[1] = fRec4[0];
			fRec5[1] = fRec5[0];
		}
	}
};


